//******************************************************************************
//  Copyright (C), 2007-2013, Hisilicon Technologies Co., Ltd.
//
//******************************************************************************
// File name     : c_union_define.h
// Version       : 2.0
// Author        : 唐端午
// Created       : 2013-07-30
// Last Modified :
// Description   :  The C union definition file for the module pcie_multicast
// Function List :
// History       :
// 1 Date        :
// Author        : 唐端午
// Modification  : Create file
//******************************************************************************

#ifndef __HRD_PCIE_REG_OFFSET__
#define __HRD_PCIE_REG_OFFSET__

#define PCIE_X4_CTRL_0_REG           (0xF8)   /* PCIE系统控制寄存器0 */
#define PCIE_X4_CTRL_1_REG           (0xFC)   /* PCIE系统控制寄存器1 */
#define PCIE_X4_CTRL_2_REG           (0x100)  /* PCIE系统控制寄存器2 */
#define PCIE_X4_CTRL_3_REG           (0x104)  /* PCIE系统控制寄存器3 */
#define PCIE_X4_CTRL_4_REG           (0x108)  /* PCIE系统控制寄存器4 */
#define PCIE_X4_CTRL_5_REG           (0x10C)  /* PCIE系统控制寄存器5 */
#define PCIE_X4_CTRL_6_REG           (0x110)  /* PCIE系统控制寄存器6 */
#define PCIE_X4_CTRL_7_REG           (0x114)  /* PCIE系统控制寄存器7 */
#define PCIE_X4_CTRL_8_REG           (0x118)  /* PCIE系统控制寄存器8 */
#define PCIE_X4_CTRL_9_REG           (0x11C)  /* PCIE系统控制寄存器9 */
#define PCIE_X4_CTRL_10_REG          (0x120)  /* PCIE系统控制寄存器10 */
#define PCIE_X4_CTRL_11_REG          (0x124)  /* PCIE系统控制寄存器11 */
#define PCIE_X4_SYS_CTRL12_REG       (0x0)    /* PCIE的系统控制器12 */
#define PCIE_X4_SYS_CTRL13_REG       (0x4)    /* PCIE的系统控制器13 */
#define PCIE_X4_SYS_CTRL14_REG       (0x8)    /* PCIE的系统控制器14 */
#define PCIE_X4_SYS_CTRL15_REG       (0xC)    /* PCIE的系统控制器15 */
#define PCIE_X4_SYS_CTRL16_REG       (0x10)   /* PCIE的系统控制器16 */
#define PCIE_X4_SYS_CTRL17_REG       (0x14)   /* PCIE的系统控制器17 */
#define PCIE_X4_SYS_CTRL18_REG       (0x18)   /* PCIE的系统控制器18 */
#define PCIE_X4_SYS_CTRL19_REG       (0x1C)   /* PCIE的系统控制器19 */
#define PCIE_X4_SYS_CTRL20_REG       (0x20)   /* PCIE的系统控制器20 */
#define PCIE_X4_SYS_CTRL21_REG       (0x24)   /* PCIE的系统控制器21 */
#define PCIE_X4_SYS_CTRL22_REG       (0x28)   /* PCIE的系统控制器22 */
#define PCIE_X4_SYS_CTRL23_REG       (0x2C)   /* PCIE的系统控制器23 */
#define PCIE_X4_SYS_STATE5_REG       (0x30)   /* PCIE的系统状态寄存器5 */
#define PCIE_X4_SYS_STATE6_REG       (0x34)   /* PCIE的系统状态寄存器6 */
#define PCIE_X4_SYS_STATE7_REG       (0x38)   /* PCIE的系统状态寄存器7 */
#define PCIE_X4_SYS_STATE8_REG       (0x3C)   /* PCIE的系统状态寄存器8 */
#define PCIE_X4_SYS_STATE9_REG       (0x40)   /* PCIE的系统状态寄存器9 */
#define PCIE_X4_SYS_STATE10_REG      (0x44)   /* PCIE的系统状态寄存器10 */
#define PCIE_X4_SYS_STATE11_REG      (0x48)   /* PCIE的系统状态寄存器11 */
#define PCIE_X4_SYS_STATE12_REG      (0x4C)   /* PCIE的系统状态寄存器12 */
#define PCIE_X4_SYS_STATE13_REG      (0x50)   /* PCIE的系统状态寄存器13 */
#define PCIE_X4_SYS_STATE14_REG      (0x54)   /* PCIE的系统状态寄存器14 */
#define PCIE_X4_SYS_STATE15_REG      (0x58)   /* PCIE的系统状态寄存器15 */
#define PCIE_X4_SYS_STATE16_REG      (0x5C)   /* PCIE的系统状态寄存器16 */
#define PCIE_X4_SYS_STATE17_REG      (0x60)   /* PCIE的系统状态寄存器17 */
#define PCIE_X4_SYS_STATE18_REG      (0x64)   /* PCIE的系统状态寄存器18 */
#define PCIE_X4_SYS_STATE19_REG      (0x68)   /* PCIE的系统状态寄存器19 */
#define PCIE_X4_SYS_STATE20_REG      (0x6C)   /* PCIE的系统状态寄存器20 */
#define PCIE_X4_SYS_STATE21_REG      (0x70)   /* PCIE的系统状态寄存器21 */
#define PCIE_X4_SYS_STATE22_REG      (0x74)   /* PCIE的系统状态寄存器22 */
#define PCIE_X4_SYS_STATE23_REG      (0x78)   /* PCIE的系统状态寄存器23 */
#define PCIE_X4_SYS_STATE24_REG      (0x7C)   /* PCIE的系统状态寄存器24 */
#define PCIE_X4_SYS_STATE25_REG      (0x80)   /* PCIE的系统状态寄存器25 */
#define PCIE_X4_SYS_STATE26_REG      (0x84)   /* PCIE的系统状态寄存器26 */
#define PCIE_X4_SYS_STATE27_REG      (0x88)   /* PCIE的系统状态寄存器27 */
#define PCIE_X4_SYS_STATE28_REG      (0x8C)   /* PCIE的系统状态寄存器28 */
#define PCIE_X4_SYS_STATE29_REG      (0x90)   /* PCIE的系统状态寄存器29 */
#define PCIE_X4_SYS_STATE30_REG      (0x94)   /* PCIE的系统状态寄存器30 */
#define PCIE_X4_SYS_STATE31_REG      (0x98)   /* PCIE的系统状态寄存器31 */
#define PCIE_X4_SYS_STATE32_REG      (0x9C)   /* PCIE的系统状态寄存器32 */
#define PCIE_X4_SYS_STATE33_REG      (0xA0)   /* PCIE的系统状态寄存器33 */
#define PCIE_X4_SYS_STATE34_REG      (0xA4)   /* PCIE的系统状态寄存器34 */
#define PCIE_X4_SYS_STATE35_REG      (0xA8)   /* PCIE的系统状态寄存器35 */
#define PCIE_X4_SYS_STATE36_REG      (0xAC)   /* PCIE的系统状态寄存器36 */
#define PCIE_X4_SYS_STATE37_REG      (0xB0)   /* PCIE的系统状态寄存器37 */
#define PCIE_X4_SYS_STATE38_REG      (0xB4)   /* PCIE的系统状态寄存器38 */
#define PCIE_X4_SYS_STATE39_REG      (0xB8)   /* PCIE的系统状态寄存器39 */
#define PCIE_X4_SYS_STATE40_REG      (0xBC)   /* PCIE的系统状态寄存器40 */
#define PCIE_X4_SYS_STATE41_REG      (0xC0)   /* PCIE的系统状态寄存器41 */
#define PCIE_X4_SYS_STATE42_REG      (0xC4)   /* PCIE的系统状态寄存器42 */
#define PCIE_X4_SYS_STATE43_REG      (0xC8)   /* PCIE的系统状态寄存器43 */
#define PCIE_X4_SYS_STATE44_REG      (0xCC)   /* PCIE的系统状态寄存器44 */
#define PCIE_X4_SYS_STATE45_REG      (0xD0)   /* PCIE的系统状态寄存器45 */
#define PCIE_X4_SYS_STATE46_REG      (0xD4)   /* PCIE的系统状态寄存器46 */
#define PCIE_X4_SYS_STATE47_REG      (0xD8)   /* PCIE的系统状态寄存器47 */
#define PCIE_X4_SYS_STATE48_REG      (0xDC)   /* PCIE的系统状态寄存器48 */
#define PCIE_X4_SYS_STATE49_REG      (0xE0)   /* PCIE的系统状态寄存器49 */
#define PCIE_X4_SYS_STATE50_REG      (0xE4)   /* PCIE的系统状态寄存器50 */
#define PCIE_X4_SYS_STATE51_REG      (0xE8)   /* PCIE的系统状态寄存器51 */
#define PCIE_X4_SYS_STATE52_REG      (0xEC)   /* PCIE的系统状态寄存器52 */
#define PCIE_X4_SYS_STATE53_REG      (0xF0)   /* PCIE的系统状态寄存器53 */
#define PCIE_X4_SYS_STATE54_REG      (0xF4)   /* PCIE的系统状态寄存器54 */
#define PCIE_X4_SYS_STATE55_REG      (0x128)  /* PCIE的系统状态寄存器55 */
#define PCIE_X4_SYS_STATE56_REG      (0x12C)  /* PCIE的系统状态寄存器56 */
#define PCIE_X4_SYS_STATE57_REG      (0x130)  /* PCIE的系统状态寄存器57 */
#define PCIE_X4_SYS_STATE58_REG      (0x134)  /* PCIE的系统状态寄存器58 */
#define PCIE_X4_SYS_STATE59_REG      (0x138)  /* PCIE的系统状态寄存器59 */
#define PCIE_X4_SYS_STATE60_REG      (0x13C)  /* PCIE的系统状态寄存器60 */
#define PCIE_X4_SYS_STATE61_REG      (0x140)  /* PCIE的系统状态寄存器61 */
#define PCIE_X4_SYS_STATE62_REG      (0x144)  /* PCIE的系统状态寄存器62 */
#define PCIE_X4_SYS_STATE63_REG      (0x148)  /* PCIE的系统状态寄存器63 */
#define PCIE_X4_SYS_STATE64_REG      (0x14C)  /* PCIE的系统状态寄存器64 */
#define PCIE_X4_SYS_STATE65_REG      (0x150)  /* PCIE的系统状态寄存器65 */
#define PCIE_X4_SYS_STATE66_REG      (0x154)  /* PCIE的系统状态寄存器66 */
#define PCIE_X4_SYS_STATE67_REG      (0x158)  /* PCIE的系统状态寄存器67 */
#define PCIE_X4_SYS_STATE68_REG      (0x15C)  /* PCIE的系统状态寄存器68 */
#define PCIE_X4_SYS_STATE69_REG      (0x160)  /* PCIE的系统状态寄存器69 */
#define PCIE_X4_SYS_STATE70_REG      (0x164)  /* PCIE的系统状态寄存器70 */
#define PCIE_X4_SYS_STATE71_REG      (0x168)  /* PCIE的系统状态寄存器71 */
#define PCIE_X4_SYS_STATE72_REG      (0x16C)  /* PCIE的系统状态寄存器72 */
#define PCIE_X4_SYS_STATE73_REG      (0x170)  /* PCIE的系统状态寄存器73 */
#define PCIE_X4_SYS_STATE74_REG      (0x174)  /* PCIE的系统状态寄存器74 */
#define PCIE_X4_SYS_STATE75_REG      (0x178)  /* PCIE的系统状态寄存器75 */
#define PCIE_X4_SYS_STATE76_REG      (0x17C)  /* PCIE的系统状态寄存器76 */
#define PCIE_X4_SYS_STATE77_REG      (0x840)  /* PCIE的系统状态寄存器77 */
#define PCIE_X4_SYS_STATE78_REG      (0x184)  /* PCIE的系统状态寄存器78 */
#define PCIE_X4_SYS_STAT79_REG       (0x188)  /* PCIE的系统状态寄存器79 */
#define PCIE_X4_SYS_STATE80_REG      (0x18C)  /* PCIE的系统状态寄存器80 */
#define PCIE_X4_SYS_STATE81_REG      (0x190)  /* PCIE的系统状态寄存器81 */
#define PCIE_X4_SYS_STATE82_REG      (0x194)  /* PCIE的系统状态寄存器82 */
#define PCIE_X4_SYS_STATE83_REG      (0x198)  /* PCIE的系统状态寄存器83 */
#define PCIE_X4_SYS_STATE84_REG      (0x19C)  /* PCIE的系统状态寄存器84 */
#define PCIE_X4_SYS_STATE85_REG      (0x1A0)  /* PCIE的系统状态寄存器85 */
#define PCIE_X4_SYS_STATE86_REG      (0x1A4)  /* PCIE的系统状态寄存器86 */
#define PCIE_X4_SYS_STATE87_REG      (0x1A8)  /* PCIE的系统状态寄存器87 */
#define PCIE_X4_SYS_STATE88_REG      (0x1AC)  /* PCIE的系统状态寄存器88 */
#define PCIE_X4_SYS_STATE89_REG      (0x1B0)  /* PCIE的系统状态寄存器89 */
#define PCIE_X4_SYS_CTRL24_REG       (0x1B4)  /* PCIE的系统控制器24 */
#define PCIE_X4_SYS_CTRL25_REG       (0x1B8)  /* PCIE的系统控制器25 */
#define PCIE_X4_SYS_CTRL26_REG       (0x1BC)  /* PCIE的系统控制器26 */
#define PCIE_X4_SYS_CTRL27_REG       (0x1C0)  /* PCIE的系统控制器27 */
#define PCIE_X4_SYS_CTRL28_REG       (0x1C4)  /* PCIE的系统控制器28 */
#define PCIE_X4_SYS_CTRL29_REG       (0x1C8)  /* PCIE的系统控制器29 */
#define PCIE_X4_SYS_CTRL30_REG       (0x1CC)  /* PCIE的系统控制器30 */
#define PCIE_X4_SYS_CTRL31_REG       (0x1D0)  /* PCIE的系统控制器31 */
#define PCIE_X4_SYS_CTRL32_REG       (0x1D4)  /* PCIE的系统控制器32 */
#define PCIE_X4_SYS_CTRL33_REG       (0x1D8)  /* PCIE的系统控制器33 */
#define PCIE_X4_SYS_STATE90_REG      (0x1DC)  /* PCIE的系统状态寄存器90 */
#define PCIE_X4_SYS_STATE91_REG      (0x1E0)  /* PCIE的系统状态寄存器91 */
#define PCIE_X4_SYS_STATE92_REG      (0x1E4)  /* PCIE的系统状态寄存器92 */
#define PCIE_X4_SYS_STATE93_REG      (0x1E8)  /* PCIE的系统状态寄存器93 */
#define PCIE_X4_SYS_STATE94_REG      (0x1EC)  /* PCIE的系统状态寄存器94 */
#define PCIE_X4_SYS_STATE95_REG      (0x1F0)  /* PCIE的系统状态寄存器95 */
#define PCIE_X4_SYS_STATE96_REG      (0x1F4)  /* PCIE的系统状态寄存器96 */
#define PCIE_X4_SYS_STATE97_REG      (0x1F8)  /* PCIE的系统状态寄存器97 */
#define PCIE_X4_SYS_STATE98_REG      (0x1FC)  /* PCIE的系统状态寄存器98 */
#define PCIE_X4_SYS_STATE99_REG      (0x200)  /* PCIE的系统状态寄存器99 */
// define the union u_pcie_x4ctrl_0
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie2_slv_awmisc_info  : 22  ; // [21..0]
        unsigned int    pcie2_slv_resp_err_map  : 6   ; // [27..22]
        unsigned int    pcie_slv_device_type  : 4   ; // [31..28]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_0;

// define the union u_pcie_x4ctrl_1
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_slv_armisc_info  : 22  ; // [21..0]
        unsigned int    pcie_common_clocks    : 1   ; // [22]
        unsigned int    pcie_app_clk_req_n    : 1   ; // [23]
        unsigned int    pcie_ven_msg_code     : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_1;

// define the union u_pcie_x4ctrl_2
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_mstr_bmisc_info  : 14  ; // [13..0]
        unsigned int    pcie_mstr_rmisc_info  : 12  ; // [25..14]
        unsigned int    pcie_ven_msi_req      : 1   ; // [26]
        unsigned int    pcie_ven_msi_vector   : 5   ; // [31..27]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_2;

// define the union u_pcie_x4ctrl_3
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie2_ven_msg_req     : 1   ; // [0]
        unsigned int    pcie2_ven_msg_fmt     : 2   ; // [2..1]
        unsigned int    pcie2_ven_msg_type    : 5   ; // [7..3]
        unsigned int    pcie2_ven_msg_td      : 1   ; // [8]
        unsigned int    pcie2_ven_msg_ep      : 1   ; // [9]
        unsigned int    pcie2_ven_msg_attr    : 2   ; // [11..10]
        unsigned int    pcie2_ven_msg_len     : 10  ; // [21..12]
        unsigned int    pcie2_ven_msg_tag     : 8   ; // [29..22]
        unsigned int    pcie_mstr_rresp_int_enable  : 1   ; // [30]
        unsigned int    pcie_mstr_bresp_int_enable  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_3;

// define the union u_pcie_x4ctrl_7
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie2_app_init_rst    : 1   ; // [0]
        unsigned int    pcie2_app_req_entr_l1  : 1   ; // [1]
        unsigned int    pcie2_app_ready_entr_l23  : 1   ; // [2]
        unsigned int    pcie2_app_req_exit_l1  : 1   ; // [3]
        unsigned int    pcie2_app_req_retry_en  : 1   ; // [4]
        unsigned int    pcie2_sys_int         : 1   ; // [5]
        unsigned int    pcie2_outband_pwrup_cmd  : 1   ; // [6]
        unsigned int    pcie2_app_unlock_msg  : 1   ; // [7]
        unsigned int    pcie2_apps_pm_xmt_turnoff  : 1   ; // [8]
        unsigned int    pcie2_apps_pm_xmt_pme  : 1   ; // [9]
        unsigned int    pcie2_sys_aux_pwr_det  : 1   ; // [10]
        unsigned int    pcie2_app_ltssm_enable  : 1   ; // [11]
        unsigned int    pcie2_cfg_pwr_ctrler_ctrl_pol  : 1   ; // [12]
        unsigned int    reserved_7            : 1   ; // [13]
        unsigned int    pcie2_sys_mrl_sensor_state  : 1   ; // [14]
        unsigned int    pcie2_sys_pwr_fault_det  : 1   ; // [15]
        unsigned int    pcie2_sys_mrl_sensor_chged  : 1   ; // [16]
        unsigned int    reserved_6            : 1   ; // [17]
        unsigned int    pcie2_sys_cmd_cpled_int  : 1   ; // [18]
        unsigned int    pcie2_sys_eml_interlock_engaged  : 1   ; // [19]
        unsigned int    pcie2_cfg_l1_clk_removal_en  : 1   ; // [20]
        unsigned int    pcie0_int_ctrl        : 8   ; // [28..21]
        unsigned int    pcie_linkdown_auto_rstn_enable  : 1   ; // [29]
        unsigned int    pcie_err_bresp_enable  : 1   ; // [30]
        unsigned int    pcie_err_rresp_enable  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_7;

// define the union u_pcie_x4ctrl_8
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    diag_ctrl_bus_tmp     : 3   ; // [2..0]
        unsigned int    reserved_11           : 4   ; // [6..3]
        unsigned int    pcie_state3_sel       : 2   ; // [8..7]
        unsigned int    pcie_state2_sel       : 2   ; // [10..9]
        unsigned int    reserved_10           : 4   ; // [14..11]
        unsigned int    link_down_count_cfg_en  : 1   ; // [15]
        unsigned int    reserved_9            : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_8;

// define the union u_pcie_x4ctrl_9
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_l1_aux_clk_switch_core_clk_gate_en  : 1   ; // [0]
        unsigned int    cfg_l1_mac_powerdown_override_to_p2_en  : 1   ; // [1]
        unsigned int    reserved_13           : 30  ; // [31..2]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_9;

// define the union u_pcie_x4ctrl_10
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_aer_rc_err_msi_mask  : 1   ; // [0]
        unsigned int    cfg_sys_err_rc_mask   : 1   ; // [1]
        unsigned int    radm_correctable_err_mask  : 1   ; // [2]
        unsigned int    radm_nonfatal_err_mask  : 1   ; // [3]
        unsigned int    radm_fatal_err_mask   : 1   ; // [4]
        unsigned int    radm_pm_pme_mask      : 1   ; // [5]
        unsigned int    radm_pm_to_ack_mask   : 1   ; // [6]
        unsigned int    ven_msi_int_mask      : 1   ; // [7]
        unsigned int    radm_cpl_timeout_mask  : 1   ; // [8]
        unsigned int    radm_msg_unlock_mask  : 1   ; // [9]
        unsigned int    cfg_pme_msi_mask      : 1   ; // [10]
        unsigned int    bridge_flush_not_mask  : 1   ; // [11]
        unsigned int    link_req_rst_not_mask  : 1   ; // [12]
        unsigned int    pcie_p2_exit_int_mask  : 1   ; // [13]
        unsigned int    pcie_rx_lane_flip_en_tmp  : 1   ; // [14]
        unsigned int    pcie_tx_lane_flip_en_tmp  : 1   ; // [15]
        unsigned int    radm_pm_turnoff_mask  : 1   ; // [16]
        unsigned int    reserved_15           : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_10;

// define the union u_pcie_x4ctrl_11
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_aer_rc_err_msi_clr  : 1   ; // [0]
        unsigned int    cfg_sys_err_rc_clr    : 1   ; // [1]
        unsigned int    radm_correctable_err_clr  : 1   ; // [2]
        unsigned int    radm_nonfatal_err_clr  : 1   ; // [3]
        unsigned int    radm_fatal_err_clr    : 1   ; // [4]
        unsigned int    radm_pm_pme_clr       : 1   ; // [5]
        unsigned int    radm_pm_to_ack_clr    : 1   ; // [6]
        unsigned int    ven_msi_int_clr       : 1   ; // [7]
        unsigned int    radm_cpl_timeout_clr  : 1   ; // [8]
        unsigned int    radm_msg_unlock_clr   : 1   ; // [9]
        unsigned int    cfg_pme_msi_clr       : 1   ; // [10]
        unsigned int    bridge_flush_not_clr  : 1   ; // [11]
        unsigned int    link_req_rst_not_clr  : 1   ; // [12]
        unsigned int    pcie_p2_exit_int_clr  : 1   ; // [13]
        unsigned int    pcie_slv_err_int_clr  : 1   ; // [14]
        unsigned int    pcie_mstr_err_int_clr  : 1   ; // [15]
        unsigned int    radm_pm_turnoff_clr   : 1   ; // [16]
        unsigned int    reserved_17           : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4ctrl_11;

// define the union u_pcie_x4sys_ctrl12
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    slv_awmisc_info_func_num  : 1   ; // [0]
        unsigned int    slv_awmisc_info_vfunc_active  : 1   ; // [1]
        unsigned int    slv_awmisc_info_vfunc_num  : 1   ; // [2]
        unsigned int    reserved_21           : 1   ; // [3]
        unsigned int    slv_armisc_info_func_num  : 1   ; // [4]
        unsigned int    slv_armisc_info_vfunc_active  : 1   ; // [5]
        unsigned int    slv_armisc_info_vfunc_num  : 1   ; // [6]
        unsigned int    reserved_20           : 1   ; // [7]
        unsigned int    slv_awmisc_info_nw    : 1   ; // [8]
        unsigned int    slv_awmisc_info_ats   : 2   ; // [10..9]
        unsigned int    slv_armisc_info_nw    : 1   ; // [11]
        unsigned int    slv_armisc_info_ats   : 2   ; // [13..12]
        unsigned int    mstr_bmisc_info_ats   : 2   ; // [15..14]
        unsigned int    mstr_rmisc_info_ats   : 2   ; // [17..16]
        unsigned int    pcie_rfs_ctrl         : 6   ; // [23..18]
        unsigned int    pcie_rft_ctrl         : 7   ; // [30..24]
        unsigned int    reserved_19           : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl12;

// define the union u_pcie_x4sys_ctrl16
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    app_flr_pf_done       : 1   ; // [0]
        unsigned int    app_flr_vf_done       : 2   ; // [2..1]
        unsigned int    reserved_27           : 5   ; // [7..3]
        unsigned int    ven_msi_vfunc_active  : 1   ; // [8]
        unsigned int    ven_msi_vfunc_num     : 1   ; // [9]
        unsigned int    ven_msg_vfunc_active  : 1   ; // [10]
        unsigned int    ven_msg_vfunc_num     : 1   ; // [11]
        unsigned int    reserved_26           : 20  ; // [31..12]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl16;

// define the union u_pcie_x4sys_ctrl20
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ro_sel                : 1   ; // [0]
        unsigned int    dbi_func_num          : 1   ; // [1]
        unsigned int    dbi_vfunc_num         : 1   ; // [2]
        unsigned int    dbi_vfunc_active      : 1   ; // [3]
        unsigned int    dbi_addr_h20          : 20  ; // [23..4]
        unsigned int    dbi_bar_num           : 3   ; // [26..24]
        unsigned int    dbi_rom_access        : 1   ; // [27]
        unsigned int    dbi_io_access         : 1   ; // [28]
        unsigned int    memicg_bypass         : 1   ; // [29]
        unsigned int    reserved_32           : 2   ; // [31..30]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl20;

// define the union u_pcie_x4sys_ctrl21
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_sys_pre_det_state  : 1   ; // [0]
        unsigned int    pcie_sys_atten_button_pressed  : 1   ; // [1]
        unsigned int    cfg_axi_user          : 6   ; // [7..2]
        unsigned int    reserved_34           : 24  ; // [31..8]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl21;

// define the union u_pcie_x4sys_state5
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    mstr_awmisc_info_func_num  : 1   ; // [0]
        unsigned int    mstr_awmisc_info_vfunc_active  : 1   ; // [1]
        unsigned int    mstr_awmisc_info_vfunc_num  : 1   ; // [2]
        unsigned int    reserved_41           : 1   ; // [3]
        unsigned int    mstr_armisc_info_func_num  : 1   ; // [4]
        unsigned int    mstr_armisc_info_vfunc_active  : 1   ; // [5]
        unsigned int    mstr_armisc_info_vfunc_num  : 1   ; // [6]
        unsigned int    reserved_40           : 1   ; // [7]
        unsigned int    mstr_awmisc_info_nw   : 1   ; // [8]
        unsigned int    mstr_awmisc_info_ats  : 2   ; // [10..9]
        unsigned int    mstr_armisc_info_nw   : 1   ; // [11]
        unsigned int    mstr_armisc_info_ats  : 2   ; // [13..12]
        unsigned int    slv_bmisc_info_ats    : 2   ; // [15..14]
        unsigned int    slv_rmisc_info_ats    : 2   ; // [17..16]
        unsigned int    reserved_39           : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state5;

// define the union u_pcie_x4sys_state6
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_flr_pf_active     : 1   ; // [0]
        unsigned int    cfg_flr_vf_active     : 2   ; // [2..1]
        unsigned int    reserved_43           : 29  ; // [31..3]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state6;

// define the union u_pcie_x4sys_state7
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_timeout_vfunc_active  : 1   ; // [0]
        unsigned int    radm_timeout_vfunc_num  : 1   ; // [1]
        unsigned int    trgt_timeout_cpl_vfunc_active  : 1   ; // [2]
        unsigned int    trgt_timeout_cpl_vfunc_num  : 1   ; // [3]
        unsigned int    reserved_45           : 28  ; // [31..4]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state7;

// define the union u_pcie_x4sys_state11
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_msi_64            : 1   ; // [0]
        unsigned int    cfg_vf_msi_en         : 2   ; // [2..1]
        unsigned int    cfg_vf_msi_64         : 2   ; // [4..3]
        unsigned int    cfg_multi_msi_en      : 3   ; // [7..5]
        unsigned int    cfg_vf_multi_msi_en   : 6   ; // [13..8]
        unsigned int    reserved_50           : 2   ; // [15..14]
        unsigned int    cfg_msi_data          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state11;

// define the union u_pcie_x4sys_state12
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_vf_en             : 1   ; // [0]
        unsigned int    cfg_ari_fwd_en        : 1   ; // [1]
        unsigned int    cfg_vf_bme            : 2   ; // [3..2]
        unsigned int    reserved_53           : 4   ; // [7..4]
        unsigned int    cfg_num_vf            : 16  ; // [23..8]
        unsigned int    reserved_52           : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state12;

// define the union u_pcie_x4sys_state20
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    slv_bmisc_info        : 11  ; // [10..0]
        unsigned int    slv_rmisc_info        : 11  ; // [21..11]
        unsigned int    rtlh_rfc_upd          : 1   ; // [22]
        unsigned int    reserved_62           : 9   ; // [31..23]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state20;

// define the union u_pcie_x4sys_state21
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_msix_en           : 1   ; // [0]
        unsigned int    cfg_msix_func_mask    : 1   ; // [1]
        unsigned int    cfg_vf_msix_func_mask  : 2   ; // [3..2]
        unsigned int    cfg_vf_msix_en        : 2   ; // [5..4]
        unsigned int    reserved_64           : 26  ; // [31..6]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state21;

// define the union u_pcie_x4sys_state22
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    lbc_ext_vfunc_active  : 1   ; // [0]
        unsigned int    lbc_ext_vfunc_num     : 1   ; // [1]
        unsigned int    lbc_dbi_ack           : 1   ; // [2]
        unsigned int    pcie_mstr_awmisc_info  : 24  ; // [26..3]
        unsigned int    reserved_66           : 5   ; // [31..27]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state22;

// define the union u_pcie_x4sys_state27
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    trgt_cpl_timeout      : 1   ; // [0]
        unsigned int    trgt_timeout_cpl_func_num  : 1   ; // [1]
        unsigned int    trgt_timeout_cpl_tc   : 3   ; // [4..2]
        unsigned int    trgt_timeout_cpl_attr  : 2   ; // [6..5]
        unsigned int    trgt_timeout_cpl_len  : 12  ; // [18..7]
        unsigned int    trgt_lookup_empty     : 1   ; // [19]
        unsigned int    reserved_72           : 12  ; // [31..20]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state27;

// define the union u_pcie_x4sys_state28
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    trgt_timeout_lookup_id  : 8   ; // [7..0]
        unsigned int    trgt_lookup_id        : 8   ; // [15..8]
        unsigned int    radm_timeout_cpl_tag  : 8   ; // [23..16]
        unsigned int    reserved_74           : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state28;

// define the union u_pcie_x4sys_state29
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    trgt_cpl_timeout      : 1   ; // [0]
        unsigned int    radm_timeout_func_num  : 1   ; // [1]
        unsigned int    radm_timeout_cpl_tc   : 3   ; // [4..2]
        unsigned int    radm_timeout_cpl_attr  : 2   ; // [6..5]
        unsigned int    radm_timeout_cpl_len  : 12  ; // [18..7]
        unsigned int    radm_pm_turnoff       : 1   ; // [19]
        unsigned int    reserved_76           : 12  ; // [31..20]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state29;

// define the union u_pcie_x4sys_state30
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_pbus_num          : 8   ; // [7..0]
        unsigned int    cfg_pbus_dev_num      : 5   ; // [12..8]
        unsigned int    cfg_link_auto_bw_int  : 1   ; // [13]
        unsigned int    cfg_bw_mgt_int        : 1   ; // [14]
        unsigned int    reserved_78           : 17  ; // [31..15]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state30;

// define the union u_pcie_x4sys_state32
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    mstr_awmisc_info_dma  : 6   ; // [5..0]
        unsigned int    mstr_armisc_info_dma  : 6   ; // [11..6]
        unsigned int    cfg_hw_auto_sp_dis    : 1   ; // [12]
        unsigned int    link_timeout_flush_not  : 1   ; // [13]
        unsigned int    mac_phy_clk_req_n     : 1   ; // [14]
        unsigned int    wake_ref_rst_n        : 1   ; // [15]
        unsigned int    pcie_wake             : 1   ; // [16]
        unsigned int    reserved_81           : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state32;

// define the union u_pcie_x4sys_state39
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_msg_unlock_reqid  : 16  ; // [15..0]
        unsigned int    radm_nonfatal_err_reqid  : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state39;

// define the union u_pcie_x4sys_state44
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_unlock_reqid     : 16  ; // [15..0]
        unsigned int    radm_nonfatal_err_reqid  : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state44;

// define the union u_pcie_x4sys_state49
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_pm_pme_reqid     : 16  ; // [15..0]
        unsigned int    radm_pm_ack_to_reqid  : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state49;

// define the union u_pcie_x4sys_state54
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_pm_turnoff_req_id  : 16  ; // [15..0]
        unsigned int    reserved_104          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state54;

// define the union u_pcie_x4sys_state56
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    mst_rdata_latency     : 16  ; // [15..0]
        unsigned int    slv_rdata_latency     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state56;

// define the union u_pcie_x4sys_ctrl25
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    err_detect_mask       : 22  ; // [21..0]
        unsigned int    reserved_144          : 10  ; // [31..22]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl25;

// define the union u_pcie_x4sys_ctrl26
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    err_detect_int_clr    : 22  ; // [21..0]
        unsigned int    reserved_146          : 10  ; // [31..22]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl26;

// define the union u_pcie_x4sys_ctrl27
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    err_multpl_mask       : 22  ; // [21..0]
        unsigned int    reserved_148          : 10  ; // [31..22]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl27;

// define the union u_pcie_x4sys_ctrl28
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    err_multpl_int_clr    : 2   ; // [1..0]
        unsigned int    reserved_150          : 30  ; // [31..2]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl28;

// define the union u_pcie_x4sys_ctrl29
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_153          : 4   ; // [3..0]
        unsigned int    slv_rdata_record_en   : 1   ; // [4]
        unsigned int    slv_wdata_record_en   : 1   ; // [5]
        unsigned int    mstr_rdata_record_en  : 1   ; // [6]
        unsigned int    mstr_wdata_record_en  : 1   ; // [7]
        unsigned int    slv_raddr_record_en   : 1   ; // [8]
        unsigned int    slv_waddr_record_en   : 1   ; // [9]
        unsigned int    mstr_raddr_record_en  : 1   ; // [10]
        unsigned int    mstr_wraddr_record_en  : 1   ; // [11]
        unsigned int    reserved_152          : 20  ; // [31..12]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl29;

// define the union u_pcie_x4sys_ctrl31
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ntb_mmio_cpld_buffer_ecc_en  : 1   ; // [0]
        unsigned int    ntb_mmio_cpld_buffer_err_deect_clr  : 1   ; // [1]
        unsigned int    ntb_mmio_cpld_buffer_err_multpi_clr  : 1   ; // [2]
        unsigned int    reserved_156          : 29  ; // [31..3]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_ctrl31;

// define the union u_pcie_x4sys_state97
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    inbound_mwr_count     : 16  ; // [15..0]
        unsigned int    inbound_mwr_count_over  : 1   ; // [16]
        unsigned int    mmio_cpld_buf0_err_detect  : 1   ; // [17]
        unsigned int    mmio_cpld_buf1_err_detect  : 1   ; // [18]
        unsigned int    mmio_cpld_buf0_multpl_err  : 1   ; // [19]
        unsigned int    mmio_cpld_buf1_multpl_err  : 1   ; // [20]
        unsigned int    reserved_168          : 11  ; // [31..21]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4sys_state97;

// define the union u_pcie_x4stat_0
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie2_gm_cmposer_lookup_err  : 1   ; // [0]
        unsigned int    pcie2_radmx_cmposer_lookup_err  : 1   ; // [1]
        unsigned int    pcie2_cfg_pwr_ind     : 2   ; // [3..2]
        unsigned int    pcie2_cfg_atten_ind   : 2   ; // [5..4]
        unsigned int    pcie2_cfg_pwr_ctrler_ctrl  : 1   ; // [6]
        unsigned int    pcie2_pm_xtlh_block_tlp  : 1   ; // [7]
        unsigned int    pcie2_cfg_mem_space_en  : 1   ; // [8]
        unsigned int    pcie2_cfg_rcb         : 1   ; // [9]
        unsigned int    pcie2_rdlh_link_up    : 1   ; // [10]
        unsigned int    pcie2_pm_curnt_state  : 3   ; // [13..11]
        unsigned int    pcie2_cfg_aer_rc_err_int  : 1   ; // [14]
        unsigned int    reserved_176          : 1   ; // [15]
        unsigned int    pcie2_cfg_aer_int_msg_num  : 5   ; // [20..16]
        unsigned int    reserved_175          : 1   ; // [21]
        unsigned int    pcie2_xmlh_link_up    : 1   ; // [22]
        unsigned int    pcie2_wake            : 1   ; // [23]
        unsigned int    pcie2_cfg_eml_control  : 1   ; // [24]
        unsigned int    pcie2_hp_pme          : 1   ; // [25]
        unsigned int    pcie2_hp_int          : 1   ; // [26]
        unsigned int    pcie2_hp_msi          : 1   ; // [27]
        unsigned int    pcie2_pm_status       : 1   ; // [28]
        unsigned int    pcie2_ref_clk_req_n   : 1   ; // [29]
        unsigned int    reserved_174          : 2   ; // [31..30]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4stat_0;

// define the union u_pcie_x4stat_1
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    axi_parity_errs_reg   : 4   ; // [3..0]
        unsigned int    app_parity_errs_reg   : 3   ; // [6..4]
        unsigned int    pm_linkst_in_l1       : 1   ; // [7]
        unsigned int    pm_linkst_in_l2       : 1   ; // [8]
        unsigned int    pm_linkst_l2_exit     : 1   ; // [9]
        unsigned int    mac_phy_power_down    : 2   ; // [11..10]
        unsigned int    radm_correctabl_err_reg  : 1   ; // [12]
        unsigned int    radm_nonfatal_err_reg  : 1   ; // [13]
        unsigned int    radm_fatal_err_reg    : 1   ; // [14]
        unsigned int    radm_pm_to_pme_reg    : 1   ; // [15]
        unsigned int    radm_pm_to_ack_reg    : 1   ; // [16]
        unsigned int    radm_cpl_timeout_reg  : 1   ; // [17]
        unsigned int    radm_msg_unlock_reg   : 1   ; // [18]
        unsigned int    cfg_pme_msi_reg       : 1   ; // [19]
        unsigned int    bridge_flush_not_reg  : 1   ; // [20]
        unsigned int    link_req_rst_not_reg  : 1   ; // [21]
        unsigned int    pcie2_cfg_aer_rc_err_msi  : 1   ; // [22]
        unsigned int    pcie2_cfg_sys_err_rc  : 1   ; // [23]
        unsigned int    reserved_177          : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4stat_1;

// define the union u_pcie_x4stat_3
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_msg_req_id       : 16  ; // [15..0]
        unsigned int    reserved_178          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4stat_3;

// define the union u_pcie_x4stat_4
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ltssm_state           : 6   ; // [5..0]
        unsigned int    mac_phy_rate          : 2   ; // [7..6]
        unsigned int    pcie_slv_err_int_state  : 1   ; // [8]
        unsigned int    retry_sram_addr       : 10  ; // [18..9]
        unsigned int    pcie_mstr_rresp_int_state  : 1   ; // [19]
        unsigned int    pcie_mstr_bresp_int_state  : 1   ; // [20]
        unsigned int    pcie_radm_inta_int_state  : 1   ; // [21]
        unsigned int    pcie_radm_intb_int_state  : 1   ; // [22]
        unsigned int    pcie_radm_intc_int_state  : 1   ; // [23]
        unsigned int    pcie_radm_intd_int_state  : 1   ; // [24]
        unsigned int    pme_int_state         : 1   ; // [25]
        unsigned int    radm_vendr_msg_int_state  : 1   ; // [26]
        unsigned int    reserved_179          : 5   ; // [31..27]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_x4stat_4;


#define PCIE_CTRL_0_REG           (0xF8)   /* PCIE系统控制寄存器0 */
#define PCIE_CTRL_1_REG           (0xFC)   /* PCIE系统控制寄存器1 */
#define PCIE_CTRL_2_REG           (0x100)  /* PCIE系统控制寄存器2 */
#define PCIE_CTRL_3_REG           (0x104)  /* PCIE系统控制寄存器3 */
#define PCIE_CTRL_4_REG           (0x108)  /* PCIE系统控制寄存器4 */
#define PCIE_CTRL_5_REG           (0x10C)  /* PCIE系统控制寄存器5 */
#define PCIE_CTRL_6_REG           (0x110)  /* PCIE系统控制寄存器6 */
#define PCIE_CTRL_7_REG           (0x114)  /* PCIE系统控制寄存器7 */
#define PCIE_CTRL_8_REG           (0x118)  /* PCIE系统控制寄存器8 */
#define PCIE_CTRL_9_REG           (0x11C)  /* PCIE系统控制寄存器9 */
#define PCIE_CTRL_10_REG          (0x120)  /* PCIE系统控制寄存器10 */
#define PCIE_CTRL_11_REG          (0x124)  /* PCIE系统控制寄存器11 */
#define PCIE_SYS_CTRL12_REG       (0x0)    /* PCIE的系统控制器12 */
#define PCIE_SYS_CTRL13_REG       (0x4)    /* PCIE的系统控制器13 */
#define PCIE_SYS_CTRL14_REG       (0x8)    /* PCIE的系统控制器14 */
#define PCIE_SYS_CTRL15_REG       (0xC)    /* PCIE的系统控制器15 */
#define PCIE_SYS_CTRL16_REG       (0x10)   /* PCIE的系统控制器16 */
#define PCIE_SYS_CTRL17_REG       (0x14)   /* PCIE的系统控制器17 */
#define PCIE_SYS_CTRL18_REG       (0x18)   /* PCIE的系统控制器18 */
#define PCIE_SYS_CTRL19_REG       (0x1C)   /* PCIE的系统控制器19 */
#define PCIE_SYS_CTRL20_REG       (0x20)   /* PCIE的系统控制器20 */
#define PCIE_SYS_CTRL21_REG       (0x24)   /* PCIE的系统控制器21 */
#define PCIE_SYS_CTRL22_REG       (0x28)   /* PCIE的系统控制器22 */
#define PCIE_SYS_CTRL23_REG       (0x2C)   /* PCIE的系统控制器23 */
#define PCIE_SYS_STATE5_REG       (0x30)   /* PCIE的系统状态寄存器5 */
#define PCIE_SYS_STATE6_REG       (0x34)   /* PCIE的系统状态寄存器6 */
#define PCIE_SYS_STATE7_REG       (0x38)   /* PCIE的系统状态寄存器7 */
#define PCIE_SYS_STATE8_REG       (0x3C)   /* PCIE的系统状态寄存器8 */
#define PCIE_SYS_STATE9_REG       (0x40)   /* PCIE的系统状态寄存器9 */
#define PCIE_SYS_STATE10_REG      (0x44)   /* PCIE的系统状态寄存器10 */
#define PCIE_SYS_STATE11_REG      (0x48)   /* PCIE的系统状态寄存器11 */
#define PCIE_SYS_STATE12_REG      (0x4C)   /* PCIE的系统状态寄存器12 */
#define PCIE_SYS_STATE13_REG      (0x50)   /* PCIE的系统状态寄存器13 */
#define PCIE_SYS_STATE14_REG      (0x54)   /* PCIE的系统状态寄存器14 */
#define PCIE_SYS_STATE15_REG      (0x58)   /* PCIE的系统状态寄存器15 */
#define PCIE_SYS_STATE16_REG      (0x5C)   /* PCIE的系统状态寄存器16 */
#define PCIE_SYS_STATE17_REG      (0x60)   /* PCIE的系统状态寄存器17 */
#define PCIE_SYS_STATE18_REG      (0x64)   /* PCIE的系统状态寄存器18 */
#define PCIE_SYS_STATE19_REG      (0x68)   /* PCIE的系统状态寄存器19 */
#define PCIE_SYS_STATE20_REG      (0x6C)   /* PCIE的系统状态寄存器20 */
#define PCIE_SYS_STATE21_REG      (0x70)   /* PCIE的系统状态寄存器21 */
#define PCIE_SYS_STATE22_REG      (0x74)   /* PCIE的系统状态寄存器22 */
#define PCIE_SYS_STATE23_REG      (0x78)   /* PCIE的系统状态寄存器23 */
#define PCIE_SYS_STATE24_REG      (0x7C)   /* PCIE的系统状态寄存器24 */
#define PCIE_SYS_STATE25_REG      (0x80)   /* PCIE的系统状态寄存器25 */
#define PCIE_SYS_STATE26_REG      (0x84)   /* PCIE的系统状态寄存器26 */
#define PCIE_SYS_STATE27_REG      (0x88)   /* PCIE的系统状态寄存器27 */
#define PCIE_SYS_STATE28_REG      (0x8C)   /* PCIE的系统状态寄存器28 */
#define PCIE_SYS_STATE29_REG      (0x90)   /* PCIE的系统状态寄存器29 */
#define PCIE_SYS_STATE30_REG      (0x94)   /* PCIE的系统状态寄存器30 */
#define PCIE_SYS_STATE31_REG      (0x98)   /* PCIE的系统状态寄存器31 */
#define PCIE_SYS_STATE32_REG      (0x9C)   /* PCIE的系统状态寄存器32 */
#define PCIE_SYS_STATE33_REG      (0xA0)   /* PCIE的系统状态寄存器33 */
#define PCIE_SYS_STATE34_REG      (0xA4)   /* PCIE的系统状态寄存器34 */
#define PCIE_SYS_STATE35_REG      (0xA8)   /* PCIE的系统状态寄存器35 */
#define PCIE_SYS_STATE36_REG      (0xAC)   /* PCIE的系统状态寄存器36 */
#define PCIE_SYS_STATE37_REG      (0xB0)   /* PCIE的系统状态寄存器37 */
#define PCIE_SYS_STATE38_REG      (0xB4)   /* PCIE的系统状态寄存器38 */
#define PCIE_SYS_STATE39_REG      (0xB8)   /* PCIE的系统状态寄存器39 */
#define PCIE_SYS_STATE40_REG      (0xBC)   /* PCIE的系统状态寄存器40 */
#define PCIE_SYS_STATE41_REG      (0xC0)   /* PCIE的系统状态寄存器41 */
#define PCIE_SYS_STATE42_REG      (0xC4)   /* PCIE的系统状态寄存器42 */
#define PCIE_SYS_STATE43_REG      (0xC8)   /* PCIE的系统状态寄存器43 */
#define PCIE_SYS_STATE44_REG      (0xCC)   /* PCIE的系统状态寄存器44 */
#define PCIE_SYS_STATE45_REG      (0xD0)   /* PCIE的系统状态寄存器45 */
#define PCIE_SYS_STATE46_REG      (0xD4)   /* PCIE的系统状态寄存器46 */
#define PCIE_SYS_STATE47_REG      (0xD8)   /* PCIE的系统状态寄存器47 */
#define PCIE_SYS_STATE48_REG      (0xDC)   /* PCIE的系统状态寄存器48 */
#define PCIE_SYS_STATE49_REG      (0xE0)   /* PCIE的系统状态寄存器49 */
#define PCIE_SYS_STATE50_REG      (0xE4)   /* PCIE的系统状态寄存器50 */
#define PCIE_SYS_STATE51_REG      (0xE8)   /* PCIE的系统状态寄存器51 */
#define PCIE_SYS_STATE52_REG      (0xEC)   /* PCIE的系统状态寄存器52 */
#define PCIE_SYS_STATE53_REG      (0xF0)   /* PCIE的系统状态寄存器53 */
#define PCIE_SYS_STATE54_REG      (0xF4)   /* PCIE的系统状态寄存器54 */
#define PCIE_SYS_STATE55_REG      (0x128)  /* PCIE的系统状态寄存器55 */
#define PCIE_SYS_STATE56_REG      (0x12C)  /* PCIE的系统状态寄存器56 */
#define PCIE_SYS_STATE57_REG      (0x130)  /* PCIE的系统状态寄存器57 */
#define PCIE_SYS_STATE58_REG      (0x134)  /* PCIE的系统状态寄存器58 */
#define PCIE_SYS_STATE59_REG      (0x138)  /* PCIE的系统状态寄存器59 */
#define PCIE_SYS_STATE60_REG      (0x13C)  /* PCIE的系统状态寄存器60 */
#define PCIE_SYS_STATE61_REG      (0x140)  /* PCIE的系统状态寄存器61 */
#define PCIE_SYS_STATE62_REG      (0x144)  /* PCIE的系统状态寄存器62 */
#define PCIE_SYS_STATE63_REG      (0x148)  /* PCIE的系统状态寄存器63 */
#define PCIE_SYS_STATE64_REG      (0x14C)  /* PCIE的系统状态寄存器64 */
#define PCIE_SYS_STATE65_REG      (0x150)  /* PCIE的系统状态寄存器65 */
#define PCIE_SYS_STATE66_REG      (0x154)  /* PCIE的系统状态寄存器66 */
#define PCIE_SYS_STATE67_REG      (0x158)  /* PCIE的系统状态寄存器67 */
#define PCIE_SYS_STATE68_REG      (0x15C)  /* PCIE的系统状态寄存器68 */
#define PCIE_SYS_STATE69_REG      (0x160)  /* PCIE的系统状态寄存器69 */
#define PCIE_SYS_STATE70_REG      (0x164)  /* PCIE的系统状态寄存器70 */
#define PCIE_SYS_STATE71_REG      (0x168)  /* PCIE的系统状态寄存器71 */
#define PCIE_SYS_STATE72_REG      (0x16C)  /* PCIE的系统状态寄存器72 */
#define PCIE_SYS_STATE73_REG      (0x170)  /* PCIE的系统状态寄存器73 */
#define PCIE_SYS_STATE74_REG      (0x174)  /* PCIE的系统状态寄存器74 */
#define PCIE_SYS_STATE75_REG      (0x178)  /* PCIE的系统状态寄存器75 */
#define PCIE_SYS_STATE76_REG      (0x17C)  /* PCIE的系统状态寄存器76 */
#define PCIE_SYS_STATE77_REG      (0x180)  /* PCIE的系统状态寄存器77 */
#define PCIE_SYS_STATE78_REG      (0x184)  /* PCIE的系统状态寄存器78 */
#define PCIE_SYS_STAT79_REG       (0x188)  /* PCIE的系统状态寄存器79 */
#define PCIE_SYS_STATE80_REG      (0x18C)  /* PCIE的系统状态寄存器80 */
#define PCIE_SYS_STATE81_REG      (0x190)  /* PCIE的系统状态寄存器81 */
#define PCIE_SYS_STATE82_REG      (0x194)  /* PCIE的系统状态寄存器82 */
#define PCIE_SYS_STATE83_REG      (0x198)  /* PCIE的系统状态寄存器83 */
#define PCIE_SYS_STATE84_REG      (0x19C)  /* PCIE的系统状态寄存器84 */
#define PCIE_SYS_STATE85_REG      (0x1A0)  /* PCIE的系统状态寄存器85 */
#define PCIE_SYS_STATE86_REG      (0x1A4)  /* PCIE的系统状态寄存器86 */
#define PCIE_SYS_STATE87_REG      (0x1A8)  /* PCIE的系统状态寄存器87 */
#define PCIE_SYS_STATE88_REG      (0x1AC)  /* PCIE的系统状态寄存器88 */
#define PCIE_SYS_STATE89_REG      (0x1B0)  /* PCIE的系统状态寄存器89 */
#define PCIE_SYS_CTRL24_REG       (0x1B4)  /* PCIE的系统控制器24 */
#define PCIE_SYS_CTRL25_REG       (0x1B8)  /* PCIE的系统控制器25 */
#define PCIE_SYS_CTRL26_REG       (0x1BC)  /* PCIE的系统控制器26 */
#define PCIE_SYS_CTRL27_REG       (0x1C0)  /* PCIE的系统控制器27 */
#define PCIE_SYS_CTRL28_REG       (0x1C4)  /* PCIE的系统控制器28 */
#define PCIE_SYS_CTRL29_REG       (0x1C8)  /* PCIE的系统控制器29 */
#define PCIE_SYS_CTRL30_REG       (0x1CC)  /* PCIE的系统控制器30 */
#define PCIE_SYS_CTRL31_REG       (0x1D0)  /* PCIE的系统控制器31 */
#define PCIE_SYS_CTRL32_REG       (0x1D4)  /* PCIE的系统控制器32 */
#define PCIE_SYS_CTRL33_REG       (0x1D8)  /* PCIE的系统控制器33 */
#define PCIE_SYS_CTRL34_REG       (0x224)  /* PCIE的系统控制器34 */
#define PCIE_SYS_CTRL35_REG       (0x228)  /* PCIE的系统控制器35 */
#define PCIE_SYS_CTRL36_REG       (0x22C)  /* PCIE的系统控制器36 */
#define PCIE_SYS_CTRL37_REG       (0x230)  /* PCIE的系统控制器37 */
#define PCIE_SYS_CTRL38_REG       (0x234)  /* PCIE的系统控制器38 */
#define PCIE_SYS_CTRL39_REG       (0x238)  /* PCIE的系统控制器39 */
#define PCIE_SYS_CTRL40_REG       (0x23C)  /* PCIE的系统控制器40 */
#define PCIE_SYS_CTRL41_REG       (0x240)  /* PCIE的系统控制器41 */
#define PCIE_SYS_CTRL42_REG       (0x244)  /* PCIE的系统控制器42 */
#define PCIE_SYS_CTRL43_REG       (0x248)  /* PCIE的系统控制器43 */
#define PCIE_SYS_CTRL44_REG       (0x24C)  /* PCIE的系统控制器44 */
#define PCIE_SYS_CTRL45_REG       (0x250)  /* PCIE的系统控制器45 */
#define PCIE_SYS_CTRL46_REG       (0x254)  /* PCIE的系统控制器46 */
#define PCIE_SYS_CTRL47_REG       (0x258)  /* PCIE的系统控制器47 */
#define PCIE_SYS_STATE90_REG      (0x1DC)  /* PCIE的系统状态寄存器90 */
#define PCIE_SYS_STATE91_REG      (0x1E0)  /* PCIE的系统状态寄存器91 */
#define PCIE_SYS_STATE92_REG      (0x1E4)  /* PCIE的系统状态寄存器92 */
#define PCIE_SYS_STATE93_REG      (0x1E8)  /* PCIE的系统状态寄存器93 */
#define PCIE_SYS_STATE94_REG      (0x1EC)  /* PCIE的系统状态寄存器94 */
#define PCIE_SYS_STATE95_REG      (0x1F0)  /* PCIE的系统状态寄存器95 */
#define PCIE_SYS_STATE96_REG      (0x1F4)  /* PCIE的系统状态寄存器96 */
#define PCIE_SYS_STATE97_REG      (0x1F8)  /* PCIE的系统状态寄存器97 */
#define PCIE_SYS_STATE98_REG      (0x1FC)  /* PCIE的系统状态寄存器98 */
#define PCIE_SYS_STATE99_REG      (0x200)  /* PCIE的系统状态寄存器99 */
#define PCIE_SYS_STATE100_REG     (0x204)  /* PCIE的系统状态寄存器100 */
#define PCIE_SYS_STATE101_REG     (0x208)  /* PCIE的系统状态寄存器101 */
#define PCIE_SYS_STATE102_REG     (0x20C)  /* PCIE的系统状态寄存器102 */
#define PCIE_SYS_STATE103_REG     (0x210)  /* PCIE的系统状态寄存器103 */
#define PCIE_SYS_STATE104_REG     (0x214)  /* PCIE的系统状态寄存器104 */
#define PCIE_SYS_STATE105_REG     (0x218)  /* PCIE的系统状态寄存器105 */
#define PCIE_SYS_STATE106_REG     (0x21C)  /* PCIE的系统状态寄存器106 */
#define PCIE_SYS_STATE107_REG     (0x220)  /* PCIE的系统状态寄存器107 */
// define the union u_pcie_ctrl_0
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie2_slv_awmisc_info  : 22  ; // [21..0]
        unsigned int    pcie2_slv_resp_err_map  : 6   ; // [27..22]
        unsigned int    pcie_slv_device_type  : 4   ; // [31..28]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_0;

// define the union u_pcie_ctrl_1
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_slv_armisc_info  : 22  ; // [21..0]
        unsigned int    pcie_common_clocks    : 1   ; // [22]
        unsigned int    pcie_app_clk_req_n    : 1   ; // [23]
        unsigned int    pcie_ven_msg_code     : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_1;

// define the union u_pcie_ctrl_2
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_mstr_bmisc_info  : 14  ; // [13..0]
        unsigned int    pcie_mstr_rmisc_info  : 12  ; // [25..14]
        unsigned int    pcie_ven_msi_req      : 1   ; // [26]
        unsigned int    pcie_ven_msi_vector   : 5   ; // [31..27]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_2;

// define the union u_pcie_ctrl_3
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie2_ven_msg_req     : 1   ; // [0]
        unsigned int    pcie2_ven_msg_fmt     : 2   ; // [2..1]
        unsigned int    pcie2_ven_msg_type    : 5   ; // [7..3]
        unsigned int    pcie2_ven_msg_td      : 1   ; // [8]
        unsigned int    pcie2_ven_msg_ep      : 1   ; // [9]
        unsigned int    pcie2_ven_msg_attr    : 2   ; // [11..10]
        unsigned int    pcie2_ven_msg_len     : 10  ; // [21..12]
        unsigned int    pcie2_ven_msg_tag     : 8   ; // [29..22]
        unsigned int    pcie_mstr_rresp_int_enable  : 1   ; // [30]
        unsigned int    pcie_mstr_bresp_int_enable  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_3;

// define the union u_pcie_ctrl_7
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie2_app_init_rst    : 1   ; // [0]
        unsigned int    pcie2_app_req_entr_l1  : 1   ; // [1]
        unsigned int    pcie2_app_ready_entr_l23  : 1   ; // [2]
        unsigned int    pcie2_app_req_exit_l1  : 1   ; // [3]
        unsigned int    pcie2_app_req_retry_en  : 1   ; // [4]
        unsigned int    pcie2_sys_int         : 1   ; // [5]
        unsigned int    pcie2_outband_pwrup_cmd  : 1   ; // [6]
        unsigned int    pcie2_app_unlock_msg  : 1   ; // [7]
        unsigned int    pcie2_apps_pm_xmt_turnoff  : 1   ; // [8]
        unsigned int    pcie2_apps_pm_xmt_pme  : 1   ; // [9]
        unsigned int    pcie2_sys_aux_pwr_det  : 1   ; // [10]
        unsigned int    pcie2_app_ltssm_enable  : 1   ; // [11]
        unsigned int    pcie2_cfg_pwr_ctrler_ctrl_pol  : 1   ; // [12]
        unsigned int    reserved_8            : 1   ; // [13]
        unsigned int    pcie2_sys_mrl_sensor_state  : 1   ; // [14]
        unsigned int    pcie2_sys_pwr_fault_det  : 1   ; // [15]
        unsigned int    pcie2_sys_mrl_sensor_chged  : 1   ; // [16]
        unsigned int    reserved_7            : 1   ; // [17]
        unsigned int    pcie2_sys_cmd_cpled_int  : 1   ; // [18]
        unsigned int    pcie2_sys_eml_interlock_engaged  : 1   ; // [19]
        unsigned int    pcie2_cfg_l1_clk_removal_en  : 1   ; // [20]
        unsigned int    pcie0_int_ctrl        : 8   ; // [28..21]
        unsigned int    pcie_linkdown_auto_rstn_disable  : 1   ; // [29]
        unsigned int    pcie_err_bresp_enable  : 1   ; // [30]
        unsigned int    pcie_err_rresp_enable  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_7;

// define the union u_pcie_ctrl_8
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    diag_ctrl_bus_tmp     : 3   ; // [2..0]
        unsigned int    reserved_12           : 4   ; // [6..3]
        unsigned int    pcie_state3_sel       : 2   ; // [8..7]
        unsigned int    pcie_state2_sel       : 2   ; // [10..9]
        unsigned int    reserved_11           : 5   ; // [15..11]
        unsigned int    reserved_10           : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_8;

// define the union u_pcie_ctrl_9
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_l1_aux_clk_switch_core_clk_gate_en  : 1   ; // [0]
        unsigned int    cfg_l1_mac_powerdown_override_to_p2_en  : 1   ; // [1]
        unsigned int    reserved_14           : 30  ; // [31..2]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_9;

// define the union u_pcie_ctrl_10
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_aer_rc_err_msi_mask  : 1   ; // [0]
        unsigned int    cfg_sys_err_rc_mask   : 1   ; // [1]
        unsigned int    radm_correctable_err_mask  : 1   ; // [2]
        unsigned int    radm_nonfatal_err_mask  : 1   ; // [3]
        unsigned int    radm_fatal_err_mask   : 1   ; // [4]
        unsigned int    radm_pm_pme_mask      : 1   ; // [5]
        unsigned int    radm_pm_to_ack_mask   : 1   ; // [6]
        unsigned int    ven_msi_int_mask      : 1   ; // [7]
        unsigned int    radm_cpl_timeout_mask  : 1   ; // [8]
        unsigned int    radm_msg_unlock_mask  : 1   ; // [9]
        unsigned int    cfg_pme_msi_mask      : 1   ; // [10]
        unsigned int    bridge_flush_not_mask  : 1   ; // [11]
        unsigned int    link_req_rst_not_mask  : 1   ; // [12]
        unsigned int    pcie_p2_exit_int_mask  : 1   ; // [13]
        unsigned int    pcie_rx_lane_flip_en_tmp  : 1   ; // [14]
        unsigned int    pcie_tx_lane_flip_en_tmp  : 1   ; // [15]
        unsigned int    radm_pm_turnoff_mask  : 1   ; // [16]
        unsigned int    reserved_16           : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_10;

// define the union u_pcie_ctrl_11
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_aer_rc_err_msi_clr  : 1   ; // [0]
        unsigned int    cfg_sys_err_rc_clr    : 1   ; // [1]
        unsigned int    radm_correctable_err_clr  : 1   ; // [2]
        unsigned int    radm_nonfatal_err_clr  : 1   ; // [3]
        unsigned int    radm_fatal_err_clr    : 1   ; // [4]
        unsigned int    radm_pm_pme_clr       : 1   ; // [5]
        unsigned int    radm_pm_to_ack_clr    : 1   ; // [6]
        unsigned int    ven_msi_int_clr       : 1   ; // [7]
        unsigned int    radm_cpl_timeout_clr  : 1   ; // [8]
        unsigned int    radm_msg_unlock_clr   : 1   ; // [9]
        unsigned int    cfg_pme_msi_clr       : 1   ; // [10]
        unsigned int    reserved_19           : 1   ; // [11]
        unsigned int    link_req_rst_not_clr  : 1   ; // [12]
        unsigned int    pcie_p2_exit_int_clr  : 1   ; // [13]
        unsigned int    pcie_slv_err_int_clr  : 1   ; // [14]
        unsigned int    pcie_mstr_err_int_clr  : 1   ; // [15]
        unsigned int    radm_pm_turnoff_clr   : 1   ; // [16]
        unsigned int    ntb_mode              : 1   ; // [17]
        unsigned int    app_crosslink_time
     : 8  ;// [18 : 25]
        unsigned int    cfg_local_cpu           :  1 ;//[26]
        unsigned int    reserved_18           : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_ctrl_11;

// define the union u_pcie_sys_ctrl12
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    slv_awmisc_info_func_num  : 1   ; // [0]
        unsigned int    slv_awmisc_info_vfunc_active  : 1   ; // [1]
        unsigned int    slv_awmisc_info_vfunc_num  : 1   ; // [2]
        unsigned int    reserved_23           : 1   ; // [3]
        unsigned int    slv_armisc_info_func_num  : 1   ; // [4]
        unsigned int    slv_armisc_info_vfunc_active  : 1   ; // [5]
        unsigned int    slv_armisc_info_vfunc_num  : 1   ; // [6]
        unsigned int    reserved_22           : 1   ; // [7]
        unsigned int    slv_awmisc_info_nw    : 1   ; // [8]
        unsigned int    slv_awmisc_info_ats   : 2   ; // [10..9]
        unsigned int    slv_armisc_info_nw    : 1   ; // [11]
        unsigned int    slv_armisc_info_ats   : 2   ; // [13..12]
        unsigned int    mstr_bmisc_info_ats   : 2   ; // [15..14]
        unsigned int    mstr_rmisc_info_ats   : 2   ; // [17..16]
        unsigned int    reserved_21           : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl12;

// define the union u_pcie_sys_ctrl16
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    app_flr_pf_done       : 1   ; // [0]
        unsigned int    app_flr_vf_done       : 2   ; // [2..1]
        unsigned int    reserved_29           : 5   ; // [7..3]
        unsigned int    ven_msi_vfunc_active  : 1   ; // [8]
        unsigned int    ven_msi_vfunc_num     : 1   ; // [9]
        unsigned int    ven_msg_vfunc_active  : 1   ; // [10]
        unsigned int    ven_msg_vfunc_num     : 1   ; // [11]
        unsigned int    cfg_msi_aw_asid_trans : 1   ; // [12]
        unsigned int    reserved_13           : 3  ; // [15..13]
        unsigned int    cfg_msi_asid          : 8  ; // [23..16]
        unsigned int    link_down_ltssm_disable_en : 1   ; // [24]
        unsigned int    reserved_25           : 7  ; // [31..25]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl16;

// define the union u_pcie_sys_ctrl20
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ro_sel                : 1   ; // [0]
        unsigned int    dbi_func_num          : 1   ; // [1]
        unsigned int    dbi_vfunc_num         : 1   ; // [2]
        unsigned int    dbi_vfunc_active      : 1   ; // [3]
        unsigned int    dbi_addr_h20          : 20  ; // [23..4]
        unsigned int    dbi_bar_num           : 3   ; // [26..24]
        unsigned int    dbi_rom_access        : 1   ; // [27]
        unsigned int    dbi_io_access         : 1   ; // [28]
        unsigned int    memicg_bypass         : 1   ; // [29]
        unsigned int    apb_rd_tab_en         : 1   ; // [30]
        unsigned int    apb_rd_tab_sel        : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl20;

// define the union u_pcie_sys_ctrl21
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_sys_pre_det_state  : 1   ; // [0]
        unsigned int    pcie_sys_atten_button_pressed  : 1   ; // [1]
        unsigned int    cfg_axi_aw_user       : 7   ; // [8..2]
        unsigned int    cfg_axi_ar_user       : 7   ; // [15..9]
        unsigned int    slv_ar_atu_bypass     : 1   ; // [16]
        unsigned int    slv_aw_atu_bypass     : 1   ; // [17]
        unsigned int    reserved_35           : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl21;

// define the union u_pcie_sys_state5
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    mstr_awmisc_info_func_num  : 1   ; // [0]
        unsigned int    mstr_awmisc_info_vfunc_active  : 1   ; // [1]
        unsigned int    mstr_awmisc_info_vfunc_num  : 1   ; // [2]
        unsigned int    reserved_42           : 1   ; // [3]
        unsigned int    mstr_armisc_info_func_num  : 1   ; // [4]
        unsigned int    mstr_armisc_info_vfunc_active  : 1   ; // [5]
        unsigned int    mstr_armisc_info_vfunc_num  : 1   ; // [6]
        unsigned int    reserved_41           : 1   ; // [7]
        unsigned int    mstr_awmisc_info_nw   : 1   ; // [8]
        unsigned int    mstr_awmisc_info_ats  : 2   ; // [10..9]
        unsigned int    mstr_armisc_info_nw   : 1   ; // [11]
        unsigned int    mstr_armisc_info_ats  : 2   ; // [13..12]
        unsigned int    slv_bmisc_info_ats    : 2   ; // [15..14]
        unsigned int    slv_rmisc_info_ats    : 2   ; // [17..16]
        unsigned int    reserved_40           : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state5;

// define the union u_pcie_sys_state6
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_flr_pf_active     : 1   ; // [0]
        unsigned int    cfg_flr_vf_active     : 2   ; // [2..1]
        unsigned int    reserved_44           : 29  ; // [31..3]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state6;

// define the union u_pcie_sys_state7
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_timeout_vfunc_active  : 1   ; // [0]
        unsigned int    radm_timeout_vfunc_num  : 1   ; // [1]
        unsigned int    trgt_timeout_cpl_vfunc_active  : 1   ; // [2]
        unsigned int    trgt_timeout_cpl_vfunc_num  : 1   ; // [3]
        unsigned int    reserved_46           : 28  ; // [31..4]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state7;

// define the union u_pcie_sys_state11
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_msi_64            : 1   ; // [0]
        unsigned int    cfg_vf_msi_en         : 2   ; // [2..1]
        unsigned int    cfg_vf_msi_64         : 2   ; // [4..3]
        unsigned int    cfg_multi_msi_en      : 3   ; // [7..5]
        unsigned int    cfg_vf_multi_msi_en   : 6   ; // [13..8]
        unsigned int    reserved_51           : 2   ; // [15..14]
        unsigned int    cfg_msi_data          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state11;

// define the union u_pcie_sys_state12
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_vf_en             : 1   ; // [0]
        unsigned int    cfg_ari_fwd_en        : 1   ; // [1]
        unsigned int    cfg_vf_bme            : 2   ; // [3..2]
        unsigned int    reserved_54           : 4   ; // [7..4]
        unsigned int    cfg_num_vf            : 16  ; // [23..8]
        unsigned int    reserved_53           : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state12;

// define the union u_pcie_sys_state20
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    slv_bmisc_info        : 11  ; // [10..0]
        unsigned int    slv_rmisc_info        : 11  ; // [21..11]
        unsigned int    rtlh_rfc_upd          : 1   ; // [22]
        unsigned int    reserved_63           : 9   ; // [31..23]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state20;

// define the union u_pcie_sys_state21
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_msix_en           : 1   ; // [0]
        unsigned int    cfg_msix_func_mask    : 1   ; // [1]
        unsigned int    cfg_vf_msix_func_mask  : 2   ; // [3..2]
        unsigned int    cfg_vf_msix_en        : 2   ; // [5..4]
        unsigned int    reserved_65           : 26  ; // [31..6]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state21;

// define the union u_pcie_sys_state22
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    lbc_ext_vfunc_active  : 1   ; // [0]
        unsigned int    lbc_ext_vfunc_num     : 1   ; // [1]
        unsigned int    lbc_dbi_ack           : 1   ; // [2]
        unsigned int    pcie_mstr_awmisc_info  : 24  ; // [26..3]
        unsigned int    reserved_67           : 5   ; // [31..27]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state22;

// define the union u_pcie_sys_state27
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    trgt_cpl_timeout      : 1   ; // [0]
        unsigned int    trgt_timeout_cpl_func_num  : 1   ; // [1]
        unsigned int    trgt_timeout_cpl_tc   : 3   ; // [4..2]
        unsigned int    trgt_timeout_cpl_attr  : 2   ; // [6..5]
        unsigned int    trgt_timeout_cpl_len  : 12  ; // [18..7]
        unsigned int    trgt_lookup_empty     : 1   ; // [19]
        unsigned int    reserved_73           : 12  ; // [31..20]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state27;

// define the union u_pcie_sys_state28
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    trgt_timeout_lookup_id  : 8   ; // [7..0]
        unsigned int    trgt_lookup_id        : 8   ; // [15..8]
        unsigned int    radm_timeout_cpl_tag  : 8   ; // [23..16]
        unsigned int    reserved_75           : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state28;

// define the union u_pcie_sys_state29
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    trgt_cpl_timeout      : 1   ; // [0]
        unsigned int    radm_timeout_func_num  : 1   ; // [1]
        unsigned int    radm_timeout_cpl_tc   : 3   ; // [4..2]
        unsigned int    radm_timeout_cpl_attr  : 2   ; // [6..5]
        unsigned int    radm_timeout_cpl_len  : 12  ; // [18..7]
        unsigned int    radm_pm_turnoff       : 1   ; // [19]
        unsigned int    reserved_77           : 12  ; // [31..20]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state29;

// define the union u_pcie_sys_state30
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_pbus_num          : 8   ; // [7..0]
        unsigned int    cfg_pbus_dev_num      : 5   ; // [12..8]
        unsigned int    cfg_link_auto_bw_int  : 1   ; // [13]
        unsigned int    cfg_bw_mgt_int        : 1   ; // [14]
        unsigned int    reserved_79           : 17  ; // [31..15]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state30;

// define the union u_pcie_sys_state32
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    mstr_awmisc_info_dma  : 6   ; // [5..0]
        unsigned int    mstr_armisc_info_dma  : 6   ; // [11..6]
        unsigned int    cfg_hw_auto_sp_dis    : 1   ; // [12]
        unsigned int    link_timeout_flush_not  : 1   ; // [13]
        unsigned int    mac_phy_clk_req_n     : 1   ; // [14]
        unsigned int    wake_ref_rst_n        : 1   ; // [15]
        unsigned int    pcie_wake             : 1   ; // [16]
        unsigned int    reserved_82           : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state32;

// define the union u_pcie_sys_state39
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_msg_unlock_reqid  : 16  ; // [15..0]
        unsigned int    radm_nonfatal_err_reqid  : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state39;

// define the union u_pcie_sys_state44
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_unlock_reqid     : 16  ; // [15..0]
        unsigned int    radm_nonfatal_err_reqid  : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state44;

// define the union u_pcie_sys_state49
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_pm_pme_reqid     : 16  ; // [15..0]
        unsigned int    radm_pm_ack_to_reqid  : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state49;

// define the union u_pcie_sys_state54
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_pm_turnoff_req_id  : 16  ; // [15..0]
        unsigned int    reserved_105          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state54;

// define the union u_pcie_sys_state56
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    mst_rdata_latency     : 16  ; // [15..0]
        unsigned int    slv_rdata_latency     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state56;

// define the union u_pcie_sys_ctrl25
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ntb_ec_ctrl0          : 15  ; // [14..0]
        unsigned int    reserved_144          : 17  ; // [31..15]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl25;

// define the union u_pcie_sys_ctrl26
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ntb_ec_ctrl1          : 14  ; // [13..0]
        unsigned int    reserved_146          : 18  ; // [31..14]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl26;

// define the union u_pcie_sys_ctrl27
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ntb_ec_ctrl2          : 12  ; // [11..0]
        unsigned int    reserved_148          : 20  ; // [31..12]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl27;

// define the union u_pcie_sys_ctrl29
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_152          : 4   ; // [3..0]
        unsigned int    slv_rdata_record_en   : 1   ; // [4]
        unsigned int    slv_wdata_record_en   : 1   ; // [5]
        unsigned int    mstr_rdata_record_en  : 1   ; // [6]
        unsigned int    mstr_wdata_record_en  : 1   ; // [7]
        unsigned int    slv_raddr_record_en   : 1   ; // [8]
        unsigned int    slv_waddr_record_en   : 1   ; // [9]
        unsigned int    mstr_raddr_record_en  : 1   ; // [10]
        unsigned int    mstr_wraddr_record_en  : 1   ; // [11]
        unsigned int    cfg_msi2its_en        : 1   ; // [12]
        unsigned int    reserved_151          : 19  ; // [31..13]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl29;

// define the union u_pcie_sys_ctrl30
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    app_ltr_msg_req       : 1   ; // [0]
        unsigned int    app_ltr_msg_func_num  : 1   ; // [1]
        unsigned int    mem_wr_prerormance_record_en  : 1   ; // [2]
        unsigned int    eep_cpl_buff1_ecc_inject  : 2   ; // [4..3]
        unsigned int    eep_cpl_buff2_ecc_inject  : 2   ; // [6..5]
        unsigned int    trgt1_reqbuf1_ecc_inject  : 2   ; // [8..7]
        unsigned int    trgt1_reqbuf_ecc_inject  : 2   ; // [10..9]
        unsigned int    trgt1_err_mulit_int_mask  : 2   ; // [12..11]
        unsigned int    eep_cpl_buff1_ecc_multpl_int_mask  : 2   ; // [14..13]
        unsigned int    eep_cpl_buff2_ecc_detect_int_mask  : 2   ; // [16..15]
        unsigned int    reserved_154          : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl30;

// define the union u_pcie_sys_ctrl31
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ecc_en                : 1   ; // [0]
        unsigned int    ntb_mmio_cpld_buffer_err_deect_clr  : 1   ; // [1]
        unsigned int    ntb_mmio_cpld_buffer_err_multpi_clr  : 1   ; // [2]
        unsigned int    trgt1_req_buffer_err_detect_state_clr  : 1   ; // [3]
        unsigned int    trgt1_req_buffer_err_mulit_state_clr  : 1   ; // [4]
        unsigned int    parity_check_err_slv_clr  : 2   ; // [6..5]
        unsigned int    parity_check_err_mstr_clr  : 4   ; // [10..7]
        unsigned int    clr_link_up_state_clr     : 1   ; // [11]
        unsigned int    clr_link_up_state_mask     : 1   ; // [12]
        unsigned int    reserved_156          : 19  ; // [31..13]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl31;

// define the union u_pcie_sys_ctrl33
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ram_1p_rbuf_parity_inject  : 2   ; // [1..0]
        unsigned int    u0_ram_radm_qbuffer_hdr_parity_inject  : 2   ; // [3..2]
        unsigned int    u3_ram_radm_qbuffer_data_hi_parity_inject  : 2   ; // [5..4]
        unsigned int    u3_ram_radm_qbuffer_data_low_parity_inject  : 2   ; // [7..6]
        unsigned int    u2_ram2p_1_parity_inject  : 2   ; // [9..8]
        unsigned int    u2_ram2p_2_parity_inject  : 2   ; // [11..10]
        unsigned int    u3_ram2p_1_parity_inject  : 2   ; // [13..12]
        unsigned int    u3_ram2p_2_parity_inject  : 2   ; // [15..14]
        unsigned int    u10_ram2p_1_parity_inject  : 2   ; // [17..16]
        unsigned int    u10_ram2p_2_parity_inject  : 2   ; // [19..18]
        unsigned int    u10_ram2p_3_parity_inject  : 2   ; // [21..20]
        unsigned int    u10_ram2p_4_parity_inject  : 2   ; // [23..22]
        unsigned int    u8_ram2p_1_parity_inject  : 2   ; // [25..24]
        unsigned int    u8_ram2p_2_parity_inject  : 2   ; // [27..26]
        unsigned int    u8_ram2p_3_parity_inject  : 2   ; // [29..28]
        unsigned int    u6_ram2p_1_parity_inject  : 2   ; // [31..30]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl33;

// define the union u_pcie_sys_ctrl34
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    u7_ram2p_1_parity_err_inject  : 2   ; // [1..0]
        unsigned int    u7_ram2p_2_parity_err_inject  : 2   ; // [3..2]
        unsigned int    u0_ram2p_1_parity_err_inject  : 2   ; // [5..4]
        unsigned int    u0_ram2p_2_parity_err_inject  : 2   ; // [7..6]
        unsigned int    u4_ram2p_1_parity_err_inject  : 2   ; // [9..8]
        unsigned int    u4_ram2p_2_parity_err_inject  : 4   ; // [13..10]
        unsigned int    u11_ram2p_parity_err_inject  : 2   ; // [15..14]
        unsigned int    u_edma_mem_ram2p_1_parity_err_inject  : 2   ; // [17..16]
        unsigned int    u_edma_mem_ram2p_2_parity_err_inject  : 2   ; // [19..18]
        unsigned int    u_edma_rd_segbuff_ram2p_1_parity_err_inject  : 2   ; // [21..20]
        unsigned int    u_edma_rd_segbuff_ram2p_2_parity_err_inject  : 2   ; // [23..22]
        unsigned int    reserved_160          : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl34;

// define the union u_pcie_sys_ctrl35
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ram_1p_rbuf_parity_err  : 1   ; // [0]
        unsigned int    u0_ram_radm_qbuffer_hdr_parity_err_mask  : 1   ; // [1]
        unsigned int    u3_ram_radm_qbuffer_data_hi_parity_err_mask  : 1   ; // [2]
        unsigned int    u3_ram_radm_qbuffer_data_low_parity_err_mask  : 1   ; // [3]
        unsigned int    reserved_163          : 1   ; // [4]
        unsigned int    u10_ram2p_1_parity_err__mask  : 1   ; // [5]
        unsigned int    u10_ram2p_2_parity_err_mask  : 1   ; // [6]
        unsigned int    u10_ram2p_3_parity_err_mask  : 1   ; // [7]
        unsigned int    u10_ram2p_4_parity_err_mask  : 1   ; // [8]
        unsigned int    u8_ram2p_1_parity_err_mask  : 1   ; // [9]
        unsigned int    u8_ram2p_2_parity_err_mask  : 1   ; // [10]
        unsigned int    u8_ram2p_3_parity_err_mask  : 1   ; // [11]
        unsigned int    reserved_162          : 1   ; // [12]
        unsigned int    u6_ram2p_1_parity_err_mask  : 1   ; // [13]
        unsigned int    u6_ram2p_2_parity_err_mask  : 1   ; // [14]
        unsigned int    u7_ram2p_1_parity_err_mask  : 1   ; // [15]
        unsigned int    u7_ram2p_2_parity_err_mask  : 1   ; // [16]
        unsigned int    u0_ram2p_1_parity_err_mask  : 1   ; // [17]
        unsigned int    u0_ram2p_2_parity_err_mask  : 1   ; // [18]
        unsigned int    u11_ram2p_parity_err_mask  : 1   ; // [19]
        unsigned int    u_edma_mem_ram2p_1_parity_err_mask  : 1   ; // [20]
        unsigned int    u_edma_mem_ram2p_2_parity_err_mask  : 1   ; // [21]
        unsigned int    u_edma_rd_segbuff_ram2p_1_parity_err_mask  : 1   ; // [22]
        unsigned int    u_edma_rd_segbuff_ram2p_2_parity_err_mask  : 1   ; // [23]
        unsigned int    u4_ram2p_1_parity_err_mask  : 1   ; // [24]
        unsigned int    u4_ram2p_2_parity_err_mask  : 1   ; // [25]
        unsigned int    u2_ram2p_1_parity_err_mask  : 1   ; // [26]
        unsigned int    u2_ram2p_2_parity_err_mask  : 1   ; // [27]
        unsigned int    u3_ram2p_1_parity_err_mask  : 1   ; // [28]
        unsigned int    u3_ram2p_2_parity_err_mask  : 1   ; // [29]
        unsigned int    trgt1_err_detect_int_mask  : 2   ; // [31..30]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl35;

// define the union u_pcie_sys_ctrl36
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_bus_number_offset  : 8   ; // [7..0]
        unsigned int    cfg_iep_bus_number    : 8   ; // [15..8]
        unsigned int    iatu_shift_mode_en    : 1   ; // [16]
        unsigned int    reserved_165          : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl36;

// define the union u_pcie_sys_ctrl37
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ram_1p_rbuf_parity_int_clr  : 1   ; // [0]
        unsigned int    u0_ram_radm_qbuffer_hdr_parity_err_int_clr  : 1   ; // [1]
        unsigned int    u3_ram_radm_qbuffer_data_hi_parity_err_int_clr  : 1   ; // [2]
        unsigned int    u3_ram_radm_qbuffer_data_low_parity_err_int_clr  : 1   ; // [3]
        unsigned int    reserved_169          : 1   ; // [4]
        unsigned int    u10_ram2p_1_parity_err_int_clr  : 1   ; // [5]
        unsigned int    u10_ram2p_2_parity_err_int_clr  : 1   ; // [6]
        unsigned int    u10_ram2p_3_parity_err_int_clr  : 1   ; // [7]
        unsigned int    u10_ram2p_4_parity_err_int_clr  : 1   ; // [8]
        unsigned int    u8_ram2p_1_parity_err_int_clr  : 1   ; // [9]
        unsigned int    u8_ram2p_2_parity_err_mask  : 1   ; // [10]
        unsigned int    u8_ram2p_3_parity_err_int_clr  : 1   ; // [11]
        unsigned int    reserved_168          : 1   ; // [12]
        unsigned int    u6_ram2p_1_parity_err_int_clr  : 1   ; // [13]
        unsigned int    u6_ram2p_2_parity_err_int_clr  : 1   ; // [14]
        unsigned int    u7_ram2p_1_parity_err_iint_clr  : 1   ; // [15]
        unsigned int    u7_ram2p_2_parity_err_int_clr  : 1   ; // [16]
        unsigned int    u0_ram2p_1_parity_err_int_clr  : 1   ; // [17]
        unsigned int    u0_ram2p_2_parity_err_int_clr  : 1   ; // [18]
        unsigned int    u11_ram2p_parity_err_int_clr  : 1   ; // [19]
        unsigned int    u_edma_mem_ram2p_1_parity_err_int_clr  : 1   ; // [20]
        unsigned int    u_edma_mem_ram2p_2_parity_err_int_clr  : 1   ; // [21]
        unsigned int    u_edma_rd_segbuff_ram2p_1_parity_err_int_clr  : 1   ; // [22]
        unsigned int    u_edma_rd_segbuff_ram2p_2_parity_err_int_clr  : 1   ; // [23]
        unsigned int    reserved_167          : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl37;

// define the union u_pcie_sys_ctrl41
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pvm_enable            : 1   ; // [0]
        unsigned int    msi_enable            : 1   ; // [1]
        unsigned int    reserved_174          : 30  ; // [31..2]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl41;

// define the union u_pcie_sys_ctrl45
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_180          : 16  ; // [15..0]
        unsigned int    reserved_179          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_ctrl45;

// define the union u_pcie_sys_state97
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    inbound_mwr_count     : 16  ; // [15..0]
        unsigned int    inbound_mwr_count_over  : 1   ; // [16]
        unsigned int    mmio_cpld_buf1_err_detect  : 1   ; // [17]
        unsigned int    mmio_cpld_buf2_err_detect  : 1   ; // [18]
        unsigned int    mmio_cpld_buf1_multpl_err  : 1   ; // [19]
        unsigned int    mmio_cpld_buf2_multpl_err  : 1   ; // [20]
        unsigned int    trgt1_buff1_err_detect_state  : 1   ; // [21]
        unsigned int    trgt1_buff2_err_detect_state  : 1   ; // [22]
        unsigned int    trgt1_buff1_mulit_err_detect_state  : 1   ; // [23]
        unsigned int    trgt1_buff2_mulit_err_detect_state  : 1   ; // [24]
        unsigned int    reserved_191          : 7   ; // [31..25]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state97;

// define the union u_pcie_sys_state98
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    iep_cpl_mem_err_cnt   : 16  ; // [15..0]
        unsigned int    reserved_193          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state98;

// define the union u_pcie_sys_state99
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_cpl0_mem_err_cnt  : 16  ; // [15..0]
        unsigned int    reserved_195          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state99;

// define the union u_pcie_sys_state100
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    radm_cpl1_mem_err_cnt  : 16  ; // [15..0]
        unsigned int    reserved_197          : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state100;

// define the union u_pcie_sys_state101
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ntb_bw_stat_down_sync  : 1   ; // [0]
        unsigned int    reserved_199          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state101;

// define the union u_pcie_sys_state102
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ram_1p_rbuf_parity_err  : 1   ; // [0]
        unsigned int    u0_ram_radm_qbuffer_hdr_parity_err  : 1   ; // [1]
        unsigned int    u3_ram_radm_qbuffer_data_hi_parity_err  : 1   ; // [2]
        unsigned int    u3_ram_radm_qbuffer_data_low_parity_err  : 1   ; // [3]
        unsigned int    reserved_203          : 1   ; // [4]
        unsigned int    u10_ram2p_1_parity_err  : 1   ; // [5]
        unsigned int    u10_ram2p_2_parity_err  : 1   ; // [6]
        unsigned int    u10_ram2p_3_parity_err  : 1   ; // [7]
        unsigned int    u10_ram2p_4_parity_err  : 1   ; // [8]
        unsigned int    u8_ram2p_1_parity_err  : 1   ; // [9]
        unsigned int    u8_ram2p_2_parity_err  : 1   ; // [10]
        unsigned int    u8_ram2p_3_parity_err  : 1   ; // [11]
        unsigned int    reserved_202          : 1   ; // [12]
        unsigned int    u6_ram2p_1_parity_err  : 1   ; // [13]
        unsigned int    u6_ram2p_2_parity_err  : 1   ; // [14]
        unsigned int    u7_ram2p_1_parity_err  : 1   ; // [15]
        unsigned int    u7_ram2p_2_parity_err  : 1   ; // [16]
        unsigned int    u0_ram2p_1_parity_err  : 1   ; // [17]
        unsigned int    u0_ram2p_2_parity_err  : 1   ; // [18]
        unsigned int    u11_ram2p_parity_err  : 1   ; // [19]
        unsigned int    u_edma_mem_ram2p_1_parity_err  : 1   ; // [20]
        unsigned int    u_edma_mem_ram2p_2_parity_err  : 1   ; // [21]
        unsigned int    u_edma_rd_segbuff_ram2p_1_parity_err  : 1   ; // [22]
        unsigned int    u_edma_rd_segbuff_ram2p_2_parity_err  : 1   ; // [23]
        unsigned int    u4_ram2p_1_parity_err  : 1   ; // [24]
        unsigned int    u4_ram2p_2_parity_err  : 1   ; // [25]
        unsigned int    u2_ram2p_1_parity_err  : 1   ; // [26]
        unsigned int    u2_ram2p_2_parity_err  : 1   ; // [27]
        unsigned int    u3_ram2p_1_parity_err  : 1   ; // [28]
        unsigned int    u3_ram2p_2_parity_err  : 1   ; // [29]
        unsigned int    reserved_201          : 2   ; // [31..30]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state102;

// define the union u_pcie_sys_state105
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    msig_rq_st            : 1   ; // [0]
        unsigned int    arb_client0_halt_dfx  : 1   ; // [1]
        unsigned int    xadm_client0_halt_dfx  : 1   ; // [2]
        unsigned int    rd_mmio_cpl_halt_dfx  : 1   ; // [3]
        unsigned int    curr_wr_reg_st_dfx    : 5   ; // [8..4]
        unsigned int    out_cpl_arb_curr_st_dfx  : 3   ; // [11..9]
        unsigned int    curr_cpl_gen_st_dfx   : 5   ; // [16..12]
        unsigned int    reserved_207          : 15  ; // [31..17]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state105;

// define the union u_pcie_sys_state106
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    in_wr_tlp_cnt         : 21  ; // [20..0]
        unsigned int    reserved_209          : 11  ; // [31..21]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state106;

// define the union u_pcie_sys_state107
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    ltssm_state           : 6   ; // [5..0]
        unsigned int    mac_phy_rate          : 2   ; // [7..6]
        unsigned int    pcie_slv_err_int_state  : 1   ; // [8]
        unsigned int    retry_sram_addr       : 10  ; // [18..9]
        unsigned int    pcie_mstr_rresp_int_state  : 1   ; // [19]
        unsigned int    pcie_mstr_bresp_int_state  : 1   ; // [20]
        unsigned int    pcie_radm_inta_int_state  : 1   ; // [21]
        unsigned int    pcie_radm_intb_int_state  : 1   ; // [22]
        unsigned int    pcie_radm_intc_int_state  : 1   ; // [23]
        unsigned int    pcie_radm_intd_int_state  : 1   ; // [24]
        unsigned int    pme_int_state         : 1   ; // [25]
        unsigned int    radm_vendr_msg_int_state  : 1   ; // [26]
        unsigned int    reserved_211          : 5   ; // [31..27]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_pcie_sys_state107;

// define the union u_sc_pcie0_stat0
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie0_gm_cmposer_lookup_err  : 1   ; // [0]
        unsigned int    pcie0_radmx_cmposer_lookup_err  : 1   ; // [1]
        unsigned int    pcie0_pm_xtlh_block_tlp  : 1   ; // [2]
        unsigned int    pcie0_cfg_mem_space_en  : 1   ; // [3]
        unsigned int    pcie0_cfg_rcb         : 1   ; // [4]
        unsigned int    pcie0_rdlh_link_up    : 1   ; // [5]
        unsigned int    pcie0_pm_curnt_state  : 3   ; // [8..6]
        unsigned int    pcie0_cfg_aer_rc_err_int  : 1   ; // [9]
        unsigned int    pcie0_cfg_aer_int_msg_num  : 5   ; // [14..10]
        unsigned int    pcie0_xmlh_link_up    : 1   ; // [15]
        unsigned int    pcie0_wake            : 1   ; // [16]
        unsigned int    pcie0_cfg_eml_control  : 1   ; // [17]
        unsigned int    pcie0_hp_pme          : 1   ; // [18]
        unsigned int    pcie0_hp_int          : 1   ; // [19]
        unsigned int    pcie0_hp_msi          : 1   ; // [20]
        unsigned int    pcie0_pm_status       : 1   ; // [21]
        unsigned int    pcie0_ref_clk_req_n   : 1   ; // [22]
        unsigned int    pcie0_p2_exit_reg     : 1   ; // [23]
        unsigned int    pcie0_radm_msg_req_id_low  : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_sc_pcie0_stat0;

// define the union u_sc_pcie0_stat1
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie0_axi_parity_errs_reg  : 4   ; // [3..0]
        unsigned int    pcie0_app_parity_errs_reg  : 3   ; // [6..4]
        unsigned int    pcie0_pm_linkst_in_l1  : 1   ; // [7]
        unsigned int    pcie0_pm_linkst_in_l2  : 1   ; // [8]
        unsigned int    pcie0_pm_linkst_l2_exit  : 1   ; // [9]
        unsigned int    pcie0_mac_phy_power_down  : 2   ; // [11..10]
        unsigned int    pcie0_radm_correctabl_err_reg  : 1   ; // [12]
        unsigned int    pcie0_radm_nonfatal_err_reg  : 1   ; // [13]
        unsigned int    pcie0_radm_fatal_err_reg  : 1   ; // [14]
        unsigned int    pcie0_radm_pm_to_pme_reg  : 1   ; // [15]
        unsigned int    pcie0_radm_pm_to_ack_reg  : 1   ; // [16]
        unsigned int    pcie0_radm_cpl_timeout_reg  : 1   ; // [17]
        unsigned int    pcie0_radm_msg_unlock_reg  : 1   ; // [18]
        unsigned int    pcie0_cfg_pme_msi_reg  : 1   ; // [19]
        unsigned int    pcie0_bridge_flush_not_reg  : 1   ; // [20]
        unsigned int    pcie0_link_req_rst_not_reg  : 1   ; // [21]
        unsigned int    pcie0_cfg_aer_rc_err_msi  : 1   ; // [22]
        unsigned int    pcie0_cfg_sys_err_rc  : 1   ; // [23]
        unsigned int    pcie0_radm_msg_req_id_high  : 8   ; // [31..24]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_sc_pcie0_stat1;

// define the union u_sc_pcie0_stat4
typedef union
{
    // define the struct bits
    struct
    {
        unsigned int    pcie0_ltssm_state     : 6   ; // [5..0]
        unsigned int    pcie0_mac_phy_rate    : 2   ; // [7..6]
        unsigned int    pcie0_slv_err_int     : 1   ; // [8]
        unsigned int    pcie0_retry_sram_addr  : 10  ; // [18..9]
        unsigned int    pcie_mstr_rresp_int   : 1   ; // [19]
        unsigned int    pcie_mstr_bresp_int   : 1   ; // [20]
        unsigned int    pcie_radm_inta_reg    : 1   ; // [21]
        unsigned int    pcie_radm_intb_reg    : 1   ; // [22]
        unsigned int    pcie_radm_intc_reg    : 1   ; // [23]
        unsigned int    pcie_radm_intd_reg    : 1   ; // [24]
        unsigned int    pcie_cfg_pme_int_reg  : 1   ; // [25]
        unsigned int    radm_vendor_msg_reg   : 1   ; // [26]
        unsigned int    pcie_bridge_flush_nort  : 1   ; // [27]
        unsigned int    pcie_link_req_rst_not  : 1   ; // [28]
        unsigned int    reserved_217          : 3   ; // [31..29]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} u_sc_pcie0_stat4;

/******************************************************************************/
/*                      xxx PCIe_RC 寄存器定义                                */
/******************************************************************************/
#define PCIE_RC_CFG_HDR0_REG              (0x0)        /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR1_REG              (0x4)        /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR2_REG              (0x8)        /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR3_REG              (0xC)        /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR4_REG              (0x10)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR5_REG              (0x14)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR6_REG              (0x18)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR7_REG              (0x1C)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR8_REG              (0x20)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR9_REG              (0x24)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR10_REG             (0x28)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR11_REG             (0x2C)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR12_REG             (0x30)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR13_REG             (0x34)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR14_REG             (0x38)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_CFG_HDR15_REG             (0x3C)       /* PCI兼容配置头空间寄存器 */
#define PCIE_RC_PM_CAP1_REG               (0x44)       /* PCI电源管理功能寄存器 */
#define PCIE_RC_MSI_CAP0_REG              (0x50)       /* PCI MSI功能寄存器 */
#define PCIE_RC_MSI_CAP1_REG              (0x54)       /* PCI MSI功能寄存器 */
#define PCIE_RC_MSI_CAP2_REG              (0x58)       /* PCI MSI功能寄存器 */
#define PCIE_RC_MSI_CAP3_REG              (0x5C)       /* PCI MSI功能寄存器 */
#define PCIE_RC_MSI_CAP4_REG              (0x60)       /* PCI MSI功能寄存器 */
#define PCIE_RC_MSI_CAP5_REG              (0x64)       /* PCI MSI功能寄存器 */
#define PCIE_RC_CAP0_REG                 (0x70)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP1_REG                 (0x74)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP2_REG                 (0x78)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP3_REG                 (0x7C)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP4_REG                 (0x80)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP5_REG                 (0x84)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP6_REG                 (0x88)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP7_REG                 (0x8C)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP8_REG                 (0x90)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP9_REG                 (0x94)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP10_REG                (0x98)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP11_REG                (0x9C)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP12_REG                (0xA0)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP13_REG                (0xB0)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP14_REG                (0xB4)       /* PCI Express功能寄存器 */
#define PCIE_RC_CAP15_REG                (0xB8)       /* PCI Express功能寄存器 */
#define PCIE_RC_SLOT_CAP_REG                  (0xC0)       /* Slot Numbering功能寄存器 */
#define PCIE_RC_AER_CAP0_REG                  (0x100)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP1_REG                  (0x104)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP2_REG                  (0x108)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP3_REG                  (0x10C)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP4_REG                  (0x110)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP5_REG                  (0x114)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP6_REG                  (0x118)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP7_REG                  (0x11C)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP8_REG                  (0x120)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP9_REG                  (0x124)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP10_REG                 (0x128)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP11_REG                 (0x12C)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP12_REG                 (0x130)      /* 高级错误报告寄存器 */
#define PCIE_RC_AER_CAP13_REG                 (0x134)      /* 高级错误报告寄存器 */
#define PCIE_RC_VC_CAP0_REG                   (0x140)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP1_REG                   (0x144)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP2_REG                   (0x148)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP3_REG                   (0x14C)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP4_REG                   (0x150)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP5_REG                   (0x154)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP6_REG                   (0x158)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP7_REG                   (0x15C)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP8_REG                   (0x160)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_VC_CAP9_REG                   (0x164)      /* 虚拟通道功能寄存器 */
#define PCIE_RC_PORT_LOGIC0_REG               (0x700)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC1_REG               (0x704)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC2_REG               (0x708)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC3_REG               (0x70C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC4_REG               (0x710)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC5_REG               (0x714)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC6_REG               (0x718)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC7_REG               (0x71C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC8_REG               (0x720)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC9_REG               (0x724)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC10_REG              (0x728)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC11_REG              (0x72C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC12_REG              (0x730)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC13_REG              (0x734)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC14_REG              (0x738)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC15_REG              (0x73C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC16_REG              (0x748)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC17_REG              (0x74C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC18_REG              (0x750)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC19_REG              (0x7A8)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC20_REG              (0x7AC)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC21_REG              (0x7B0)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORT_LOGIC22_REG              (0x80C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC23_REG               (0x810)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC24_REG               (0x814)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC25_REG               (0x818)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC26_REG               (0x81C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC27_REG               (0x820)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC28_REG               (0x824)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC29_REG               (0x828)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC30_REG               (0x82C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC31_REG               (0x830)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC32_REG               (0x834)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC33_REG               (0x838)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC34_REG               (0x83C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC35_REG               (0x840)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC36_REG               (0x844)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC37_REG               (0x848)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC38_REG               (0x84C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC39_REG               (0x850)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC40_REG               (0x854)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC41_REG               (0x858)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC42_REG               (0x85C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC43_REG               (0x860)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC44_REG               (0x864)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC45_REG               (0x868)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC46_REG               (0x86C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC47_REG               (0x870)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC48_REG               (0x874)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC49_REG               (0x878)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC50_REG               (0x87C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC51_REG               (0x880)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC52_REG               (0x884)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC53_REG               (0x888)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC54_REG               (0x890)      /* Gen3_Control_Register */
#define PCIE_COHERENCY_CONTROL_3_OFF          (0x8e8)
#define PCIE_RC_PORTLOGIC98_REG               (0x900)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC55_REG               (0x904)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC56_REG               (0x908)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC57_REG               (0x90C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC58_REG               (0x910)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC59_REG               (0x914)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC60_REG               (0x918)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC61_REG               (0x91C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC62_REG               (0x97C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC63_REG               (0x980)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC64_REG               (0x99C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC65_REG               (0x9A0)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC66_REG               (0x9BC)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC67_REG               (0x9C4)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC68_REG               (0x9C8)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC69_REG               (0x9CC)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC70_REG               (0x9D0)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC71_REG               (0x9D4)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC72_REG               (0x9D8)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC73_REG               (0x9DC)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC74_REG               (0x9E0)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC75_REG               (0xA00)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC76_REG               (0xA10)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC77_REG               (0xA18)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC78_REG               (0xA1C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC79_REG               (0xA24)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC80_REG               (0xA28)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC81_REG               (0xA34)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC82_REG               (0xA3C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC83_REG               (0xA40)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC84_REG               (0xA44)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC85_REG               (0xA48)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC86_REG               (0xA6C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC87_REG               (0xA70)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC88_REG               (0xA78)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC89_REG               (0xA7C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC90_REG               (0xA80)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC91_REG               (0xA84)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC92_REG               (0xA88)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC93_REG               (0xA8C)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC94_REG               (0xA90)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC95_REG               (0xB30)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC96_REG               (0xA40)      /* 端口逻辑寄存器 */
#define PCIE_RC_PORTLOGIC97_REG               (0xB44)      /* 端口逻辑寄存器 */


typedef union tagrccoherencycontrol3off //0x8e8
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_mstr_ardomain_mode           : 2;
        unsigned int    rsvdp_2                         : 1;
        unsigned int    cfg_mstr_arcache_mode           : 4;
        unsigned int    rsvdp_7                         : 1;
        unsigned int    cfg_mstr_awdomain_mode          :2 ;
        unsigned int    rsvdp_10                        : 1;
        unsigned int    cfg_mstr_awcache_mode           : 4;
        unsigned int    rsvdp_15                        : 1;
        unsigned int    cfg_mstr_ardomain_value         : 2 ;
        unsigned int    rsvdp_18                        : 1;
        unsigned int    cfg_mstr_arcache_value          :  4;
        unsigned int    rsvdp_23                        :  1;
        unsigned int    cfg_mast_awdomain_value         : 2;
        unsigned int    rsvdp_26                        : 1  ;
        unsigned int    cfg_mast_awcache_value          : 4  ;
        unsigned int    rsvdp_31                        : 1  ; // [15..0] 厂商id号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_coherency_control3_u;


// define the union pcie_rc_cfg_hdr0_u
// pci兼容配置头空间寄存器
// 0x0
typedef union tagrcpcicfghdr0
{
    // define the struct bits
    struct
    {
        unsigned int    vendor_id             : 16  ; // [15..0] 厂商id号
        unsigned int    device_id             : 16  ; // [31..16] 设备id号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr0_u;

// define the union pcie_rc_cfg_hdr1_u
// pci兼容配置头空间寄存器
// 0x4
typedef union tagrcpcicfghdr1
{
    // define the struct bits
    struct
    {
        unsigned int    i_o_sapace_enable     : 1   ; // [0] i/o sapace enable0：该设备不能响应i/o请求;1：该设备能够响应i/o请求。
        unsigned int    memory_space_enable   : 1   ; // [1] memory space enable0：该设备不能响应存储器请求;1：该设备能够响应存储器请求。
        unsigned int    bus_master_enable     : 1   ; // [2] bus master enable0：该设备不能作为主设备;1：该设备能够作为主设备。
        unsigned int    special_cycle_enalbe  : 1   ; // [3] special cycle enalbe不适用于pcie，硬连线为0
        unsigned int    memory_write_and_invalidata  : 1   ; // [4] memory write and invalidata不适用于pcie，硬连线为0
        unsigned int    vga_palette_snoop     : 1   ; // [5] vga palette snoop不适用于pcie，硬连线为0
        unsigned int    parity_error_response  : 1   ; // [6] parity error response0：对奇偶校验错误不作出响应;1：对奇偶校验错误作出响应。
        unsigned int    idsel_stepping_wait_cycle_control  : 1   ; // [7] idsel stepping/wait cycle control不适用于pcie，硬连线为0
        unsigned int    serr_                 : 1   ; // [8] serr#信号使能0：可以使用serr#信号;
        unsigned int    faster_back_to_back_enaable  : 1   ; // [9] faster back-to-back enaable不适用于pcie，硬连线为0
        unsigned int    intx_assertion_disable  : 1   ; // [10] intx assertion disable0：允许使用intx方式提交中断;1：禁用intx方式提交中断。
        unsigned int    command               : 5   ; // [15..11] reserved
        unsigned int    reserved_1            : 3   ; // [18..16] reserved
        unsigned int    intx_status           : 1   ; // [19] intx status0：设备未使用intx方式向处理器提交了中断请求;1：设备使用intx方式向处理器提交了中断请求。
        unsigned int    capabilitieslist      : 1   ; // [20] capabilities list指示capability pointer寄存器中的值有效，硬连线为1
        unsigned int    _6mhzcapable          : 1   ; // [21] 66mhz capable不适用于pcie，硬连线为0
        unsigned int    reserved_0            : 1   ; // [22] reserved
        unsigned int    faster_back_to_back_capable  : 1   ; // [23] faster back-to-back capable不适用于pcie，硬连线为0
        unsigned int    master_data_parity_error  : 1   ; // [24] master data parity error0：除置一条件满足之外的其他情况;1：perr#信号有效，或者总线出现数据传输错误时，或者command寄存器的parity error response位为1时。
        unsigned int    devsel_timing         : 2   ; // [26..25] devsel timing不适用于pcie，硬连线为0
        unsigned int    signaled_target_abort  : 1   ; // [27] signaled target abort由pci目标设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_target_abort  : 1   ; // [28] received target abort由pci主设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_master_abort  : 1   ; // [29] received master abort由pci主设备设置0：未发生主设备夭折时序;1：发生主设备夭折时序。
        unsigned int    signaled_systemerror  : 1   ; // [30] signaled system error0：serr#信号无效;1：serr#信号有效。
        unsigned int    status                : 1   ; // [31] detected parity error0：未检测到奇偶校验错误;1：检测到奇偶校验错误。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr1_u;

// define the union pcie_rc_cfg_hdr2_u
// pci兼容配置头空间寄存器
// 0x8
typedef union tagrcpcicfghdr2
{
    // define the struct bits
    struct
    {
        unsigned int    revision_id           : 8   ; // [7..0] revision idpcie设备的版本号
        unsigned int    programming_interface  : 8   ; // [15..8] programming interface
        unsigned int    subclasscode          : 8   ; // [23..16] subclass code
        unsigned int    classcode             : 8   ; // [31..24] base class code
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr2_u;

// define the union pcie_rc_cfg_hdr3_u
// pci兼容配置头空间寄存器
// 0xc
typedef union tagrcpcicfghdr3
{
    // define the struct bits
    struct
    {
        unsigned int    cache_line_size       : 8   ; // [7..0] cache line size不适用于pcie设备，对此寄存器执行写操作不会影响pcie core的功能
        unsigned int    mstr_lat_tmr          : 8   ; // [15..8] master latency timer不适用于pcie设备，硬连线为0
        unsigned int    configuration_header_format  : 7   ; // [22..16] configuration header format0：type0配置头空间;1：type1配置头空间。
        unsigned int    hdr_type              : 1   ; // [23] multi function device0：单功能设备;1：多功能设备。
        unsigned int    bist                  : 8   ; // [31..24] bist register该版本ip不支持该功能，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr3_u;

// define the union pcie_rc_cfg_hdr4_u
// pci兼容配置头空间寄存器
// 0x10
typedef union tagrcpcicfghdr4
{
    // define the struct bits
    struct
    {
        unsigned int    bar_type              : 1   ; // [0] 指示bar类型0：memory bar;1：i/o bar。
        unsigned int    memory_bar_type       : 2   ; // [2..1] 指示memory bar类型00：32-bit bar;10：64-bit bar;01：保留;11：保留。
        unsigned int    memory_bar            : 1   ; // [3] 指示memory bar是否可预取0：不可预取;1：可预取。
        unsigned int    bar0                  : 28  ; // [31..4] 64位bar0地址的[31:4]位若dbi_cs2有效，则为bar0_mask的[31:4]位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr4_u;

// define the union pcie_rc_cfg_hdr6_u
// pci兼容配置头空间寄存器
// 0x18
typedef union tagrcpcicfghdr6
{
    // define the struct bits
    struct
    {
        unsigned int    pri_bus_num           : 8   ; // [7..0] primary bus number
        unsigned int    sec_bus_num           : 8   ; // [15..8] secondary bus number
        unsigned int    sub_bus_num           : 8   ; // [23..16] subordinate bus number
        unsigned int    sec_lat_timer         : 8   ; // [31..24] secondary latency timer不适用于pcie，硬连线为0.
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr6_u;

// define the union pcie_rc_cfg_hdr7_u
// pci兼容配置头空间寄存器
// 0x1c
typedef union tagrcpcicfghdr7
{
    // define the struct bits
    struct
    {
        unsigned int    _2_biti_o_space       : 1   ; // [0] 32-bit i/o space0：16-bit i/o space;1：32-bit i/o space。
        unsigned int    reserved_5            : 3   ; // [3..1] reserved
        unsigned int    i_o_space_base        : 4   ; // [7..4] i/o space base
        unsigned int    _2_biti_ospace        : 1   ; // [8] 32-bit i/o space0：16-bit i/o space;1：32-bit i/o space。
        unsigned int    reserved_4            : 3   ; // [11..9] reserved
        unsigned int    io_base_limit         : 4   ; // [15..12] i/o space limit
        unsigned int    reserved_3            : 5   ; // [20..16] reserved
        unsigned int    _6_mhz_capable        : 1   ; // [21] 66 mhz capable不适用于pcie，硬连线为0
        unsigned int    reserved_2            : 1   ; // [22] reserved
        unsigned int    fast_back_to_back_capable  : 1   ; // [23] fast back-to-back capable不适用于pcie，硬连线为0。
        unsigned int    master_data_parity_error  : 1   ; // [24] master data parity error0：检测到master data parity;1：未检测到master data parity。
        unsigned int    devsel_timing         : 2   ; // [26..25] devsel timing不适用于pcie，硬连线为0
        unsigned int    signaled_target_abort  : 1   ; // [27] signaled target abort0：未检测到signaled target abort;1：检测到signaled target abort。
        unsigned int    received_target_abort  : 1   ; // [28] received target abort0：未检测到received target abort;1：检测到received target abort。
        unsigned int    received_master_abort  : 1   ; // [29] received master abort0：未检测到received master abort;1：检测到received master abort。
        unsigned int    received_system_error  : 1   ; // [30] received system error0：未检测received system error;1：检测到received system error。
        unsigned int    sec_status            : 1   ; // [31] detected parity error0：未检测到parity error;1：检测到parity error。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr7_u;

// define the union pcie_rc_cfg_hdr8_u
// pci兼容配置头空间寄存器
// 0x20
typedef union tagrcpcicfghdr8
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_7            : 4   ; // [3..0] reserved
        unsigned int    memory_base_address   : 12  ; // [15..4] memory base address
        unsigned int    reserved_6            : 4   ; // [19..16] reserved
        unsigned int    mem_base_limit        : 12  ; // [31..20] memory limit address
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr8_u;

// define the union pcie_rc_cfg_hdr9_u
// pci兼容配置头空间寄存器
// 0x24
typedef union tagrcpcicfghdr9
{
    // define the struct bits
    struct
    {
        unsigned int    bit_memory_addressing  : 1   ; // [0] 64-bit memory addressing0：32-bit memory addressing;1：64-bit memory addressing。
        unsigned int    reserved_9            : 3   ; // [3..1] reserved
        unsigned int    upper_12_bits_of_32_bit  : 12  ; // [15..4] upper 12 bits of 32-bit prefetchable memory start address
        unsigned int    _4_bit_memory_addressing  : 1   ; // [16] 64-bit memory addressing0：32-bit memory addressing;1：64-bit memory addressing。
        unsigned int    reserved_8            : 3   ; // [19..17] reserved
        unsigned int    pre_mem_base_limit    : 12  ; // [31..20] upper 12 bits of 32-bit prefetchable memory end address
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr9_u;

// define the union pcie_rc_cfg_hdr12_u
// pci兼容配置头空间寄存器
// 0x30
typedef union tagrcpcicfghdr12
{
    // define the struct bits
    struct
    {
        unsigned int    upper_16_bits_ofi_o_base  : 16  ; // [15..0] upper 16 bits of i/o base
        unsigned int    io_base_limit_up      : 16  ; // [31..16] upper 16 bits of i/o limit
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr12_u;

// define the union pcie_rc_cfg_hdr13_u
// pci兼容配置头空间寄存器
// 0x34
typedef union tagrcpcicfghdr13
{
    // define the struct bits
    struct
    {
        unsigned int    cap_ptr               : 8   ; // [7..0] first capability pointer
        unsigned int    reserved_10           : 24  ; // [31..8] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr13_u;

// define the union pcie_rc_cfg_hdr14_u
// pci兼容配置头空间寄存器
// 0x38
typedef union tagrcpcicfghdr14
{
    // define the struct bits
    struct
    {
        unsigned int    expansion_rom_enable  : 1   ; // [0] expansion rom enable0：禁用expansion rom;1：使能expansion rom enable。
        unsigned int    reserved_11           : 10  ; // [10..1] reserved若dbi_cs2有效，则为rom_mask的[10:1]位。
        unsigned int    exp_rom_base_addr     : 21  ; // [31..11] expansion rom address若dbi_cs2有效，则为rom_mask的[31:11]位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr14_u;

// define the union pcie_rc_cfg_hdr15_u
// pci兼容配置头空间寄存器
// 0x3c
typedef union tagrcpcicfghdr15
{
    // define the struct bits
    struct
    {
        unsigned int    int_line              : 8   ; // [7..0] interrupt line
        unsigned int    int_pin               : 8   ; // [15..8] interrupt pin00：不使用intx类型上报中断;01：使用inta;02：使用intb;03：使用intc;04：使用intd。
        unsigned int    parity_error_response_enable  : 1   ; // [16] parity error response enable0：禁用parity error response;1：使能parity error response。
        unsigned int    serr_enable           : 1   ; // [17] serr enable0：禁用serr;1：使能serr。
        unsigned int    isa_enable            : 1   ; // [18] isa enable0：禁用isa;1：使能isa。
        unsigned int    vga_enable            : 1   ; // [19] vga enable0：禁用vga;1：使能vga。
        unsigned int    vga_16_bit_decode     : 1   ; // [20] vga 16-bit decode0：不使用vga 16-bit decode;1：使用vga 16-bit decode。
        unsigned int    master_abort_mode     : 1   ; // [21] master abort mode0：不使用master abort mode;1：使用master abort mode。
        unsigned int    secondary_busreset    : 1   ; // [22] secondary bus reset0：不触发hot reset;1：触发hot reset。
        unsigned int    fast_back_to_back_transactionsenable  : 1   ; // [23] fast back-to-back transactions enable不适用于pcie，硬连线为0
        unsigned int    primary_discard_timer  : 1   ; // [24] primary discard timer不适用于pcie，硬连线为0
        unsigned int    secondary_discard_timer  : 1   ; // [25] secondary discard timer不适用于pcie，硬连线为0
        unsigned int    discard_timer_status  : 1   ; // [26] discard timer status不适用于pcie，硬连线为0
        unsigned int    discard_timer_serr_enable_status  : 1   ; // [27] discard timer serr enable status不适用于pcie，硬连线为0
        unsigned int    brg_ctrl              : 4   ; // [31..28] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cfg_hdr15_u;

// define the union pcie_rc_pm_cap1_u
// pci电源管理功能寄存器
// 0x44
typedef union tagrcpcipmcap1
{
    // define the struct bits
    struct
    {
        unsigned int    power_state           : 2   ; // [1..0] power state00：d0;01：d1;10：d2;11：d3。
        unsigned int    reserved_14           : 1   ; // [2] reserved
        unsigned int    no_soft_reset         : 1   ; // [3] no soft reset0：支持soft reset;1：不支持soft reset。
        unsigned int    reserved_13           : 4   ; // [7..4] reserved
        unsigned int    pme_enable            : 1   ; // [8] pme enable0：禁用pme生成;1：使能pme生成。
        unsigned int    data_select            : 4   ; // [12..9] data select
        unsigned int    data_scale            : 2   ; // [14..13] data scale
        unsigned int    pme_status            : 1   ; // [15] pme status0：使能pme事件没有发生;1：使能pme事件发生。
        unsigned int    reserved_12           : 6   ; // [21..16] reserved
        unsigned int    b2_b3support          : 1   ; // [22] b2/b3 support硬连线为0
        unsigned int    bus_power_clock_control_enable  : 1   ; // [23] bus power/clock control enable硬连线为0
        unsigned int    pm_ctrl_status        : 8   ; // [31..24] data register for additional information
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_pm_cap1_u;

// define the union pcie_rc_msi_cap0_u
// pci msi功能寄存器
// 0x50
typedef union tagrcpcimsicap0
{
    // define the struct bits
    struct
    {
        unsigned int    msi_cap_id            : 8   ; // [7..0] msi capability id
        unsigned int    next_capability_pointer  : 8   ; // [15..8] next capability pointer
        unsigned int    msi_enabled           : 1   ; // [16] msi enabled0：禁用msi;1：使能msi。
        unsigned int    multiple_message_capable  : 3   ; // [19..17] multiple message capable000：pcie设备可以使用1个中断向量;001：pcie设备可以使用2个中断向量;010：pcie设备可以使用4个中断向量;011：pcie设备可以使用8个中断向量;100：pcie设备可以使用16个中断向量;101：pcie设备可以使用32个中断向量;110：保留;111：保留。
        unsigned int    multiple_message_enabled  : 3   ; // [22..20] multiple message enabled表示分配给当前pcie设备的中断向量数目000：pcie设备被分配给1个中断向量;001：pcie设备被分配给2个中断向量;010：pcie设备被分配给4个中断向量;011：pcie设备被分配给8个中断向量;100：pcie设备被分配给16个中断向量;101：pcie设备被分配给32个中断向量;110：保留;111：保留。
        unsigned int    msi_64_en             : 1   ; // [23] 支持64位地址功能
        unsigned int    pvm_en                : 1   ; // [24] 设备是否支持per vector masking功能1'b0: 不支持1'b1: 支持
        unsigned int    message_control_register  : 7   ; // [31..25] msi per vector masking (pvm) supported0：不支持msi pvm;1：支持msi pvm。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_msi_cap0_u;

// define the union pcie_rc_msi_cap1_u
// pci msi功能寄存器
// 0x54
typedef union tagrcpcimsicap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_17           : 2   ; // [1..0] reserved
        unsigned int    msi_addr_low          : 30  ; // [31..2] msi的低32bit地址的[31:2]位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_msi_cap1_u;

// define the union pcie_rc_msi_cap3_u
// pci msi功能寄存器
// 0x5c
typedef union tagrcpcimsicap3
{
    // define the struct bits
    struct
    {
        unsigned int    msi_data              : 16  ; // [15..0] msi数据
        unsigned int    reserved_18           : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_msi_cap3_u;

// define the union pcie_rc_cap0_u
// pci express功能寄存器
// 0x70
typedef union tagrcpciecap0
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_cap_id           : 8   ; // [7..0] pci express capability id
        unsigned int    pcie_next_ptr         : 8   ; // [15..8] next capability pointer
        unsigned int    pcie_capability_version  : 4   ; // [19..16] pci express capability version
        unsigned int    device_port_type      : 4   ; // [23..20] device/port type0100：pcie rc;
        unsigned int    slot_implemented      : 1   ; // [24] slot implemented
        unsigned int    interrupt_message_number  : 5   ; // [29..25] interrupt message number
        unsigned int    reserved_19           : 2   ; // [31..30] rsvdp
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap0_u;

// define the union pcie_rc_cap1_u
// pci express功能寄存器
// 0x74
typedef union tagrcpciecap1
{
    // define the struct bits
    struct
    {
        unsigned int    max_payload_size_supported  : 3   ; // [2..0] 支持最大payload 为512byte
        unsigned int    phantom_function_supported  : 2   ; // [4..3] 仿真器功能支持，硬连线0
        unsigned int    extended_tagfield_supported  : 1   ; // [5] 拓展标记字段支持，支持最大outstanding的深度为32
        unsigned int    endpoint_l0sacceptable_latency  : 3   ; // [8..6] 端点l0可接受的延时，不支持，硬连线为0
        unsigned int    endpoint_l1acceptable_latency  : 3   ; // [11..9] 端点l1可接受的延时，不支持，硬连线为0
        unsigned int    undefined             : 3   ; // [14..12] 保留
        unsigned int    reserved_22           : 3   ; // [17..15] 保留
        unsigned int    captured_slot_power_limit_value  : 8   ; // [25..18] 捕获的插槽功率极限值，硬连线0x0，只读
        unsigned int    captured_slot_power_limit_scale  : 2   ; // [27..26] 捕获的插槽功率极限因子，硬连线0x0，只读
        unsigned int    function_level_reset  : 1   ; // [28] function级的复位
        unsigned int    reserved_21           : 3   ; // [31..29] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap1_u;

// define the union pcie_rc_cap2_u
// pci express功能寄存器
// 0x78
typedef union tagrcpciecap2
{
    // define the struct bits
    struct
    {
        unsigned int    correctable_error_reporting_enable  : 1   ; // [0] correctable error reporting enable0：不支持发送“可纠正错误”消息;1：支持发送“可纠正错误”消息。
        unsigned int    non_fatal_error_reporting_enable  : 1   ; // [1] non-fatal error reporting enable0：不支持发送“非致命错误”消息;1：支持发送“非致命错误”消息。
        unsigned int    fatal_error_reporting_enable  : 1   ; // [2] fatal error reporting enable0：不支持发送“致命错误”消息;1：支持发送“致命错误”消息。
        unsigned int    urenable              : 1   ; // [3] unsupported request reporting enable0：不支持发送“不被支持请求”消息;1：支持发送“不被支持请求”消息。
        unsigned int    enable_relaxed_ordering  : 1   ; // [4] enable relaxed ordering0：不支持灵活事务顺序;1：支持灵活事务顺序。
        unsigned int    max_payload_size      : 3   ; // [7..5] max_payload_size000：128byte;001：256byte;010：512byte;011：保留;100：保留e;101：保留;110：保留;111：保留。
        unsigned int    extended_tagfieldenable  : 1   ; // [8] extended tag field enable0：禁用扩展tag字段;1：使能扩展tag字段。
        unsigned int    phantom_function_enable  : 1   ; // [9] phantom function enable0：禁用phantom function;1：使能phantom function。
        unsigned int    auxpowerpmenable      : 1   ; // [10] aux power pm enable0：禁用附加电源;1：使能附加电源。
        unsigned int    enablenosnoop         : 1   ; // [11] enable no snoop0：禁用no snoop特性;1：使能no snoop特性。
        unsigned int    max_read_request_size  : 3   ; // [14..12] max_read_request_size000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    reserved_24           : 1   ; // [15] reserved
        unsigned int    correctableerrordetected  : 1   ; // [16] correctable error detected0：没有检测到可纠正错误;1：检测到可纠正错误。
        unsigned int    non_fatalerrordetected  : 1   ; // [17] non-fatal error detected0：没有检测到非致命错误;1：检测到非致命错误。
        unsigned int    fatalerrordetected    : 1   ; // [18] fatal error detected0：没有检测到致命错误;1：检测到致命错误。
        unsigned int    unsupportedrequestdetected  : 1   ; // [19] unsupported request detected0：没有收到不被支持的请求;1：收到不被支持的请求。
        unsigned int    auxpowerdetected      : 1   ; // [20] aux power detected0：没有检测到辅助电源;1：检测到辅助电源。
        unsigned int    transactionpending    : 1   ; // [21] transaction pending硬连线为0
        unsigned int    reserved_23           : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap2_u;

// define the union pcie_rc_cap3_u
// pci express功能寄存器
// 0x7c
typedef union tagrcpciecap3
{
    // define the struct bits
    struct
    {
        unsigned int    max_link_speed        : 4   ; // [3..0] max link speeds0001：2.5gt/s;0010：5.0gt/s;0100：8.0gt/s;其他值：不支持。
        unsigned int    max_link_width        : 6   ; // [9..4] maximum link width000001：x1通道;000010：x2通道;000100：x4通道;001000：x8通道;010000：x16通道;其他值：保留。
        unsigned int    active_state_power_management  : 2   ; // [11..10] active state link pm support0：不支持aspm;1：支持aspm。
        unsigned int    l0s_exitlatency       : 3   ; // [14..12] l0s exit latency000：小于64ns;
        unsigned int    l1_exit_latency       : 3   ; // [17..15] l1 exit latency000：小于1us;
        unsigned int    clock_power_management  : 1   ; // [18] clock power management0：不支持clock power management;1：支持clock power management。
        unsigned int    surprise_down_error_report_cap  : 1   ; // [19] surprise down error reporting capable，该版本ip不支持，硬连线为0
        unsigned int    data_link_layer_active_report_cap  : 1   ; // [20] data link layer active reporting capable，对于rc硬连线为10：不支持data link layer active reporting;1：支持data link layer active reporting。
        unsigned int    link_bandwidth_noti_cap  : 1   ; // [21] link bandwidth notification capability，对于rc硬连线为10：不支持link bandwidth notification capability;1：支持link bandwidth notification capability。
        unsigned int    aspm_option_compliance  : 1   ; // [22] aspm optionality compliance0：不支持aspm optionality compliance;1：支持aspm optionality compliance。
        unsigned int    reserved_25           : 1   ; // [23] reserved
        unsigned int    port_number           : 8   ; // [31..24] port number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap3_u;

// define the union pcie_rc_cap4_u
// pci express功能寄存器
// 0x80
typedef union tagrcpciecap4
{
    // define the struct bits
    struct
    {
        unsigned int    active_state_link_pm_control  : 2   ; // [1..0] active state link pm control00：禁止aspm机制;01：pcie设备可以进入l0s状态;10：pcie设备可以进入l1状态;11：pcie设备可以进入l0s和l1状态。
        unsigned int    reserved_28           : 1   ; // [2] reserved
        unsigned int    read_completion_boundary_rcb_  : 1   ; // [3] read completion boundary (rcb)0：rcb为64byte;1：rcb为128byte。
        unsigned int    link_disable          : 1   ; // [4] link disable0：不禁用链路;1：禁用链路。
        unsigned int    retrain_link          : 1   ; // [5] retrain link0：不重新进行链路训练;1：重新进行链路训练。
        unsigned int    common_clock_configuration  : 1   ; // [6] common clock configuration.0：链路两端采用不同源参考时钟;1：链路两端采用同源参考时钟。
        unsigned int    extended_synch        : 1   ; // [7] extended synch0：禁用extended synch;1：使能extended synch。
        unsigned int    enable_clock_power_management  : 1   ; // [8] enable clock power management0：禁用clock power management;1：使能clock power management。
        unsigned int    hardware_autonomous_widthdisable  : 1   ; // [9] hardware autonomous width disable该版本ip不支持，硬连线为0
        unsigned int    link_bandwidth_managementinterrupt_enable  : 1   ; // [10] link bandwidth management interrupt enable
        unsigned int    link_autonomou_sband_widthinterruptenable  : 1   ; // [11] link autonomous bandwidth interrupt enable
        unsigned int    reserved_27           : 4   ; // [15..12] reserved
        unsigned int    link_speed            : 4   ; // [19..16] link speed0001：2.5gt/s;0010：5.0gt/s;0100：8.0gt/s;其他值：保留。
        unsigned int    negotiatedlinkwidth   : 6   ; // [25..20] negotiated link width00001：x1通道;00010：x2通道;00100：x4通道;01000：x8通道;10000：x16通道;其他值：保留。
        unsigned int    reserved_26           : 1   ; // [26] 不使用
        unsigned int    link_training         : 1   ; // [27] link training
        unsigned int    slot_clock_configuration  : 1   ; // [28] slot clock configuration0：插槽与add-in卡使用的参考时钟源不同;1：插槽与add-in卡使用的参考时钟源相同。
        unsigned int    data_linklayeractive  : 1   ; // [29] data link layer active
        unsigned int    link_bandwidth_management_status  : 1   ; // [30] link bandwidth management status
        unsigned int    link_ctrl_status      : 1   ; // [31] link autonomous bandwidth status
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap4_u;

// define the union pcie_rc_cap5_u
// pci express功能寄存器
// 0x84
typedef union tagrcpciecap5
{
    // define the struct bits
    struct
    {
        unsigned int    attentioonbuttonpresent  : 1   ; // [0] attention indicator present0：没有attention indicator;1：有attention indicator。
        unsigned int    powercontrollerpresent  : 1   ; // [1] power controller present0：没有power controller;1：有power controller。
        unsigned int    mrlsensorpresent      : 1   ; // [2] mrl sensor present0：没有mrl sensor;1：有mrl sensor。
        unsigned int    attentionindicatorpresent  : 1   ; // [3] attention indicator present0：没有attention indicator;1：有attention indicator。
        unsigned int    powerindicatorpresent  : 1   ; // [4] power indicator present0：没有power indicator;1：有power indicator。
        unsigned int    hot_plugsurprise      : 1   ; // [5] hot-plug surprise0：不支持hot-plug surprise;1：支持hot-plug surprise。
        unsigned int    hot_plugcapable       : 1   ; // [6] hot-plug capable0：不支持热插拔;1：支持热插拔。
        unsigned int    slotpowerlimitvalue   : 8   ; // [14..7] slot power limit value
        unsigned int    slotpowerlimitscale   : 2   ; // [16..15] slot power limit scale
        unsigned int    electromechanicalinterlockpresen  : 1   ; // [17] electromechanical interlock present0：没有electromechanical interlock ;1：有electromechanical interlock 。
        unsigned int    no_cmd_complete_support  : 1   ; // [18] no command complete support0：支持command complete;1：不支持no command complete。
        unsigned int    phy_slot_number       : 13  ; // [31..19] physical slot number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap5_u;

// define the union pcie_rc_cap6_u
// pci express功能寄存器
// 0x88
typedef union tagrcpciecap6
{
    // define the struct bits
    struct
    {
        unsigned int    attentionbuttonpressedenable  : 1   ; // [0] attention button pressed enable0：禁用attention button pressed;1：使能attention button pressed。
        unsigned int    powerfaultdetectedenable  : 1   ; // [1] power fault detected enable0：禁用power fault detected;1：使能power fault detected。
        unsigned int    mrlsensorchangedenable  : 1   ; // [2] mrl sensor changed enable0：禁用mrl sensor changed;1：使能mrl sensor changed。
        unsigned int    presencedetectchangedenable  : 1   ; // [3] presence detect changed enable0：禁用presence detect changed;1：使能presence detect changed。
        unsigned int    commandcompletedinterruptenable  : 1   ; // [4] command completed interrupt enable0：禁用command completed interrupt;1：使能command completed interrupt。
        unsigned int    hot_pluginterruptenable  : 1   ; // [5] hot-plug interrupt enable0：禁用hot-plug interrupt;1：使能hot-plug interrupt。
        unsigned int    attentionindicatorcontrol  : 2   ; // [7..6] attention indicator control00：保留;01：on;10：blink;11：off。
        unsigned int    powerindicatorcontrol  : 2   ; // [9..8] power indicator control00：保留;01：on;10：blink;11：off。
        unsigned int    powercontrollercontrol  : 1   ; // [10] power controller control0：禁用power controller control;1：使能power controller control。
        unsigned int    electromechanicalinterlockcontrol  : 1   ; // [11] electromechanical interlock control0：禁用electromechanical interlock control;1：使能aelectromechanical interlock control。
        unsigned int    datalinklayerstatechangedenable  : 1   ; // [12] data link layer state changed enable0：禁用data link layer state changed;1：使能data link layer state changed enable。
        unsigned int    reserved_29           : 3   ; // [15..13] reserved
        unsigned int    attentionbuttonpressed  : 1   ; // [16] attention button pressed0：attention button not pressed;1：attention button pressed。
        unsigned int    powerfaultdetected    : 1   ; // [17] power fault detected0：power fault not detected;1：power fault detected。
        unsigned int    mrlsensorchanged      : 1   ; // [18] mrl sensor changed0：mrl sensor not changed;1：mrl sensor changed。
        unsigned int    presencedetectchanged  : 1   ; // [19] presence detect changed0：presence detect not changed;1：presence detect changed。
        unsigned int    commandcompleted      : 1   ; // [20] command completed0：command not completed;1：command completed。
        unsigned int    mrlsensorstate        : 1   ; // [21] mrl sensor state0：不处于mrl sensor state;1：处于mrl sensor state。
        unsigned int    presencedetectstate   : 1   ; // [22] presence detect state0：不处于presence detect state;1：处于presence detect state。
        unsigned int    electromechanicalinterlockstatus  : 1   ; // [23] electromechanical interlock status0：不处于electromechanical interlock status;1：处于electromechanical interlock status。
        unsigned int    datalinklayerstatechanged  : 1   ; // [24] data link layer state changed0：data link layer state not changed;1：data link layer state changed。
        unsigned int    slot_ctrl_status      : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap6_u;

// define the union pcie_rc_cap7_u
// pci express功能寄存器
// 0x8c
typedef union tagrcpciecap7
{
    // define the struct bits
    struct
    {
        unsigned int    systemerroroncorrectableerrorenable  : 1   ; // [0] system error on correctable error enable0：禁用system error on correctable error;1：使能system error on correctable error。
        unsigned int    systemerroronnon_fatalerrorenable  : 1   ; // [1] system error on non-fatal error enable0：禁用system error on non-fatal error ;1：使能system error on non-fatal error 。
        unsigned int    systemerroronfatalerrorenable  : 1   ; // [2] system error on fatal error enable0：禁用system error on fatal error ;1：使能system error on fatal error 。
        unsigned int    pmeinterruptenable    : 1   ; // [3] pme interrupt enable0：禁用pme interrupt;1：使能pme interrupt。
        unsigned int    crssoftwarevisibilityenable  : 1   ; // [4] crs software visibility enable
        unsigned int    reserved_30           : 11  ; // [15..5] reserved
        unsigned int    crssoftwarevisibility  : 1   ; // [16] crs software visibility
        unsigned int    root_cap              : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap7_u;

// define the union pcie_rc_cap8_u
// pci express功能寄存器
// 0x90
typedef union tagrcpciecap8
{
    // define the struct bits
    struct
    {
        unsigned int    pmerequesterid        : 16  ; // [15..0] pme requester id
        unsigned int    pmestatus             : 1   ; // [16] pme status0：不指示pme status;1：指示pme status。
        unsigned int    pmepending            : 1   ; // [17] pme pending0：指示无pme pending;1：指示pme pending。
        unsigned int    root_status           : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap8_u;

// define the union pcie_rc_cap9_u
// pci express功能寄存器
// 0x94
typedef union tagrcpciecap9
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutrangessupported  : 4   ; // [3..0] completion timeout ranges supportedrange a: 50us to 10ms;range b: 10ms to 250ms;range c: 250ms to 4s;range d: 4s to 64s。
        unsigned int    completiontimeoutdisablesupported  : 1   ; // [4] completion timeout disable supported0：不支持禁用completion timeout;1：支持禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoproutingsupported  : 1   ; // [6] atomicop routing supported，不适用于endpoint。
        unsigned int    _2_bitatomicopcompletersupported  : 1   ; // [7] 32-bit atomicop completer supported0：不支持32-bit atomicop completer ;1：支持32-bit atomicop completer 。
        unsigned int    _4_bitatomicopcompletersupported  : 1   ; // [8] 64-bit atomicop completer supported0：不支持64-bit atomicop completer;1：支持64-bit atomicop completer。
        unsigned int    _28_bitcascompletersupported  : 1   ; // [9] 128-bit cas completer supported0：不支持128-bit cas completer;1：支持128-bit cas completer。
        unsigned int    noro_enabledpr_prpassing  : 1   ; // [10] no ro-enabled pr-pr passing0：no ro-enabled pr-pr passing;1：ro-enabled pr-pr passing。
        unsigned int    reserved_31           : 1   ; // [11] reserved
        unsigned int    tphcompletersupported  : 2   ; // [13..12] tph completer supported00：接收端不支持tph和扩展tph报文;01：接收端仅支持tph报文;10：保留;11：接收端支持tph和扩展tph报文。
        unsigned int    dev_cap2              : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap9_u;

// define the union pcie_rc_cap10_u
// pci express功能寄存器
// 0x98
typedef union tagrcpciecap10
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutvalue  : 4   ; // [3..0] completion timeout value0000b：default range: 50us to 50ms;0001b：50us to 100us;0010b：1ms to 10ms;0101b：16ms to 55ms;0110b：65ms to 210ms;1001b：260ms to 900ms;1010b：1s to 3.5s;1101b：4s to 13s;1110b：17s to 64s;其他值：保留。
        unsigned int    completiontimeoutdisable  : 1   ; // [4] completion timeout disable0：不禁用completion timeout;1：禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoprequesterenable  : 1   ; // [6] atomicop requester enable0：禁用atomicop requester;1：使能atomicop requester。
        unsigned int    atomicopegressblocking  : 1   ; // [7] atomicop egress blocking对于endpoint不使用，reserved
        unsigned int    idorequestenable      : 1   ; // [8] ido request enable0：禁用ido request enable;1：使能ido request enable。
        unsigned int    idocompletionenable   : 1   ; // [9] ido completion enable0：禁用ido completion enable;1：使能ido completion enable。
        unsigned int    dev_ctrl2             : 22  ; // [31..10] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap10_u;

// define the union pcie_rc_cap11_u
// pci express功能寄存器
// 0x9c
typedef union tagrcpciecap11
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_33           : 1   ; // [0] reserved
        unsigned int    gen1_suport           : 1   ; // [1] gen1链路速度支持0：不支持2.5gt/s;1：支持2.5gt/s。
        unsigned int    gen2_suport           : 1   ; // [2] gen2链路速度支持0：不支持5.0gt/s;1：支持5.0gt/s。
        unsigned int    gen3_suport           : 1   ; // [3] gen3链路速度支持0：不支持8.0gt/s;1：支持8.0gt/s。
        unsigned int    reserved_32           : 4   ; // [7..4] reserved
        unsigned int    crosslink_supported   : 1   ; // [8] crosslink supported
        unsigned int    link_cap2             : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap11_u;

// define the union pcie_rc_cap12_u
// pci express功能寄存器
// 0xa0
typedef union tagrcpciecap12
{
    // define the struct bits
    struct
    {
        unsigned int    targetlinkspeed       : 4   ; // [3..0] target link speed
        unsigned int    entercompliance       : 1   ; // [4] enter compliance0：不令链路进入compliance模式;1：令链路进入compliance模式。
        unsigned int    hardwareautonomousspeeddisa  : 1   ; // [5] hardware autonomous speed disable0：不禁用hardware autonomous speed;1：禁用hardware autonomous speed。
        unsigned int    selectablede_empha    : 1   ; // [6] selectable de-emphasis0：-6db;1：-3.5db。
        unsigned int    transmitmargin        : 3   ; // [9..7] transmit margin
        unsigned int    _entermodifiedcompliance  : 1   ; // [10] enter modified compliance0：如果ltssm进入polling.compliance状态，不发送modified compliance pattern;1：如果ltssm进入polling.compliance状态，发送一个modified compliance pattern。
        unsigned int    compliancesos         : 1   ; // [11] compliance sos0：在发送compliance pattern或modified pattern时不在中间插入skp有序集;1：在发送compliance pattern或modified pattern时在中间插入skp有序集。
        unsigned int    de_emphasislevel      : 4   ; // [15..12] de-emphasis level0001：-3.5db;0000：-6db其他值：保留。
        unsigned int    currentde_emphasislevel  : 1   ; // [16] current de-emphasis level0：-6db;1：-3.5db。
        unsigned int    equalizationcomplete  : 1   ; // [17] equalization complete0：equalization未完成;1：equalization完成。
        unsigned int    equalizationphase1successful  : 1   ; // [18] equalization phase 1 successful0：equalization phase 1不成功;1：equalization phase 1成功。
        unsigned int    equalizationphase2successful  : 1   ; // [19] equalization phase 2 successful0：equalization phase 2不成功;1：equalization phase 2成功。
        unsigned int    equalizationphase3successful  : 1   ; // [20] equalization phase 3 successful0：equalization phase 3不成功;1：equalization phase 3成功。
        unsigned int    linkequalizationrequest  : 1   ; // [21] link equalization request0：没有请求link equalization;1：请求link equalization 。
        unsigned int    link_ctrl2_status2    : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap12_u;

// define the union pcie_rc_cap13_u
// pci express功能寄存器
// 0xb0
typedef union tagrcpciecap13
{
    // define the struct bits
    struct
    {
        unsigned int    msi_x_capability_id   : 8   ; // [7..0] msi_x_capability_id
        unsigned int    next_capability_pointer  : 8   ; // [15..8] next_capability_pointer
        unsigned int    msi_x_table_size      : 11  ; // [26..16] msi-x table sizeencoded as (table size - 1). for example, a value of0x003 indicates the msi-x table size is 4.
        unsigned int    reserved_34           : 3   ; // [29..27] reserved
        unsigned int    function_mask         : 1   ; // [30] function mask■ 1: all vectors associated with the function aremasked, regardless of their respective per-vectormask bits.■ 0: each vector’s mask bit determines whether thevector is masked or not.
        unsigned int    msi_x_enable          : 1   ; // [31] msi-x enablewhen msi-x is enabled, msi and intx must bedisabled
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap13_u;

// define the union pcie_rc_cap14_u
// pci express功能寄存器
// 0xb4
typedef union tagrcpciecap14
{
    // define the struct bits
    struct
    {
        unsigned int    msix_table_offset_n   : 3   ; // [2..0] table offsetbase address of the msi-x table, as an offsetfrom the base address of the bar indicated by thetable bir bits.
        unsigned int    msix_table_bir_n      : 29  ; // [31..3] table bar indicator register (bir)indicates which bar is used to map the msi-xtable into memory space:■ 000: bar0■ 001: bar1■ 010: bar2■ 011: bar3■ 100: bar4■ 101: bar5■ 110: reserved■ 111: reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap14_u;

// define the union pcie_rc_cap15_u
// pci express功能寄存器
// 0xb8
typedef union tagrcpciecap15
{
    // define the struct bits
    struct
    {
        unsigned int    msix_pba_offset_n     : 2   ; // [1..0] pba offsetbase address of the msi-x pba, as an offset fromthe base address of the bar indicated by the pbabir bits
        unsigned int    msix_pba_bir_n        : 30  ; // [31..2] pending bit array (pba) birindicates which bar is used to map the msi-x pbainto memory space:■ 000: bar0■ 001: bar1■ 010: bar2■ 011: bar3■ 100: bar4■ 101: bar5■ 110: reserved■ 111: reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_cap15_u;

// define the union pcie_rc_slot_cap_u
// slot numbering功能寄存器
// 0xc0
typedef union tagrcslotcap
{
    // define the struct bits
    struct
    {
        unsigned int    slotnumberingcapabilitiesid  : 8   ; // [7..0] slot numbering capabilities id
        unsigned int    nextcapabilitypointer  : 8   ; // [15..8] next capability pointer
        unsigned int    add_incardslotsprovided  : 5   ; // [20..16] add-in card slots provided
        unsigned int    firstinchassis        : 1   ; // [21] first in chassis
        unsigned int    reserved_36           : 2   ; // [23..22] reserved
        unsigned int    slot_cap              : 8   ; // [31..24] chassis number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_slot_cap_u;

// define the union pcie_rc_aer_cap0_u
// 高级错误报告寄存器
// 0x100
typedef union tagrcaercap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    aer_cap_hdr           : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap0_u;

// define the union pcie_rc_aer_cap1_u
// 高级错误报告寄存器
// 0x104
typedef union tagrcaercap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_42           : 1   ; // [0] 未定义
        unsigned int    reserved_41           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsta  : 1   ; // [4] data link protocol error status0：未检测到data link protocol error;1：检测到data link protocol error。
        unsigned int    surprisedownerrorstatus  : 1   ; // [5] surprise down error status，该版本ip不支持。
        unsigned int    reserved_40           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpstatu      : 1   ; // [12] poisoned tlp status0：未检测到poisoned tlp;1：检测到poisoned tlp。
        unsigned int    flowcontrolprotocolerrorst  : 1   ; // [13] flow control protocol error status0：未检测到flow control protocol error;1：检测到flow control protocol error。
        unsigned int    completiontimeouts    : 1   ; // [14] completion timeout status0：未检测到completion timeout;
        unsigned int    completerabortstatus  : 1   ; // [15] completer abort status0：未检测到completer abort;1：检测到completer abort。
        unsigned int    receiveroverflowstatus  : 1   ; // [16] unexpected completion status0：未检测到unexpected completion;1：检测到unexpected completion。
        unsigned int    malformedtlpstatus    : 1   ; // [17] receiver overflow status0：未检测到receiver overflow;1：检测到receiver overflow。
        unsigned int    ecrcerrorstatus       : 1   ; // [18] malformed tlp status0：未检测到malformed tlp;1：检测到malformed tlp。
        unsigned int    ecrcerrorstat         : 1   ; // [19] ecrc error status0：未检测到ecrc error;1：检测到ecrc error。
        unsigned int    unsupportedrequesterrorstatus  : 1   ; // [20] unsupported request error status0：未检测到unsupported request error;1：检测到unsupported request error;。
        unsigned int    reserved_39           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedstatus  : 1   ; // [24] atomicop egress blocked status0：atomicop egress is not blocked;1：atomicop egress is blocked。
        unsigned int    uncorr_err_status     : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap1_u;

// define the union pcie_rc_aer_cap2_u
// 高级错误报告寄存器
// 0x108
typedef union tagrcaercap2
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_46           : 1   ; // [0] 未定义
        unsigned int    reserved_45           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrormask  : 1   ; // [4] data link protocol error mask0：data link protocol error is not masked;1：data link protocol error is masked。
        unsigned int    surprisedownerrormask  : 1   ; // [5] surprise down error mask，该版本ip不支持。
        unsigned int    reserved_44           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpmask       : 1   ; // [12] poisoned tlp mask0：poisoned tlp is not masked;1：poisoned tlp is masked。
        unsigned int    flowcontrolprotocolerrormask  : 1   ; // [13] flow control protocol error mask0：flow control protocol error is not masked;1：flow control protocol error is masked。
        unsigned int    completiontimeoutmask  : 1   ; // [14] completion timeout mask0：completion timeout is not masked;1：completion timeout is masked。
        unsigned int    completerabortmask    : 1   ; // [15] completer abort mask0：completer abort is not masked;1：completer abort is masked。
        unsigned int    unexpectedcompletionmask  : 1   ; // [16] unexpected completion mask0：unexpected completion is not masked;1：unexpected completion is masked。
        unsigned int    receiveroverflowmask  : 1   ; // [17] receiver overflow mask0：receiver overflow is not masked;1：receiver overflow is masked。
        unsigned int    malformedtlpmask      : 1   ; // [18] malformed tlp mask0：malformed tlp is not masked;1：malformed tlp is masked。
        unsigned int    ecrcerrormask         : 1   ; // [19] ecrc error mask0：ecrc error is not masked;1：ecrc error is masked。
        unsigned int    unsupportedrequesterrormask  : 1   ; // [20] unsupported request error mask0：unsupported request error is not masked;1：unsupported request error is masked。
        unsigned int    reserved_43           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedmask  : 1   ; // [24] atomicop egress blocked mask0：atomicop egress blocked is not masked;1：atomicop egress blocked is masked。
        unsigned int    uncorr_err_mask       : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap2_u;

// define the union pcie_rc_aer_cap3_u
// 高级错误报告寄存器
// 0x10c
typedef union tagrcaercap3
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_50           : 1   ; // [0] 未定义
        unsigned int    reserved_49           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsever  : 1   ; // [4] data link protocol error severity0：non-fatal;1：fatal。
        unsigned int    surprisedownerrorseverity  : 1   ; // [5] surprise down error severity，该版本ip不支持
        unsigned int    reserved_48           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpseverity   : 1   ; // [12] poisoned tlp severity0：non-fatal;1：fatal。
        unsigned int    flowcontrolprotocolerrorseveri  : 1   ; // [13] flow control protocol error severity0：non-fatal;1：fatal。
        unsigned int    completiontimeoutseverity  : 1   ; // [14] completion timeout severity0：non-fatal;1：fatal。
        unsigned int    completerabortseverity  : 1   ; // [15] completer abort severity0：non-fatal;1：fatal。
        unsigned int    unexpectedcompletionseverity  : 1   ; // [16] unexpected completion severity0：non-fatal;1：fatal。
        unsigned int    receiveroverflowseverity  : 1   ; // [17] receiver overflow severity0：non-fatal;1：fatal。
        unsigned int    malformedtlpseverity  : 1   ; // [18] malformed tlp severity0：non-fatal;1：fatal。
        unsigned int    ecrcerrorseverity     : 1   ; // [19] ecrc error severity0：non-fatal;1：fatal。
        unsigned int    unsupportedrequesterrorseverity  : 1   ; // [20] unsupported request error severity0：non-fatal;1：fatal。
        unsigned int    reserved_47           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedseverity  : 1   ; // [24] atomicop egress blocked severity0：non-fatal;1：fatal。
        unsigned int    uncorr_err_ser        : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap3_u;

// define the union pcie_rc_aer_cap4_u
// 高级错误报告寄存器
// 0x110
typedef union tagrcaercap4
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrorstatus   : 1   ; // [0] receiver error status0：未检测到receiver error;1：检测到receiver error。
        unsigned int    reserved_52           : 5   ; // [5..1] reserved
        unsigned int    badtlpstatus          : 1   ; // [6] bad tlp status0：未检测到bad tlp;1：检测到bad tlp。
        unsigned int    baddllpstatus         : 1   ; // [7] bad dllp status0：未检测到bad dllp;1：检测到bad dllp。
        unsigned int    replay_numrolloverstatus  : 1   ; // [8] replay_num rollover status0：未检测到replay_num rollover;1：检测到replay_num rollover。
        unsigned int    reserved_51           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutstatus  : 1   ; // [12] reply timer timeout status0：未检测到reply timer timeout;1：检测到reply timer timeout。
        unsigned int    advisorynon_fatalerrorstatus  : 1   ; // [13] advisory non-fatal error status0：未检测到advisory non-fatal error;1：检测到advisory non-fatal error。
        unsigned int    corr_err_status       : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap4_u;

// define the union pcie_rc_aer_cap5_u
// 高级错误报告寄存器
// 0x114
typedef union tagrcaercap5
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrormask     : 1   ; // [0] receiver error mask0：receiver error is not masked;1：receiver error is masked。
        unsigned int    reserved_54           : 5   ; // [5..1] reserved
        unsigned int    badtlpmask            : 1   ; // [6] bad tlp mask0：bad tlp is not masked;1：bad tlp is masked。
        unsigned int    baddllpmask           : 1   ; // [7] bad dllp mask0：bad dllp is not masked;1：bad dllp is masked。
        unsigned int    replay_numrollovermask  : 1   ; // [8] replay_num rollover mask0：replay_num rollover is not masked;1：replay_num rollover is masked。
        unsigned int    reserved_53           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutmask  : 1   ; // [12] reply timer timeout mask0：reply timer timeout is not masked;1：reply timer timeout is masked。
        unsigned int    advisorynon_fatalerrormask  : 1   ; // [13] advisory non-fatal error mask0：advisory non-fatal error is not maskd;1：advisory non-fatal error is masked。
        unsigned int    corr_err_mask         : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap5_u;

// define the union pcie_rc_aer_cap6_u
// 高级错误报告寄存器
// 0x118
typedef union tagrcaercap6
{
    // define the struct bits
    struct
    {
        unsigned int    firsterrorpointer     : 5   ; // [4..0] first error pointer
        unsigned int    ecrcgenerationcapability  : 1   ; // [5] ecrc generation capability0：no capability;1：has capability。
        unsigned int    ecrcgenerationenable  : 1   ; // [6] ecrc generation enable0：disable;1：enable。
        unsigned int    ecrccheckcapable      : 1   ; // [7] ecrc check capable0：no capability;1：has capability。
        unsigned int    ecrccheckenable       : 1   ; // [8] ecrc check enable0：diable;1：enable。
        unsigned int    adv_cap_ctrl          : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap6_u;

// define the union pcie_rc_aer_cap11_u
// 高级错误报告寄存器
// 0x12c
typedef union tagrcaercap11
{
    // define the struct bits
    struct
    {
        unsigned int    correctableerrorreportingenable  : 1   ; // [0] correctable error reporting enable0：disable;1：enable。
        unsigned int    non_fatalerrorreportingenable  : 1   ; // [1] non-fatal error reporting enable0：disable;1：enable。
        unsigned int    fatalerrorreportingenable  : 1   ; // [2] fatal error reporting enable0：disable;1：enable。
        unsigned int    root_err_cmd          : 29  ; // [31..3] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap11_u;

// define the union pcie_rc_aer_cap12_u
// 高级错误报告寄存器
// 0x130
typedef union tagrcaercap12
{
    // define the struct bits
    struct
    {
        unsigned int    err_correceived       : 1   ; // [0] err_cor received0：未收到err_cor;1：收到err_cor。
        unsigned int    multipleerr_correceived  : 1   ; // [1] multiple err_cor received0：未收到多个err_cor;1：收到多个err_cor。
        unsigned int    err_fatal_nonfatalreceived  : 1   ; // [2] err_fatal/nonfatal received0：未收到err_fatal/nonfatal;1：收到err_fatal/nonfatal。
        unsigned int    multipleerr_fatal_nonfatalreceived  : 1   ; // [3] multiple err_fatal/nonfatal received0：未收到多个err_fatal/nonfatal;1：收到多个err_fatal/nonfatal。
        unsigned int    firstuncorrectablefatal  : 1   ; // [4] first uncorrectable fatal0：指示没有收到第一个uncorrectable fatal;1：指示收到第一个uncorrectable fatal。
        unsigned int    non_fatalerrormessagesreceived  : 1   ; // [5] non-fatal error messages received0：未收到non-fatal error messages;1：收到non-fatal error messages。
        unsigned int    fatalerrormessagesreceived  : 1   ; // [6] fatal error messages received0：未收到fatal error messages;1：收到fatal error messages。
        unsigned int    reserved_55           : 20  ; // [26..7] reserved
        unsigned int    root_err_status       : 5   ; // [31..27] advanced error interrupt message number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap12_u;

// define the union pcie_rc_aer_cap13_u
// 高级错误报告寄存器
// 0x134
typedef union tagrcaercap13
{
    // define the struct bits
    struct
    {
        unsigned int    err_corsourceidentification  : 16  ; // [15..0] err_cor source identification
        unsigned int    err_src_id            : 16  ; // [31..16] err_fatal/nonfatal source identification
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_aer_cap13_u;

// define the union pcie_rc_vc_cap0_u
// 虚拟通道功能寄存器
// 0x140
typedef union tagrcvccap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    vc_cap_hdr            : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap0_u;

// define the union pcie_rc_vc_cap1_u
// 虚拟通道功能寄存器
// 0x144
typedef union tagrcvccap1
{
    // define the struct bits
    struct
    {
        unsigned int    extendedvccount       : 3   ; // [2..0] extended vc count
        unsigned int    reserved_58           : 1   ; // [3] reserved
        unsigned int    lowpriorityextendedvccount  : 3   ; // [6..4] low priority extended vc count
        unsigned int    reserved_57           : 1   ; // [7] reserved
        unsigned int    referenceclock        : 2   ; // [9..8] reference clock，不适用于endpoint，硬连线为0
        unsigned int    portarbitrationtableentrysize  : 2   ; // [11..10] port arbitration table entry size，不适用于endpoint，硬连线为0
        unsigned int    vc_cap1               : 20  ; // [31..12] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap1_u;

// define the union pcie_rc_vc_cap2_u
// 虚拟通道功能寄存器
// 0x148
typedef union tagrcvccap2
{
    // define the struct bits
    struct
    {
        unsigned int    vcarbitrationcapability  : 8   ; // [7..0] vc arbitration capability
        unsigned int    reserved_59           : 16  ; // [23..8] reserved
        unsigned int    vc_cap2               : 8   ; // [31..24] vc arbitration table offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap2_u;

// define the union pcie_rc_vc_cap3_u
// 虚拟通道功能寄存器
// 0x14c
typedef union tagrcvccap3
{
    // define the struct bits
    struct
    {
        unsigned int    loadvcarbitrationtable  : 1   ; // [0] load vc arbitration table
        unsigned int    vcarbitrationselect   : 3   ; // [3..1] vc arbitration select
        unsigned int    reserved_61           : 12  ; // [15..4] reserved
        unsigned int    arbitrationtablestatus  : 1   ; // [16] arbitration table status
        unsigned int    reserved_60           : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap3_u;

// define the union pcie_rc_vc_cap4_u
// 虚拟通道功能寄存器
// 0x150
typedef union tagrcvccap4
{
    // define the struct bits
    struct
    {
        unsigned int    portarbitrationcapability  : 8   ; // [7..0] port arbitration capability
        unsigned int    reserved_64           : 6   ; // [13..8] reserved
        unsigned int    reserved_63           : 1   ; // [14] 未定义
        unsigned int    rejectsnooptransactions  : 1   ; // [15] reject snoop transactions，不适用于endpoint，硬连线为0
        unsigned int    maximumtimeslots      : 7   ; // [22..16] maximum time slots，不适用于endpoint
        unsigned int    reserved_62           : 1   ; // [23] reserved
        unsigned int    vc_res_cap            : 8   ; // [31..24] port arbitration table offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap4_u;

// define the union pcie_rc_vc_cap5_u
// 虚拟通道功能寄存器
// 0x154
typedef union tagrcvccap5
{
    // define the struct bits
    struct
    {
        unsigned int    tc_vcmap              : 8   ; // [7..0] tc/vc map
        unsigned int    reserved_67           : 8   ; // [15..8] reserved
        unsigned int    loadportarbitrationtable  : 1   ; // [16] load port arbitration table，不适用于endpoint
        unsigned int    portarbitrationselec  : 3   ; // [19..17] port arbitration select，对于endpoint硬连线为0
        unsigned int    reserved_66           : 4   ; // [23..20] reserved
        unsigned int    vcid                  : 3   ; // [26..24] vc id，硬连线为0
        unsigned int    reserved_65           : 4   ; // [30..27] reserved
        unsigned int    vc_res_ctrl           : 1   ; // [31] vc enable
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap5_u;

// define the union pcie_rc_vc_cap6_u
// 虚拟通道功能寄存器
// 0x158
typedef union tagrcvccap6
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_68           : 16  ; // [15..0] reserved
        unsigned int    portarbitrationtablestatus  : 1   ; // [16] port arbitration table status
        unsigned int    vcnegotiationpending  : 1   ; // [17] vc negotiation pending
        unsigned int    vc_res_status         : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap6_u;

// define the union pcie_rc_vc_cap7_u
// 虚拟通道功能寄存器
// 0x15c
typedef union tagrcvccap7
{
    // define the struct bits
    struct
    {
        unsigned int    portarbitrationcapability  : 8   ; // [7..0] port arbitration capability，硬连线为1
        unsigned int    reserved_71           : 6   ; // [13..8] reserved
        unsigned int    reserved_70           : 1   ; // [14] 未定义
        unsigned int    rejectsnooptransactions  : 1   ; // [15] reject snoop transactions
        unsigned int    maximumtimeslots      : 7   ; // [22..16] maximum time slots
        unsigned int    reserved_69           : 1   ; // [23] reserved
        unsigned int    vc_res_cap0           : 8   ; // [31..24] port arbitration table offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap7_u;

// define the union pcie_rc_vc_cap8_u
// 虚拟通道功能寄存器
// 0x160
typedef union tagrcvccap8
{
    // define the struct bits
    struct
    {
        unsigned int    tc_vcmap              : 8   ; // [7..0] tc/vc map
        unsigned int    reserved_74           : 8   ; // [15..8] reserved
        unsigned int    loadportarbitrationtable  : 1   ; // [16] load port arbitration table
        unsigned int    portarbitrationselect  : 3   ; // [19..17] port arbitration select，对于endpoint硬连线为0
        unsigned int    reserved_73           : 4   ; // [23..20] reserved
        unsigned int    vcid                  : 3   ; // [26..24] vc id
        unsigned int    reserved_72           : 4   ; // [30..27] reserved
        unsigned int    vc_res_ctrl0          : 1   ; // [31] vc enable0：vc禁用;1：vc使能。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap8_u;

// define the union pcie_rc_vc_cap9_u
// 虚拟通道功能寄存器
// 0x164
typedef union tagrcvccap9
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_75           : 16  ; // [15..0] reserved
        unsigned int    arbitrationtablestatus  : 1   ; // [16] arbitration table status
        unsigned int    vcnegotiationpending  : 1   ; // [17] vc negotiation pending
        unsigned int    vc_res_status0        : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_vc_cap9_u;

// define the union pcie_rc_port_logic0_u
// 端口逻辑寄存器
// 0x700
typedef union tagrcportlogic0
{
    // define the struct bits
    struct
    {
        unsigned int    ack_lat_timer         : 16  ; // [15..0] round trip latency time limit
        unsigned int    replay_timer          : 16  ; // [31..16] replay time limit
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic0_u;

// define the union pcie_rc_port_logic2_u
// 端口逻辑寄存器
// 0x708
typedef union tagrcportlogic2
{
    // define the struct bits
    struct
    {
        unsigned int    linknumber            : 8   ; // [7..0] link number，不适用于endpoint
        unsigned int    reserved_78           : 7   ; // [14..8] reserved
        unsigned int    forcelink             : 1   ; // [15] force link
        unsigned int    linkstate             : 6   ; // [21..16] link state
        unsigned int    reserved_77           : 2   ; // [23..22] reserved
        unsigned int    port_force_link       : 8   ; // [31..24] low power entrance count
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic2_u;

// define the union pcie_rc_port_logic3_u
// 端口逻辑寄存器
// 0x70c
typedef union tagrcportlogic3
{
    // define the struct bits
    struct
    {
        unsigned int    ackfrequency          : 8   ; // [7..0] ack frequency
        unsigned int    n_fts                 : 8   ; // [15..8] n_fts
        unsigned int    commonclockn_fts      : 8   ; // [23..16] common clock n_fts
        unsigned int    l0sentrancelatency    : 3   ; // [26..24] l0s entrance latency000：1us;001：2us;010：3us;011：4us;100：5us;101：6us;110：7us;111：7us。
        unsigned int    l1entrancelatency     : 3   ; // [29..27] l1 entrance latency000：1us;001：2us;010：4us;011：8us;100：16us;101：32us;110：64us;111：64us。
        unsigned int    enteraspml1withoutreceiveinl0s  : 1   ; // [30] enter aspm l1 without receive in l0s0：发送接收端都处于l0s一段空闲时间后，core才能进入l1状态;
        unsigned int    ack_aspm              : 1   ; // [31] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic3_u;

// define the union pcie_rc_port_logic4_u
// 端口逻辑寄存器
// 0x710
typedef union tagrcportlogic4
{
    // define the struct bits
    struct
    {
        unsigned int    vendorspecificdllprequest  : 1   ; // [0] vendor specific dllp request0：不发送vendor specific dllp register定义的dllp;1：发送vendor specific dllp register定义的dllp。
        unsigned int    scrambledisable       : 1   ; // [1] scramble disable0：禁用加扰;1：使能加扰。
        unsigned int    loopbackenable        : 1   ; // [2] loopback enable0：禁用loopback;1：使能loopback。
        unsigned int    resetassert           : 1   ; // [3] reset assert，不适用于ep0：不触发recovery状态;
        unsigned int    reserved_81           : 1   ; // [4] reserved
        unsigned int    dlllinkenable         : 1   ; // [5] dll link enable0：禁用initfc dllp发送以及建立链路;1：使能initfc dllp发送以及建立链路。
        unsigned int    reserved_80           : 1   ; // [6] reserved
        unsigned int    fastlinkmode          : 1   ; // [7] fast link mode0：禁用fast link mode;1：使能fast link mode。
        unsigned int    reserved_79           : 8   ; // [15..8] reserved
        unsigned int    linkmodeenable        : 6   ; // [21..16] link mode enable000001：x1;
        unsigned int    crosslinkenable       : 1   ; // [22] crosslink enable0：禁用crosslink;1：使能crosslink。
        unsigned int    crosslinkactive       : 1   ; // [23] crosslink active0：未发生crosslink;1：发生crosslink。
        unsigned int    port_link_ctrl        : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic4_u;

// define the union pcie_rc_port_logic5_u
// 端口逻辑寄存器
// 0x714
typedef union tagrcportlogic5
{
    // define the struct bits
    struct
    {
        unsigned int    insertlaneskewfortransmit  : 24  ; // [23..0] insert lane skew for transmit
        unsigned int    flowcontroldisable    : 1   ; // [24] flow control disable0：不禁用core发送fc dllp;1：禁用core发送fc dllp。
        unsigned int    ack_nakdisable        : 1   ; // [25] ack/nak disable0：不禁用core发送ack/nak dllp;1：禁用core发送ack/nak dllp。
        unsigned int    reserved_82           : 5   ; // [30..26] reserved
        unsigned int    lane_skew             : 1   ; // [31] disable lane-to-lane deskew0：不禁用lane-to-lane deskew;1：禁用lane-to-lane deskew。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic5_u;

// define the union pcie_rc_port_logic6_u
// 端口逻辑寄存器
// 0x718
typedef union tagrcportlogic6
{
    // define the struct bits
    struct
    {
        unsigned int    numberoftssymbols     : 4   ; // [3..0] number of ts symbols
        unsigned int    reserved_84           : 4   ; // [7..4] reserved
        unsigned int    numberofskpsymbols    : 3   ; // [10..8] number of skp symbols
        unsigned int    reserved_83           : 3   ; // [13..11] reserved
        unsigned int    timermodifierforreplaytimer  : 5   ; // [18..14] timer modifier for replay timer
        unsigned int    timermodifierforack_naklatencytimer  : 5   ; // [23..19] timer modifier for ack/nak latency timer
        unsigned int    timermodifierforflowcontrolwatchdogtimer  : 5   ; // [28..24] timer modifier for flow control watchdog timer
        unsigned int    sym_num               : 3   ; // [31..29] configuration requests targeted at function numbers above this value will be returned with ur (unsupported request).
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic6_u;

// define the union pcie_rc_port_logic7_u
// 端口逻辑寄存器
// 0x71c
typedef union tagrcportlogic7
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddataqueuedepth  : 11  ; // [10..0] skp interval value
        unsigned int    reserved_85           : 4   ; // [14..11] reserved
        unsigned int    sym_timer             : 1   ; // [15] disable fc watchdog timer0：不禁用fc watchdog timer;1：禁用fc watchdog timer。
        unsigned int    maskfunctionmismatchfilteringfo  : 1   ; // [16] mask function mismatch filtering for incoming requests0：不使用mask;1：使用mask。
        unsigned int    maskpoisonedtlpfiltering  : 1   ; // [17] mask poisoned tlp filtering0：不使用mask;1：使用mask。
        unsigned int    maskbarmatchfiltering  : 1   ; // [18] mask bar match filtering0：不使用mask;1：使用mask。
        unsigned int    masktype1configurationrequestfiltering  : 1   ; // [19] mask type 1 configuration request filtering0：不使用mask;1：使用mask。
        unsigned int    masklockedrequestfiltering  : 1   ; // [20] mask locked request filtering0：不使用mask;1：使用mask。
        unsigned int    masktagerrorrulesforreceivedcompletions  : 1   ; // [21] mask tag error rules for received completions0：不使用mask;1：使用mask。
        unsigned int    maskrequesteridmismatcherrorforreceivedcompletions  : 1   ; // [22] mask requester id mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maskfunctionmismatcherrorforreceivedcompletions  : 1   ; // [23] mask function mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_traffic_classmis_match_error_forreceived_completions  : 1   ; // [24] mask traffic class mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_attributesmismatcherrorforreceivedcompletions  : 1   ; // [25] mask attributes mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_length_mismatch_error_forreceive_dcompletions  : 1   ; // [26] mask length mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering  : 1   ; // [27] mask ecrc error filtering0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering_forcompletions  : 1   ; // [28] mask ecrc error filtering for completions0：不使用mask;1：使用mask。
        unsigned int    message_control       : 1   ; // [29] 0：send decoded message on the sii,then drop the message tlps;
        unsigned int    maskfilteringofreceived  : 1   ; // [30] mask filtering of received i/o requests (rc mode only)0：不使用mask;1：使用mask。
        unsigned int    flt_mask1             : 1   ; // [31] mask filtering of received configuration requests (rc mode only)0：不使用mask;1：使用mask。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic7_u;

// define the union pcie_rc_port_logic8_u
// 端口逻辑寄存器
// 0x720
typedef union tagrcportlogic8
{
    // define the struct bits
    struct
    {
        unsigned int    cx_flt_mask_venmsg0_drop  : 1   ; // [0] cx_flt_mask_venmsg0_drop0：丢弃vendor msg type 0并报告ur错误;1：不丢弃vendor msg type 0。
        unsigned int    cx_flt_mask_venmsg1_drop  : 1   ; // [1] cx_flt_mask_venmsg1_drop0：丢弃vendor msg type 1;1：不丢弃vendor msg type 1。
        unsigned int    cx_flt_mask_dabort_4ucpl  : 1   ; // [2] cx_flt_mask_dabort_4ucpl0：对于unexpected cpl使能dllp abort;1：对于unexpected cpl禁用dllp abort。
        unsigned int    cx_flt_mask_handle_flush  : 1   ; // [3] cx_flt_mask_handle_flush0：禁用core filter处理flush请求;1：使能core filter处理flush请求。
        unsigned int    flt_mask2             : 28  ; // [31..4] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic8_u;

// define the union pcie_rc_port_logic9_u
// 端口逻辑寄存器
// 0x724
typedef union tagrcportlogic9
{
    // define the struct bits
    struct
    {
        unsigned int    amba_multi_outbound_decomp_np  : 1   ; // [0] enable amba multiple outbound decomposed np sub-request0：禁用;1：使能。
        unsigned int    amba_obnp_ctrl        : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic9_u;

// define the union pcie_rc_port_logic12_u
// 端口逻辑寄存器
// 0x730
typedef union tagrcportlogic12
{
    // define the struct bits
    struct
    {
        unsigned int    transmitposteddatafccredits  : 12  ; // [11..0] transmit posted data fc credits
        unsigned int    transmitpostedheaderfccredits  : 8   ; // [19..12] transmit posted header fc credits
        unsigned int    tx_pfc_status         : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic12_u;

// define the union pcie_rc_port_logic13_u
// 端口逻辑寄存器
// 0x734
typedef union tagrcportlogic13
{
    // define the struct bits
    struct
    {
        unsigned int    transmitnon_posteddatafccredits  : 12  ; // [11..0] transmit non-posted data fc credits
        unsigned int    transmitnon_postedheaderfccredits  : 8   ; // [19..12] transmit non-posted header fc credits
        unsigned int    tx_npfc_status        : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic13_u;

// define the union pcie_rc_port_logic14_u
// 端口逻辑寄存器
// 0x738
typedef union tagrcportlogic14
{
    // define the struct bits
    struct
    {
        unsigned int    transmitcompletiondatafccredits  : 12  ; // [11..0] transmit completion data fc credits
        unsigned int    transmitcompletionheaderfccredits  : 8   ; // [19..12] transmit completion header fc credits
        unsigned int    tx_cplfc_status       : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic14_u;

// define the union pcie_rc_port_logic15_u
// 端口逻辑寄存器
// 0x73c
typedef union tagrcportlogic15
{
    // define the struct bits
    struct
    {
        unsigned int    rx_tlp_fc_credit_not_retured  : 1   ; // [0] received tlp fc credits not returnedindicates that the core has sent a tlp but has not yet received anupdatefc dllp indicating that the credits for that tlp have been restoredby the receiver at the other end of the link
        unsigned int    tx_retry_buf_not_empty  : 1   ; // [1] transmit retry buffer not emptyindicates that there is data in the transmit retry buffer.
        unsigned int    rx_queue_not_empty    : 1   ; // [2] received queue not emptyindicates there is data in one or more of the receive buffers
        unsigned int    reserved_87           : 13  ; // [15..3] reserved
        unsigned int    fc_latency_timer_override_value  : 13  ; // [28..16] fc latency timer override value
        unsigned int    reserved_86           : 2   ; // [30..29] reserved
        unsigned int    fc_latency_timer_override_en  : 1   ; // [31] fc latency timer override enable
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic15_u;

// define the union pcie_rc_port_logic16_u
// 端口逻辑寄存器
// 0x748
typedef union tagrcportlogic16
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddatacredits  : 12  ; // [11..0] vc0 posted data credits
        unsigned int    vc0postedheadercredits  : 8   ; // [19..12] vc0 posted header credits
        unsigned int    reserved_89           : 1   ; // [20] reserved
        unsigned int    vc0_postedtlpqueuemode  : 1   ; // [21] vc0 posted tlp queue mode0：未选择store-and-forword;1：选择store-and-forword。
        unsigned int    vc0postedtlpqueuemode  : 1   ; // [22] vc0 posted tlp queue mode0：未选择cut_through;1：选择cut_through。
        unsigned int    vc0postedtlpqueuemo   : 1   ; // [23] vc0 posted tlp queue mode0：未选择bypass;1：选择bypass。
        unsigned int    reserved_88           : 6   ; // [29..24] reserved
        unsigned int    tlptypeorderingforvc0  : 1   ; // [30] tlp type ordering for vc00：strict ordering;1：ordering follows the rules in pcie 3.0。
        unsigned int    rx_pque_ctrl          : 1   ; // [31] vc ordering for receive queues0：round robin;
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic16_u;

// define the union pcie_rc_port_logic17_u
// 端口逻辑寄存器
// 0x74c
typedef union tagrcportlogic17
{
    // define the struct bits
    struct
    {
        unsigned int    vc0non_posteddatacredits  : 12  ; // [11..0] vc0 non-posted data credits
        unsigned int    vc0non_postedheadercredits  : 8   ; // [19..12] vc0 non-posted header credits
        unsigned int    rx_npque_ctrl         : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic17_u;

// define the union pcie_rc_port_logic18_u
// 端口逻辑寄存器
// 0x750
typedef union tagrcportlogic18
{
    // define the struct bits
    struct
    {
        unsigned int    vco_comp_data_credits  : 12  ; // [11..0] vc0 completion data credits
        unsigned int    vc0_cpl_header_credt  : 8   ; // [19..12] vc0 completion header credits
        unsigned int    reserved_91           : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic18_u;

// define the union pcie_rc_port_logic19_u
// 端口逻辑寄存器
// 0x7a8
typedef union tagrcportlogic19
{
    // define the struct bits
    struct
    {
        unsigned int    vco_posted_data_que_path  : 14  ; // [13..0] vc0 posted data queue depth
        unsigned int    reserved_92           : 2   ; // [15..14] reserved
        unsigned int    vco_posted_head_queue_depth  : 10  ; // [25..16] vc0 posted header queue depth
        unsigned int    vc_pbuf_ctrl          : 6   ; // [31..26] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic19_u;

// define the union pcie_rc_port_logic20_u
// 端口逻辑寄存器
// 0x7ac
typedef union tagrcportlogic20
{
    // define the struct bits
    struct
    {
        unsigned int    vco_np_data_que_depth  : 14  ; // [13..0] vc0 non-posted data queue depth
        unsigned int    reserved_94           : 2   ; // [15..14] reserved
        unsigned int    vco_np_header_que_depth  : 10  ; // [25..16] vc0 non-posted header queue depth
        unsigned int    vc_npbuf_ctrl         : 6   ; // [31..26] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic20_u;

// define the union pcie_rc_port_logic21_u
// 端口逻辑寄存器
// 0x7b0
typedef union tagrcportlogic21
{
    // define the struct bits
    struct
    {
        unsigned int    vco_comp_data_queue_depth  : 14  ; // [13..0] vc0 completion data queue depth
        unsigned int    reserved_96           : 2   ; // [15..14] reserved
        unsigned int    vco_posted_head_queue_depth  : 10  ; // [25..16] vc0 posted header queue depth
        unsigned int    reserved_95           : 6   ; // [31..26] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic21_u;

// define the union pcie_rc_port_logic22_u
// 端口逻辑寄存器
// 0x80c
typedef union tagrcportlogic22
{
    // define the struct bits
    struct
    {
        unsigned int    n_fts                 : 8   ; // [7..0] sets the number of fast training sequences (n_fts) that the core advertises as its n_fts during gen2 or gen3 link training
        unsigned int    pre_determ_num_of_lane  : 9   ; // [16..8] predetermined number of lanes1：1 lane;2：2 lanes;其他值：保留。
        unsigned int    det_sp_change         : 1   ; // [17] directed speed change0：指示ltssm在链路初始化完成后不改变到gen2速率;1：指示ltssm在链路初始化完成后改变到gen2速率。
        unsigned int    config_phy_tx_sw      : 1   ; // [18] config phy tx swing0：low swing;1：full swing。
        unsigned int    config_tx_comp_rcv_bit  : 1   ; // [19] config tx compliance receive bit0：不指示ltssm发送含有声明compliance接受比特的ts有序集;1：指示ltssm发送含有声明compliance接受比特的ts有序集。
        unsigned int    set_emp_level         : 1   ; // [20] used to set the de-emphasis level for upstream ports0：-6db;1：-3.5db。
        unsigned int    reserved_97           : 11  ; // [31..21] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_port_logic22_u;

// define the union pcie_rc_portlogic25_u
// 端口逻辑寄存器
// 0x818
typedef union tagrcportlogic25
{
    // define the struct bits
    struct
    {
        unsigned int    remote_rd_req_size    : 3   ; // [2..0] remote read request size000：128;001：256;010：512;011：1024;100：2048;101：4096;110：保留;111：保留。
        unsigned int    reserved_100          : 5   ; // [7..3] reserved
        unsigned int    remote_max_brd_tag    : 8   ; // [15..8] remote max bridge tag
        unsigned int    reserved_99           : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic25_u;

// define the union pcie_rc_portlogic26_u
// 端口逻辑寄存器
// 0x81c
typedef union tagrcportlogic26
{
    // define the struct bits
    struct
    {
        unsigned int    resize_master_resp_compser  : 1   ; // [0] resize master response composer0：不改变axi master response composer contro register 0的值;1：改变axi master response composer contro register 0的值。
        unsigned int    axi_ctrl1             : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic26_u;

// define the union pcie_rc_portlogic54_u
// gen3_control_register
// 0x890
typedef union tagrcportlogic54
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_receiver_impedance_zrx_dc_notcompliant  : 1   ; // [0] gen3 receiver impedance zrx-dc not compliantreceivers that operate at 8.0 gt/s with an impedance other than the range definedby the zrx-dc parameter for 2.5 gt/s (40-60 ohms) must meet additional behaviorrequirements in the following ltssm states: polling, rx_l0s, l1, l2, and disabled.■ 0: the receiver complies with the zrx-dc parameter for 2.5 gt/s whenoperating at 8 gt/s or higher.■ 1: the receiver does not comply with the zrx-dc parameter for 2.5 gt/s whenoperating at 8 gt/s or higher.
        unsigned int    reserved_104          : 7   ; // [7..1] reserved
        unsigned int    disable_scrambler_for_gen3_datarate_  : 1   ; // [8] disable scrambler for gen3 data rate.the gen3 scrambler/descrambler within the core needs to be disabled when thescrambling function is implemented outside of the core (for example within the phy).
        unsigned int    equalization_phase_2and_phase_3disable  : 1   ; // [9] equalization phase 2 and phase 3 disablethis applies to downstream ports only.
        unsigned int    equalization_eieos_count_resetdisable  : 1   ; // [10] equalization eieos count reset disabledisable requesting reset of eieos count during equalization.
        unsigned int    equalization_redo_disable  : 1   ; // [11] equalization redo disabledisable autonomous mechanism for requesting to redo the equalization process.
        unsigned int    reserved_103          : 4   ; // [15..12] reserved
        unsigned int    equalization_disable  : 1   ; // [16] equalization disabledisable equalization feature.
        unsigned int    dllp_transmission_delay_disable  : 1   ; // [17] dllp transmission delay disabledisable delay transmission of dllps before equalization.
        unsigned int    reserved_102          : 1   ; // [18] dc balance disabledisable dc balance feature
        unsigned int    reserved_101          : 13  ; // [31..19] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic54_u;

// define the union pcie_rc_portlogic98_u
// 端口逻辑寄存器
// 0x900
typedef union tagrcportlogic98
{
    // define the struct bits
    struct
    {
        unsigned int    region_index          : 4   ; // [3..0] region index
        unsigned int    reserved_106          : 27  ; // [30..4] reserved
        unsigned int    iatu_view             : 1   ; // [31] region direction0：outbound;1：inbound。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic98_u;

// define the union pcie_rc_portlogic55_u
// 端口逻辑寄存器
// 0x904
typedef union tagrcportlogic55
{
    // define the struct bits
    struct
    {
        unsigned int    iatu1_type            : 5   ; // [4..0] 出站tlp的地址在该区域内则该tlp的type字段用该值替换;入站tlp的type字段如果等于该值则执行地址转换。
        unsigned int    iatu1_tc              : 3   ; // [7..5] 出站tlp的地址在该区域内则该tlp的tc字段用该值替换;入站tlp的tc字段如果等于该值则执行地址转换。
        unsigned int    iatu1_td              : 1   ; // [8] 出站tlp的地址在该区域内则该tlp的td字段用该值替换;入站tlp的td字段如果等于该值则执行地址转换。
        unsigned int    iatu1_attr            : 2   ; // [10..9] 出站tlp的地址在该区域内则该tlp的attr字段用该值替换;入站tlp的attr字段如果等于该值则执行地址转换。
        unsigned int    reserved_110          : 5   ; // [15..11] reserved
        unsigned int    iatu1_at              : 2   ; // [17..16] 出站tlp的地址在该区域内则该tlp的at字段用该值替换;入站tlp的at字段如果等于该值则执行地址转换。
        unsigned int    reserved_109          : 2   ; // [19..18] reserved
        unsigned int    iatu1_id              : 3   ; // [22..20] 出站tlp的地址在该区域内则该tlp的requester id的功能号字段用该值替换;对于入站mem/io，如果与该功能号的bar匹配，则执行地址转换;对于入站cfg，如果功能号字段等于该值则执行地址转换。
        unsigned int    reserved_108          : 9   ; // [31..23] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic55_u;

// define the union pcie_rc_portlogic56_u
// 端口逻辑寄存器
// 0x908
typedef union tagrcportlogic56
{
    // define the struct bits
    struct
    {
        unsigned int    iatu2_type            : 8   ; // [7..0] 出站tlp的地址在该区域内，并且转换的tlp的type字段为消息，那么该tlp的message code字段用该值替换;
        unsigned int    iatu2_bar_num         : 3   ; // [10..8] bar number对于outbound不适用。
        unsigned int    reserved_114          : 3   ; // [13..11] reserved
        unsigned int    iatu2_tc_match_en     : 1   ; // [14] tc match enable对于outbound不适用。
        unsigned int    iatu2_td_match_en     : 1   ; // [15] td match enable对于outbound不适用。
        unsigned int    iatu2_attr_match_en   : 1   ; // [16] attr match enable对于outbound不适用。
        unsigned int    reserved_113          : 1   ; // [17] reserved
        unsigned int    iatu2_at_match_en     : 1   ; // [18] at match enable对于outbound不适用。
        unsigned int    iatu2_func_num_match_en  : 1   ; // [19] function number match enable对于outbound不适用。
        unsigned int    iatu2_virtual_func_num_match_en  : 1   ; // [20] virtual function number match enable对于outbound不适用。
        unsigned int    message_code_match_en  : 1   ; // [21] message code match enable对于outbound不适用。
        unsigned int    reserved_112          : 2   ; // [23..22] reserved
        unsigned int    iatu2_response_code   : 2   ; // [25..24] response code对于outbound不适用。
        unsigned int    reserved_111          : 1   ; // [26] reserved
        unsigned int    iatu2_fuzzy_type_match_mode  : 1   ; // [27] fuzzy type match mode对于outbound不适用。
        unsigned int    iatu2_cfg_shift_mode  : 1   ; // [28] cfg shift mode0：不使用cfg shift mode;1：使用cfg shift mode。
        unsigned int    iatu2_ivert_mode      : 1   ; // [29] invert mode0：不使用invert mode;1：使用invert mode。
        unsigned int    iatu2_match_mode      : 1   ; // [30] match mode对于outbound不适用。
        unsigned int    iatu2_region_en       : 1   ; // [31] region enable0：禁用该区域地址转换;1：使能该区域地址转换。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic56_u;

// define the union pcie_rc_portlogic57_u
// 端口逻辑寄存器
// 0x90c
typedef union tagrcportlogic57
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_start_low        : 12  ; // [11..0] forms bits [11:0] of the start address of the address region to be translated.
        unsigned int    iatu_start_high       : 20  ; // [31..12] forms bits [31:12] of the start address of the address region to be translated.
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic57_u;

// define the union pcie_rc_portlogic59_u
// 端口逻辑寄存器
// 0x914
typedef union tagrcportlogic59
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_limit_low        : 12  ; // [11..0] forms bits [11:0] of the end address of the address region to be translated
        unsigned int    iatu_limit_high       : 20  ; // [31..12] forms bits [31:12] of the end address of the address region to be translated
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic59_u;

// define the union pcie_rc_portlogic60_u
// 端口逻辑寄存器
// 0x918
typedef union tagrcportlogic60
{
    // define the struct bits
    struct
    {
        unsigned int    xlated_addr_high      : 12  ; // [11..0] forms bits [11:0] of the start address of the new address of the translated region
        unsigned int    xlated_addr_low       : 20  ; // [31..12] forms bits [31:12] of the of the new address of the translated region
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic60_u;

// define the union pcie_rc_portlogic62_u
// 端口逻辑寄存器
// 0x97c
typedef union tagrcportlogic62
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_eng_en         : 1   ; // [0] dma write engine enable0：禁用dma write engine;1：使能dma write engine。
        unsigned int    dma_wr_ena            : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic62_u;

// define the union pcie_rc_portlogic63_u
// 端口逻辑寄存器
// 0x980
typedef union tagrcportlogic63
{
    // define the struct bits
    struct
    {
        unsigned int    wr_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma写操作，目前仅支持单通道。
        unsigned int    reserved_116          : 28  ; // [30..3] reserved
        unsigned int    dma_wr_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic63_u;

// define the union pcie_rc_portlogic64_u
// 端口逻辑寄存器
// 0x99c
typedef union tagrcportlogic64
{
    // define the struct bits
    struct
    {
        unsigned int    dma_read_eng_en       : 1   ; // [0] dma read engine enable0：禁用dma read engine;1：使能dma read engine。
        unsigned int    reserved_117          : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic64_u;

// define the union pcie_rc_portlogic65_u
// 端口逻辑寄存器
// 0x9a0
typedef union tagrcportlogic65
{
    // define the struct bits
    struct
    {
        unsigned int    rd_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma读操作，目前仅支持单通道。
        unsigned int    reserved_119          : 28  ; // [30..3] reserved
        unsigned int    dma_rd_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic65_u;

// define the union pcie_rc_portlogic66_u
// 端口逻辑寄存器
// 0x9bc
typedef union tagrcportlogic66
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 8   ; // [7..0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_121          : 8   ; // [15..8] reserved
        unsigned int    abort_int_status      : 8   ; // [23..16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_120          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic66_u;

// define the union pcie_rc_portlogic67_u
// 端口逻辑寄存器
// 0x9c4
typedef union tagrcportlogic67
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 8   ; // [7..0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_124          : 8   ; // [15..8] reserved
        unsigned int    abort_int_mask        : 8   ; // [23..16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    reserved_123          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic67_u;

// define the union pcie_rc_portlogic68_u
// 端口逻辑寄存器
// 0x9c8
typedef union tagrcportlogic68
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 8   ; // [7..0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_127          : 8   ; // [15..8] reserved
        unsigned int    abort_int_clr         : 8   ; // [23..16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    reserved_126          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic68_u;

// define the union pcie_rc_portlogic69_u
// 端口逻辑寄存器
// 0x9cc
typedef union tagrcportlogic69
{
    // define the struct bits
    struct
    {
        unsigned int    app_rd_err_det        : 8   ; // [7..0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_129          : 8   ; // [15..8] reserved
        unsigned int    ll_element_fetch_err_det  : 8   ; // [23..16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    reserved_128          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic69_u;

// define the union pcie_rc_portlogic74_u
// 端口逻辑寄存器
// 0x9e0
typedef union tagrcportlogic74
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_c0_imwr_data   : 16  ; // [15..0] the dma uses this field to generate the data field for the done or abort imwr tlps it generates for write channel 0
        unsigned int    dma_wr_c1_imwr_data   : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic74_u;

// define the union pcie_rc_portlogic75_u
// 端口逻辑寄存器
// 0xa00
typedef union tagrcportlogic75
{
    // define the struct bits
    struct
    {
        unsigned int    wr_ch_ll_remote_abort_int_en  : 8   ; // [7..0] write channel ll remote abort interrupt enable (llraie)0：禁用write channel ll remote abort interrupt;1：使能write channel ll remote abort interrupt。
        unsigned int    reserved_131          : 8   ; // [15..8] reserved
        unsigned int    wr_ch_ll_local_abort_int_en  : 8   ; // [23..16] write channel ll local abort interrupt enable (lllaie)0：禁用write channel ll local abort interrupt;1：使能write channel ll local abort interrupt。
        unsigned int    reserved_130          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic75_u;

// define the union pcie_rc_portlogic76_u
// 端口逻辑寄存器
// 0xa10
typedef union tagrcportlogic76
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 8   ; // [7..0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_134          : 8   ; // [15..8] reserved
        unsigned int    abort_int_status      : 8   ; // [23..16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_133          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic76_u;

// define the union pcie_rc_portlogic77_u
// 端口逻辑寄存器
// 0xa18
typedef union tagrcportlogic77
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 8   ; // [7..0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_136          : 8   ; // [15..8] reserved
        unsigned int    abort_int_mask        : 8   ; // [23..16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    dma_rd_int_mask       : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic77_u;

// define the union pcie_rc_portlogic78_u
// 端口逻辑寄存器
// 0xa1c
typedef union tagrcportlogic78
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 8   ; // [7..0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_138          : 8   ; // [15..8] reserved
        unsigned int    abort_int_clr         : 8   ; // [23..16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    dma_rd_int_clr        : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic78_u;

// define the union pcie_rc_portlogic79_u
// 端口逻辑寄存器
// 0xa24
typedef union tagrcportlogic79
{
    // define the struct bits
    struct
    {
        unsigned int    app_wr_err_det        : 8   ; // [7..0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_139          : 8   ; // [15..8] reserved
        unsigned int    link_list_fetch_err_det  : 8   ; // [23..16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    dma_rd_err_low        : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic79_u;

// define the union pcie_rc_portlogic80_u
// 端口逻辑寄存器
// 0xa28
typedef union tagrcportlogic80
{
    // define the struct bits
    struct
    {
        unsigned int    unspt_request         : 8   ; // [7..0] unsupported request0：未检测到unsupported request;1：检测到unsupported request。
        unsigned int    completer_abort       : 8   ; // [15..8] completer abort0：未检测到completer abort;1：检测到completer abort。
        unsigned int    cpl_time_out          : 8   ; // [23..16] completion time out
        unsigned int    data_poison           : 8   ; // [31..24] data poisoning0：未检测到data poisoning;1：检测到data poisoning。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic80_u;

// define the union pcie_rc_portlogic81_u
// 端口逻辑寄存器
// 0xa34
typedef union tagrcportlogic81
{
    // define the struct bits
    struct
    {
        unsigned int    remote_abort_int_en   : 8   ; // [7..0] read channel ll remote abort interrupt enable (llraie)0：禁用read channel ll remote abort interrupt;1：使能read channel ll remote abort interrupt。
        unsigned int    reserved_141          : 8   ; // [15..8] reserved
        unsigned int    local_abort_int_en    : 8   ; // [23..16] read channel ll local abort interrupt enable (lllaie)0：禁用read channel ll local abort interrupt;1：使能read channel ll local abort interrupt。
        unsigned int    dma_rd_ll_err_ena     : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic81_u;

// define the union pcie_rc_portlogic86_u
// 端口逻辑寄存器
// 0xa6c
typedef union tagrcportlogic86
{
    // define the struct bits
    struct
    {
        unsigned int    channel_dir           : 3   ; // [2..0]
        unsigned int    reserved_144          : 28  ; // [30..3] reserved
        unsigned int    dma_ch_con_idx        : 1   ; // [31] channel direction0：写通道0;1：读通道0。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic86_u;

// define the union pcie_rc_portlogic87_u
// 端口逻辑寄存器
// 0xa70
typedef union tagrcportlogic87
{
    // define the struct bits
    struct
    {
        unsigned int    cycle_bit             : 1   ; // [0] cycle bit (cb)
        unsigned int    toggle_cycle_bit      : 1   ; // [1] toggle cycle bit (tcb)
        unsigned int    load_link_pointer     : 1   ; // [2] load link pointer (llp)
        unsigned int    local_int_en          : 1   ; // [3] local interrupt enable (lie)0：禁用local interrupt;1：使能local interrupt。
        unsigned int    remote_int_en         : 1   ; // [4] remote interrupt enable (rie)0：禁用remote interrupt;1：使能remote interrupt。
        unsigned int    channel_status        : 2   ; // [6..5] channel status00：保留;01：running;10：halted;11：stopped。
        unsigned int    reserved_148          : 1   ; // [7] reserved
        unsigned int    consumer_cycle_state  : 1   ; // [8] consumer cycle state (ccs)
        unsigned int    linked_list_en        : 1   ; // [9] linked list enable (lle)0：禁用linked list;1：使能linked list。
        unsigned int    reserved_147          : 2   ; // [11..10] reserved
        unsigned int    func_num_dma          : 5   ; // [16..12] function number (fn) for generated mrd/mwr dma tlps
        unsigned int    reserved_146          : 7   ; // [23..17] reserved
        unsigned int    no_snoop              : 1   ; // [24] no snoop tlp header bit (ns)
        unsigned int    ro                    : 1   ; // [25] relaxed ordering tlp header bit (ro)
        unsigned int    td                    : 1   ; // [26] traffic digest tlp header bit (td)
        unsigned int    tc                    : 3   ; // [29..27] traffic class tlp header bit (tc)
        unsigned int    dma_ch_ctrl           : 2   ; // [31..30] address translation tlp header bit (at)
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic87_u;

// define the union pcie_rc_portlogic93_u
// 端口逻辑寄存器
// 0xa8c
typedef union tagrcportlogic93
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_150          : 2   ; // [1..0] reserved
        unsigned int    dma_ll_ptr_low        : 30  ; // [31..2] lower bits of the address of the linked list transfer list in local memory
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic93_u;

// define the union pcie_rc_portlogic95_u
// 端口逻辑寄存器
// 0xb30
typedef union tagrcportlogic95
{
    // define the struct bits
    struct
    {
        unsigned int    snoop_latency_value   : 10  ; // [9..0] ltr message包中snoop_latency_value
        unsigned int    snoop_latency_scale   : 3   ; // [12..10] ltr message包中snoop_latency_scale
        unsigned int    reserved_151          : 2   ; // [14..13] reserved
        unsigned int    snoop_latency_requirement  : 1   ; // [15] ltr message包中snoop_latency_requirement
        unsigned int    no_snoop_latency_value  : 10  ; // [25..16] ltr message包中no_snoop_latency_value
        unsigned int    no_snoop_latency_scale  : 3   ; // [28..26] ltr message包中no_snoop_latency_scale
        unsigned int    no_snoop_latency_requirement  : 3   ; // [31..29] 收到no_snoop_latency_requirement
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic95_u;

// define the union pcie_rc_portlogic96_u
// 端口逻辑寄存器
// 0xa40
typedef union tagrcportlogic96
{
    // define the struct bits
    struct
    {
        unsigned int    default_aux_clk_freq  : 10  ; // [9..0] frequency of aux_clk (1-1000 mhz).this value is used to provide a 1us reference for countingtime during low-power states with aux_clk when the phyhas removed the pipe_clk.frequencies lower than 1mhz are possible but with a lossof accuracy in the time counted
        unsigned int    reserved_153          : 22  ; // [31..10] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic96_u;

// define the union pcie_rc_portlogic97_u
// 端口逻辑寄存器
// 0xb44
typedef union tagrcportlogic97
{
    // define the struct bits
    struct
    {
        unsigned int    l1_2                  : 2   ; // [1..0] duration (in 1us units) of l1.2.entryrange is 0..3
        unsigned int    l1_2_entry            : 4   ; // [5..2] duration (in 1us units) of l1.2range is 0..15
        unsigned int    max_delay             : 2   ; // [7..6] max delay (in 1us units) between a mac command on mac_phy_pclkreq_nand a phy response on phy_mac_pclkack_nrange is 0..3
        unsigned int    reserved_155          : 24  ; // [31..8] upper 32 bits of the address of the linked list transfer list in local memory
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_rc_portlogic97_u;



/******************************************************************************/
/*                      xxx PCIe_EP 寄存器定义                                */
/******************************************************************************/
#define PCIE_EP_CFG_HDR0_REG              (0x0)        /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR1_REG              (0x4)        /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR2_REG              (0x8)        /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR3_REG              (0xC)        /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR4_REG              (0x10)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR5_REG              (0x14)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR6_REG              (0x18)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR7_REG              (0x1C)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR8_REG              (0x20)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR9_REG              (0x24)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR10_REG             (0x28)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR11_REG             (0x2C)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR12_REG             (0x30)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR13_REG             (0x34)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR14_REG             (0x38)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_CFG_HDR15_REG             (0x3C)       /* PCI兼容配置头空间寄存器 */
#define PCIE_EP_PM_CAP1_REG               (0x44)       /* PCI电源管理功能寄存器 */
#define PCIE_EP_MSI_CAP0_REG              (0x50)       /* PCI MSI功能寄存器 */
#define PCIE_EP_MSI_CAP1_REG              (0x54)       /* PCI MSI功能寄存器 */
#define PCIE_EP_MSI_CAP2_REG              (0x58)       /* PCI MSI功能寄存器 */
#define PCIE_EP_MSI_CAP3_REG              (0x5C)       /* PCI MSI功能寄存器 */
#define PCIE_EP_MSI_MASK_REG              (0x60)       /* PCI MSI功能寄存器 */
#define PCIE_EP_CAP0_REG                 (0x70)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP1_REG                 (0x74)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP2_REG                 (0x78)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP3_REG                 (0x7C)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP4_REG                 (0x80)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP5_REG                 (0x84)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP6_REG                 (0x88)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP7_REG                 (0x8C)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP8_REG                 (0x90)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP9_REG                 (0x94)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP10_REG                (0x98)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP11_REG                (0x9C)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP12_REG                (0xA0)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP13_REG                (0xB0)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP14_REG                (0xB4)       /* PCI Express功能寄存器 */
#define PCIE_EP_CAP15_REG                (0xB8)       /* PCI Express功能寄存器 */
#define PCIE_EP_SLOT_CAP_REG                  (0xC0)       /* Slot Numbering功能寄存器 */
#define PCIE_EP_AER_CAP0_REG                  (0x100)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP1_REG                  (0x104)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP2_REG                  (0x108)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP3_REG                  (0x10C)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP4_REG                  (0x110)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP5_REG                  (0x114)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP6_REG                  (0x118)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP7_REG                  (0x11C)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP8_REG                  (0x120)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP9_REG                  (0x124)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP10_REG                 (0x128)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP11_REG                 (0x12C)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP12_REG                 (0x130)      /* 高级错误报告寄存器 */
#define PCIE_EP_AER_CAP13_REG                 (0x134)      /* 高级错误报告寄存器 */
#define PCIE_EP_VC_CAP0_REG                   (0x140)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP1_REG                   (0x144)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP2_REG                   (0x148)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP3_REG                   (0x14C)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP4_REG                   (0x150)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP5_REG                   (0x154)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP6_REG                   (0x158)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP7_REG                   (0x15C)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP8_REG                   (0x160)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_VC_CAP9_REG                   (0x164)      /* 虚拟通道功能寄存器 */
#define PCIE_EP_PORT_LOGIC0_REG               (0x700)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC1_REG               (0x704)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC2_REG               (0x708)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC3_REG               (0x70c)       /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC4_REG               (0x710)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC5_REG               (0x714)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC6_REG               (0x718)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC7_REG               (0x71C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC8_REG               (0x720)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC9_REG               (0x724)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC10_REG              (0x728)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC11_REG              (0x72C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC12_REG              (0x730)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC13_REG              (0x734)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC14_REG              (0x738)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC15_REG              (0x73C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC16_REG              (0x748)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC17_REG              (0x74C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC18_REG              (0x750)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC19_REG              (0x7A8)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC20_REG              (0x7AC)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC21_REG              (0x7B0)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORT_LOGIC22_REG              (0x80C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC23_REG               (0x810)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC24_REG               (0x814)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC25_REG               (0x818)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC26_REG               (0x81C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC27_REG               (0x820)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC28_REG               (0x824)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC29_REG               (0x828)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC30_REG               (0x82C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC31_REG               (0x830)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC32_REG               (0x834)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC33_REG               (0x838)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC34_REG               (0x83C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC35_REG               (0x840)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC36_REG               (0x844)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC37_REG               (0x848)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC38_REG               (0x84C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC39_REG               (0x850)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC40_REG               (0x854)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC41_REG               (0x858)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC42_REG               (0x85C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC43_REG               (0x860)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC44_REG               (0x864)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC45_REG               (0x868)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC46_REG               (0x86C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC47_REG               (0x870)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC48_REG               (0x874)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC49_REG               (0x878)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC50_REG               (0x87C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC51_REG               (0x880)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC52_REG               (0x884)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC53_REG               (0x888)      /* 端口逻辑寄存器 */
#define PCIE_EEP_GEN3_CONTRL_REG                  (0x890)         /*gen3 contrl*/
#define PCIE_EEP_PIPE_LOOPBACK_REG                (0x8B8)         /* 端口逻辑寄存器 */
#define PCIE_EP_LINK_TIMEOUT_OFF_REG              (0x8d4)
#define PCIE_EP_PORTLOGIC54_REG               (0x900)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC55_REG               (0x904)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC56_REG               (0x908)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC57_REG               (0x90C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC58_REG               (0x910)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC59_REG               (0x914)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC60_REG               (0x918)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC61_REG               (0x91C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC62_REG               (0x97C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC63_REG               (0x980)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC64_REG               (0x99C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC65_REG               (0x9A0)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC66_REG               (0x9BC)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC67_REG               (0x9C4)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC68_REG               (0x9C8)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC69_REG               (0x9CC)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC70_REG               (0x9D0)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC71_REG               (0x9D4)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC72_REG               (0x9D8)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC73_REG               (0x9DC)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC74_REG               (0x9E0)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC75_REG               (0xA00)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC76_REG               (0xA10)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC77_REG               (0xA18)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC78_REG               (0xA1C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC79_REG               (0xA24)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC80_REG               (0xA28)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC81_REG               (0xA34)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC82_REG               (0xA3C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC83_REG               (0xA40)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC84_REG               (0xA44)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC85_REG               (0xA48)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC86_REG               (0xA6C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC87_REG               (0xA70)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC88_REG               (0xA78)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC89_REG               (0xA7C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC90_REG               (0xA80)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC91_REG               (0xA84)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC92_REG               (0xA88)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC93_REG               (0xA8C)      /* 端口逻辑寄存器 */
#define PCIE_EP_PORTLOGIC94_REG               (0xA90)      /* 端口逻辑寄存器 */

typedef union tagGen3Ctrol//PCIE_EEP_GEN3_CONTRL_REG
{
    struct
    {
        unsigned int    reserved     : 16   ;
        unsigned int    equalization_disable     : 1   ;
        unsigned int    reserved2     : 15   ;
    }bits;
    unsigned int    u32;
}pcie_gen3_contrl_u;

typedef union tagPipeLoopBack
{
    struct
    {
        unsigned int    reserved             : 31  ;
        unsigned int    pipe_loopback_enable             : 1  ; // [15..0] 厂商ID号
    }bits;
    unsigned int    u32;
}pcie_pipe_loopback_u;

typedef union tagPciLinkTimeOut
{
    // Define the struct bits
    struct
    {
        unsigned int    link_timeout_prepriod_default   : 8   ; // [3] 是否可预取0 =Non-prefetchable          1 =Prefetchable
        unsigned int    link_timeout_enable_default  : 1   ; // [8] 保留位
        unsigned int    Reserved_4          : 23  ; // [31..9] 64位BAR23地址的[31:12]位若dbi_cs2有效，则为BAR23_MASK的[31:12]位
    } bits;

    // Define an unsigned member
    unsigned int    u32;

} pcie_ep_link_timeout_u;
// define the union pcie_ep_cfg_hdr0_u
// pci兼容配置头空间寄存器
// 0x0
typedef union tageppcicfghdr0
{
    // define the struct bits
    struct
    {
        unsigned int    vendor_id             : 16  ; // [15..0] 厂商id号
        unsigned int    device_id             : 16  ; // [31..16] 设备id号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr0_u;

// define the union pcie_ep_cfg_hdr1_u
// pci兼容配置头空间寄存器
// 0x4
typedef union tageppcicfghdr1
{
    // define the struct bits
    struct
    {
        unsigned int    io_space_enable       : 1   ; // [0] i/o sapace enable0：该设备不能响应i/o请求;1：该设备能够响应i/o请求。
        unsigned int    memory_space_enable   : 1   ; // [1] memory space enable0：该设备不能响应存储器请求;1：该设备能够响应存储器请求。
        unsigned int    bus_master_enable     : 1   ; // [2] bus master enable0：该设备不能作为主设备;1：该设备能够作为主设备。
        unsigned int    specialcycleenable    : 1   ; // [3] special cycle enalbe不适用于pcie，硬连线为0
        unsigned int    memory_write_and_invalidate  : 1   ; // [4] memory write and invalidata不适用于pcie，硬连线为0
        unsigned int    vga_palette_snoop_enable  : 1   ; // [5] vga palette snoop不适用于pcie，硬连线为0
        unsigned int    parity_error_response  : 1   ; // [6] parity error response0：对奇偶校验错误不作出响应;1：对奇偶校验错误作出响应。
        unsigned int    idsel_stepping_waitcycle_control  : 1   ; // [7] idsel stepping/wait cycle control不适用于pcie，硬连线为0
        unsigned int    serr_enable           : 1   ; // [8] serr#信号使能0：可以使用serr#信号;
        unsigned int    fastback_to_backenable  : 1   ; // [9] faster back-to-back enaable不适用于pcie，硬连线为0
        unsigned int    interrupt_disable     : 1   ; // [10] intx assertion disable0：允许使用intx方式提交中断;1：禁用intx方式提交中断。
        unsigned int    reserved_2            : 5   ; // [15..11] reserved
        unsigned int    reserved_1            : 3   ; // [18..16] reserved
        unsigned int    intx_status           : 1   ; // [19] intx status0：设备未使用intx方式向处理器提交了中断请求;1：设备使用intx方式向处理器提交了中断请求。
        unsigned int    capabilitieslist      : 1   ; // [20] capabilities list指示capability pointer寄存器中的值有效，硬连线为1
        unsigned int    pcibus66mhzcapable    : 1   ; // [21] 66mhz capable不适用于pcie，硬连线为0
        unsigned int    reserved_0            : 1   ; // [22] reserved
        unsigned int    fastback_to_back      : 1   ; // [23] faster back-to-back capable不适用于pcie，硬连线为0
        unsigned int    masterdataparityerror  : 1   ; // [24] master data parity error0：除置一条件满足之外的其他情况;1：perr#信号有效，或者总线出现数据传输错误时，或者command寄存器的parity error response位为1时。
        unsigned int    devsel_timing         : 2   ; // [26..25] devsel timing不适用于pcie，硬连线为0
        unsigned int    signaled_target_abort  : 1   ; // [27] signaled target abort由pci目标设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_target_abort  : 1   ; // [28] received target abort由pci主设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_master_abort  : 1   ; // [29] received master abort由pci主设备设置0：未发生主设备夭折时序;1：发生主设备夭折时序。
        unsigned int    signaled_system_error  : 1   ; // [30] signaled system error0：serr#信号无效;1：serr#信号有效。
        unsigned int    detected_parity_error  : 1   ; // [31] detected parity error0：未检测到奇偶校验错误;1：检测到奇偶校验错误。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr1_u;

// define the union pcie_ep_cfg_hdr2_u
// pci兼容配置头空间寄存器
// 0x8
typedef union tageppcicfghdr2
{
    // define the struct bits
    struct
    {
        unsigned int    revision_identification  : 8   ; // [7..0] revision idpcie设备的版本号
        unsigned int    reserved_3            : 8   ; // [15..8] programming interface
        unsigned int    sub_class             : 8   ; // [23..16] subclass code
        unsigned int    baseclass             : 8   ; // [31..24] base class code
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr2_u;

// define the union pcie_ep_cfg_hdr3_u
// pci兼容配置头空间寄存器
// 0xc
typedef union tageppcicfghdr3
{
    // define the struct bits
    struct
    {
        unsigned int    cache_line_size       : 8   ; // [7..0] cache line size不适用于pcie设备，对此寄存器执行写操作不会影响pcie core的功能
        unsigned int    mstr_lat_tmr          : 8   ; // [15..8] master latency timer不适用于pcie设备，硬连线为0
        unsigned int    multi_function_device  : 7   ; // [22..16] configuration header format0：type0配置头空间;1：type1配置头空间。
        unsigned int    hdr_type              : 1   ; // [23] multi function device0：单功能设备;1：多功能设备。
        unsigned int    bist                  : 8   ; // [31..24] bist register该版本ip不支持该功能，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr3_u;

// define the union pcie_ep_cfg_hdr4_u
// pci兼容配置头空间寄存器
// 0x10
typedef union tageppcicfghdr4
{
    // define the struct bits
    struct
    {
        unsigned int    sbar01_space_inicator  : 1   ; // [0] 指示bar类型0：memory bar;1：i/o bar。
        unsigned int    sbar01_type           : 2   ; // [2..1] 指示memory bar类型00：32-bit bar;10：64-bit bar;01：保留;11：保留。
        unsigned int    sbar01_prefetchable   : 1   ; // [3] 指示memory bar是否可预取0：不可预取;1：可预取。
        unsigned int    bar01_lower           : 28  ; // [31..4] 64位bar0地址的[31:4]位若dbi_cs2有效，则为bar0_mask的[31:4]位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr4_u;

// define the union pcie_ep_cfg_hdr6_u
// pci兼容配置头空间寄存器
// 0x18
typedef union tageppcicfghdr6
{
    // define the struct bits
    struct
    {
        unsigned int    sbar23_space_inicator  : 1   ; // [0] 0 =bar23 is a memory bar1 =bar23 is an i/o bar
        unsigned int    sbar23_type           : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    sbar23_prefetchable   : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_4            : 8   ; // [11..4] 保留位
        unsigned int    bar23_lower           : 20  ; // [31..12] 64位bar23地址的[31:12]位若dbi_cs2有效，则为bar23_mask的[31:12]位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr6_u;

// define the union pcie_ep_cfg_hdr8_u
// pci兼容配置头空间寄存器
// 0x20
typedef union tageppcicfghdr8
{
    // define the struct bits
    struct
    {
        unsigned int    sbar45_space_inicator  : 1   ; // [0] 0 =bar01 is a memory bar1 =bar01 is an i/o bar
        unsigned int    sbar45_type           : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    sbar45_prefetchable   : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_5            : 8   ; // [11..4] 保留位
        unsigned int    bar45_lower           : 20  ; // [31..12] bar01基地址低位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr8_u;

// define the union pcie_ep_cfg_hdr11_u
// pci兼容配置头空间寄存器
// 0x2c
typedef union tageppcicfghdr11
{
    // define the struct bits
    struct
    {
        unsigned int    subsystem_vendor_id   : 16  ; // [15..0] 子系统厂商id
        unsigned int    subsystemid           : 16  ; // [31..16] 子系统id
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr11_u;

// define the union pcie_ep_cfg_hdr13_u
// pci兼容配置头空间寄存器
// 0x34
typedef union tageppcicfghdr13
{
    // define the struct bits
    struct
    {
        unsigned int    capptr                : 8   ; // [7..0] 功能指针
        unsigned int    reserved_6            : 24  ; // [31..8] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr13_u;

// define the union pcie_ep_cfg_hdr15_u
// pci兼容配置头空间寄存器
// 0x3c
typedef union tageppcicfghdr15
{
    // define the struct bits
    struct
    {
        unsigned int    int_line              : 8   ; // [7..0] interrupt line
        unsigned int    int_pin               : 8   ; // [15..8] interrupt pin00：不使用intx类型上报中断;01：使用inta;02：使用intb;03：使用intc;04：使用intd。
        unsigned int    min_grant             : 8   ; // [23..16] 不适用于pcie，硬连线为0
        unsigned int    max_latency           : 8   ; // [31..24] 不适用于pcie，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cfg_hdr15_u;

// define the union pcie_ep_pm_cap1_u
// pci电源管理功能寄存器
// 0x44
typedef union tageppcipmcap1
{
    // define the struct bits
    struct
    {
        unsigned int    powerstate            : 2   ; // [1..0] power state00：d0;01：d1;10：d2;11：d3。
        unsigned int    reserved_10           : 1   ; // [2] reserved
        unsigned int    no_soft_reset         : 1   ; // [3] no soft reset0：支持soft reset;1：不支持soft reset。
        unsigned int    reserved_9            : 4   ; // [7..4] reserved
        unsigned int    pmeenable             : 1   ; // [8] pme enable0：禁用pme生成;1：使能pme生成。
        unsigned int    datascale             : 4   ; // [12..9] data select
        unsigned int    data_scale            : 2   ; // [14..13] data scale
        unsigned int    pme_status            : 1   ; // [15] pme status0：使能pme事件没有发生;1：使能pme事件发生。
        unsigned int    reserved_8            : 6   ; // [21..16] reserved
        unsigned int    b2_b3support          : 1   ; // [22] b2/b3 support硬连线为0
        unsigned int    buspower_clockcontrolenable  : 1   ; // [23] bus power/clock control enable硬连线为0
        unsigned int    pm_ctrl_status        : 8   ; // [31..24] data register for additional information
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_pm_cap1_u;

// define the union pcie_ep_msi_cap0_u
// pci msi功能寄存器
// 0x50
typedef union tageppcimsicap0
{
    // define the struct bits
    struct
    {
        unsigned int    msi_cap_id            : 8   ; // [7..0] msi capability id
        unsigned int    next_capability_pointer  : 8   ; // [15..8] next capability pointer
        unsigned int    msi_enabled           : 1   ; // [16] msi enabled0：禁用msi;1：使能msi。
        unsigned int    multiple_message_capable  : 3   ; // [19..17] multiple message capable000：pcie设备可以使用1个中断向量;001：pcie设备可以使用2个中断向量;010：pcie设备可以使用4个中断向量;011：pcie设备可以使用8个中断向量;100：pcie设备可以使用16个中断向量;101：pcie设备可以使用32个中断向量;110：保留;111：保留。
        unsigned int    multiple_message_enabled  : 3   ; // [22..20] multiple message enabled表示分配给当前pcie设备的中断向量数目000：pcie设备被分配给1个中断向量;001：pcie设备被分配给2个中断向量;010：pcie设备被分配给4个中断向量;011：pcie设备被分配给8个中断向量;100：pcie设备被分配给16个中断向量;101：pcie设备被分配给32个中断向量;110：保留;111：保留。
        unsigned int    msi_64_en             : 1   ; // [23] 支持64位地址功能
        unsigned int    pvm_en                : 1   ; // [24] 设备是否支持per vector masking功能1'b0: 不支持1'b1: 支持
        unsigned int    message_control_register  : 7   ; // [31..25] msi per vector masking (pvm) supported0：不支持msi pvm;1：支持msi pvm。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_msi_cap0_u;

// define the union pcie_ep_msi_cap1_u
// pci msi功能寄存器
// 0x54
typedef union tageppcimsicap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_13           : 2   ; // [1..0] reserved
        unsigned int    msi_addr_low          : 30  ; // [31..2] msi的低32bit地址的[31:2]位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_msi_cap1_u;

// define the union pcie_ep_msi_cap3_u
// pci msi功能寄存器
// 0x5c
typedef union tageppcimsicap3
{
    // define the struct bits
    struct
    {
        unsigned int    msi_data              : 16  ; // [15..0] msi数据pattern assigned by system software, bits [4:0] are or-ed withmsi_vector to generate 32 msi messages per function
        unsigned int    reserved_14           : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_msi_cap3_u;

// define the union pcie_ep_cap0_u
// pci express功能寄存器
// 0x70
typedef union tageppciecap0
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_cap_id           : 8   ; // [7..0] pci express capability id
        unsigned int    pcie_next_ptr         : 8   ; // [15..8] next capability pointer
        unsigned int    pcie_capability_version  : 4   ; // [19..16] pci express capability version
        unsigned int    device_port_type      : 4   ; // [23..20] device/port type0100：pcie rc;
        unsigned int    slot_implemented      : 1   ; // [24] slot implemented
        unsigned int    interrupt_message_number  : 5   ; // [29..25] interrupt message number
        unsigned int    reserved_15           : 2   ; // [31..30] rsvdp
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap0_u;

// define the union pcie_ep_cap1_u
// pci express功能寄存器
// 0x74
typedef union tageppciecap1
{
    // define the struct bits
    struct
    {
        unsigned int    max_payload_size_supported  : 3   ; // [2..0] 支持最大payload 为512byte
        unsigned int    phantom_function_supported  : 2   ; // [4..3] 仿真器功能支持，硬连线0
        unsigned int    extended_tagfield_supported  : 1   ; // [5] 拓展标记字段支持，支持最大outstanding的深度为32
        unsigned int    endpoint_l0sacceptable_latency  : 3   ; // [8..6] 端点l0可接受的延时，不支持，硬连线为0
        unsigned int    endpoint_l1acceptable_latency  : 3   ; // [11..9] 端点l1可接受的延时，不支持，硬连线为0
        unsigned int    undefined             : 3   ; // [14..12] 保留
        unsigned int    reserved_18           : 3   ; // [17..15] 保留
        unsigned int    captured_slot_power_limit_value  : 8   ; // [25..18] 捕获的插槽功率极限值，硬连线0x0，只读
        unsigned int    captured_slot_power_limit_scale  : 2   ; // [27..26] 捕获的插槽功率极限因子，硬连线0x0，只读
        unsigned int    function_level_reset  : 1   ; // [28] function级的复位
        unsigned int    reserved_17           : 3   ; // [31..29] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap1_u;

// define the union pcie_ep_cap2_u
// pci express功能寄存器
// 0x78
typedef union tageppciecap2
{
    // define the struct bits
    struct
    {
        unsigned int    correctable_error_reporting_enable  : 1   ; // [0] correctable error reporting enable0：不支持发送“可纠正错误”消息;1：支持发送“可纠正错误”消息。
        unsigned int    non_fatal_error_reporting_enable  : 1   ; // [1] non-fatal error reporting enable0：不支持发送“非致命错误”消息;1：支持发送“非致命错误”消息。
        unsigned int    fatal_error_reporting_enable  : 1   ; // [2] fatal error reporting enable0：不支持发送“致命错误”消息;1：支持发送“致命错误”消息。
        unsigned int    urenable              : 1   ; // [3] unsupported request reporting enable0：不支持发送“不被支持请求”消息;1：支持发送“不被支持请求”消息。
        unsigned int    enable_relaxed_ordering  : 1   ; // [4] enable relaxed ordering0：不支持灵活事务顺序;1：支持灵活事务顺序。
        unsigned int    max_payload_size      : 3   ; // [7..5] max_payload_size000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    extended_tagfieldenable  : 1   ; // [8] extended tag field enable0：禁用扩展tag字段;1：使能扩展tag字段。
        unsigned int    phantom_function_enable  : 1   ; // [9] phantom function enable0：禁用phantom function;1：使能phantom function。
        unsigned int    auxpowerpmenable      : 1   ; // [10] aux power pm enable0：禁用附加电源;1：使能附加电源。
        unsigned int    enablenosnoop         : 1   ; // [11] enable no snoop0：禁用no snoop特性;1：使能no snoop特性。
        unsigned int    max_read_request_size  : 3   ; // [14..12] max_read_request_size000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    reserved_20           : 1   ; // [15] reserved
        unsigned int    correctableerrordetected  : 1   ; // [16] correctable error detected0：没有检测到可纠正错误;1：检测到可纠正错误。
        unsigned int    non_fatalerrordetected  : 1   ; // [17] non-fatal error detected0：没有检测到非致命错误;1：检测到非致命错误。
        unsigned int    fatalerrordetected    : 1   ; // [18] fatal error detected0：没有检测到致命错误;1：检测到致命错误。
        unsigned int    unsupportedrequestdetected  : 1   ; // [19] unsupported request detected0：没有收到不被支持的请求;1：收到不被支持的请求。
        unsigned int    auxpowerdetected      : 1   ; // [20] aux power detected0：没有检测到辅助电源;1：检测到辅助电源。
        unsigned int    transactionpending    : 1   ; // [21] transaction pending硬连线为0
        unsigned int    reserved_19           : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap2_u;

// define the union pcie_ep_cap3_u
// pci express功能寄存器
// 0x7c
typedef union tageppciecap3
{
    // define the struct bits
    struct
    {
        unsigned int    max_link_speed        : 4   ; // [3..0] max link speeds0001：2.5gt/s;0010：5.0gt/s;0100：8.0gt/s;其他值：不支持。
        unsigned int    max_link_width        : 6   ; // [9..4] maximum link width000001：x1通道;000010：x2通道;000100：x4通道;001000：x8通道;010000：x16通道;其他值：保留。
        unsigned int    active_state_power_management  : 2   ; // [11..10] active state link pm support0：不支持aspm;1：支持aspm。
        unsigned int    l0s_exitlatency       : 3   ; // [14..12] l0s exit latency000：小于64ns;
        unsigned int    l1_exit_latency       : 3   ; // [17..15] l1 exit latency000：小于1us;
        unsigned int    clock_power_management  : 1   ; // [18] clock power management0：不支持clock power management;1：支持clock power management。
        unsigned int    surprise_down_error_report_cap  : 1   ; // [19] surprise down error reporting capable，该版本ip不支持，硬连线为0
        unsigned int    data_link_layer_active_report_cap  : 1   ; // [20] data link layer active reporting capable，对于rc硬连线为10：不支持data link layer active reporting;1：支持data link layer active reporting。
        unsigned int    link_bandwidth_noti_cap  : 1   ; // [21] link bandwidth notification capability，对于rc硬连线为10：不支持link bandwidth notification capability;1：支持link bandwidth notification capability。
        unsigned int    aspm_option_compliance  : 1   ; // [22] aspm optionality compliance0：不支持aspm optionality compliance;1：支持aspm optionality compliance。
        unsigned int    reserved_21           : 1   ; // [23] reserved
        unsigned int    port_number           : 8   ; // [31..24] port number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap3_u;

// define the union pcie_ep_cap4_u
// pci express功能寄存器
// 0x80
typedef union tageppciecap4
{
    // define the struct bits
    struct
    {
        unsigned int    activestatelinkpmcontrol  : 2   ; // [1..0] active state link pm control00：禁止aspm机制;01：pcie设备可以进入l0s状态;10：pcie设备可以进入l1状态;11：pcie设备可以进入l0s和l1状态。
        unsigned int    reserved_24           : 1   ; // [2] reserved
        unsigned int    readcompletionboundary_rcb_  : 1   ; // [3] read completion boundary (rcb)0：rcb为64byte;1：rcb为128byte。
        unsigned int    linkdisable           : 1   ; // [4] link disable0：不禁用链路;1：禁用链路。
        unsigned int    retrainlink           : 1   ; // [5] retrain link0：不重新进行链路训练;1：重新进行链路训练。
        unsigned int    commonclockconfiguration  : 1   ; // [6] common clock configuration.0：链路两端采用不同源参考时钟;1：链路两端采用同源参考时钟。
        unsigned int    extendedsynch         : 1   ; // [7] extended synch0：禁用extended synch;1：使能extended synch。
        unsigned int    enableclockpowermanagement  : 1   ; // [8] enable clock power management0：禁用clock power management;1：使能clock power management。
        unsigned int    hardwareautonomouswidthdisable  : 1   ; // [9] hardware autonomous width disable该版本ip不支持，硬连线为0
        unsigned int    linkbandwidthmanagementinterruptenable  : 1   ; // [10] link bandwidth management interrupt enable
        unsigned int    linkautonomousbandwidthinterruptenable  : 1   ; // [11] link autonomous bandwidth interrupt enable
        unsigned int    reserved_23           : 4   ; // [15..12] reserved
        unsigned int    linkspeed             : 4   ; // [19..16] link speed0001：2.5gt/s;0010：5.0gt/s;0100：8.0gt/s;其他值：保留。
        unsigned int    negotiatedlinkwidth   : 6   ; // [25..20] negotiated link width00001：x1通道;00010：x2通道;00100：x4通道;01000：x8通道;10000：x16通道;其他值：保留。
        unsigned int    reserved_22           : 1   ; // [26] 不使用
        unsigned int    linktraining          : 1   ; // [27] link training
        unsigned int    slotclockconfiguration  : 1   ; // [28] slot clock configuration0：插槽与add-in卡使用的参考时钟源不同;1：插槽与add-in卡使用的参考时钟源相同。
        unsigned int    datalinklayeractive   : 1   ; // [29] data link layer active
        unsigned int    linkbandwidthmanagementstatus  : 1   ; // [30] link bandwidth management status
        unsigned int    link_ctrl_status      : 1   ; // [31] link autonomous bandwidth status
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap4_u;

// define the union pcie_ep_cap5_u
// pci express功能寄存器
// 0x84
typedef union tageppciecap5
{
    // define the struct bits
    struct
    {
        unsigned int    attentioonbuttonpresent  : 1   ; // [0] attention indicator present0：没有attention indicator;1：有attention indicator。
        unsigned int    powercontrollerpresent  : 1   ; // [1] power controller present0：没有power controller;1：有power controller。
        unsigned int    mrlsensorpresent      : 1   ; // [2] mrl sensor present0：没有mrl sensor;1：有mrl sensor。
        unsigned int    attentionindicatorpresent  : 1   ; // [3] attention indicator present0：没有attention indicator;1：有attention indicator。
        unsigned int    powerindicatorpresent  : 1   ; // [4] power indicator present0：没有power indicator;1：有power indicator。
        unsigned int    hot_plugsurprise      : 1   ; // [5] hot-plug surprise0：不支持hot-plug surprise;1：支持hot-plug surprise。
        unsigned int    hot_plugcapable       : 1   ; // [6] hot-plug capable0：不支持热插拔;1：支持热插拔。
        unsigned int    slotpowerlimitvalue   : 8   ; // [14..7] slot power limit value
        unsigned int    slotpowerlimitscale   : 2   ; // [16..15] slot power limit scale
        unsigned int    electromechanicalinterlockpresen  : 1   ; // [17] electromechanical interlock present0：没有electromechanical interlock ;1：有electromechanical interlock 。
        unsigned int    no_cmd_complete_support  : 1   ; // [18] no command complete support0：支持command complete;1：不支持no command complete。
        unsigned int    phy_slot_number       : 13  ; // [31..19] physical slot number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap5_u;

// define the union pcie_ep_cap6_u
// pci express功能寄存器
// 0x88
typedef union tageppciecap6
{
    // define the struct bits
    struct
    {
        unsigned int    attentionbuttonpressedenable  : 1   ; // [0] attention button pressed enable0：禁用attention button pressed;1：使能attention button pressed。
        unsigned int    powerfaultdetectedenable  : 1   ; // [1] power fault detected enable0：禁用power fault detected;1：使能power fault detected。
        unsigned int    mrlsensorchangedenable  : 1   ; // [2] mrl sensor changed enable0：禁用mrl sensor changed;1：使能mrl sensor changed。
        unsigned int    presencedetectchangedenable  : 1   ; // [3] presence detect changed enable0：禁用presence detect changed;1：使能presence detect changed。
        unsigned int    commandcompletedinterruptenable  : 1   ; // [4] command completed interrupt enable0：禁用command completed interrupt;1：使能command completed interrupt。
        unsigned int    hot_pluginterruptenable  : 1   ; // [5] hot-plug interrupt enable0：禁用hot-plug interrupt;1：使能hot-plug interrupt。
        unsigned int    attentionindicatorcontrol  : 2   ; // [7..6] attention indicator control00：保留;01：on;10：blink;11：off。
        unsigned int    powerindicatorcontrol  : 2   ; // [9..8] power indicator control00：保留;01：on;10：blink;11：off。
        unsigned int    powercontrollercontrol  : 1   ; // [10] power controller control0：禁用power controller control;1：使能power controller control。
        unsigned int    electromechanicalinterlockcontrol  : 1   ; // [11] electromechanical interlock control0：禁用electromechanical interlock control;1：使能aelectromechanical interlock control。
        unsigned int    datalinklayerstatechangedenable  : 1   ; // [12] data link layer state changed enable0：禁用data link layer state changed;1：使能data link layer state changed enable。
        unsigned int    reserved_25           : 3   ; // [15..13] reserved
        unsigned int    attentionbuttonpressed  : 1   ; // [16] attention button pressed0：attention button not pressed;1：attention button pressed。
        unsigned int    powerfaultdetected    : 1   ; // [17] power fault detected0：power fault not detected;1：power fault detected。
        unsigned int    mrlsensorchanged      : 1   ; // [18] mrl sensor changed0：mrl sensor not changed;1：mrl sensor changed。
        unsigned int    presencedetectchanged  : 1   ; // [19] presence detect changed0：presence detect not changed;1：presence detect changed。
        unsigned int    commandcompleted      : 1   ; // [20] command completed0：command not completed;1：command completed。
        unsigned int    mrlsensorstate        : 1   ; // [21] mrl sensor state0：不处于mrl sensor state;1：处于mrl sensor state。
        unsigned int    presencedetectstate   : 1   ; // [22] presence detect state0：不处于presence detect state;1：处于presence detect state。
        unsigned int    electromechanicalinterlockstatus  : 1   ; // [23] electromechanical interlock status0：不处于electromechanical interlock status;1：处于electromechanical interlock status。
        unsigned int    datalinklayerstatechanged  : 1   ; // [24] data link layer state changed0：data link layer state not changed;1：data link layer state changed。
        unsigned int    slot_ctrl_status      : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap6_u;

// define the union pcie_ep_cap7_u
// pci express功能寄存器
// 0x8c
typedef union tageppciecap7
{
    // define the struct bits
    struct
    {
        unsigned int    systemerroroncorrectableerrorenable  : 1   ; // [0] system error on correctable error enable0：禁用system error on correctable error;1：使能system error on correctable error。
        unsigned int    systemerroronnon_fatalerrorenable  : 1   ; // [1] system error on non-fatal error enable0：禁用system error on non-fatal error ;1：使能system error on non-fatal error 。
        unsigned int    systemerroronfatalerrorenable  : 1   ; // [2] system error on fatal error enable0：禁用system error on fatal error ;1：使能system error on fatal error 。
        unsigned int    pmeinterruptenable    : 1   ; // [3] pme interrupt enable0：禁用pme interrupt;1：使能pme interrupt。
        unsigned int    crssoftwarevisibilityenable  : 1   ; // [4] crs software visibility enable，该版本ip不支持，硬连线为0
        unsigned int    reserved_26           : 11  ; // [15..5] reserved
        unsigned int    crssoftwarevisibility  : 1   ; // [16] crs software visibility，该版本ip不支持，硬连线为0
        unsigned int    root_cap              : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap7_u;

// define the union pcie_ep_cap8_u
// pci express功能寄存器
// 0x90
typedef union tageppciecap8
{
    // define the struct bits
    struct
    {
        unsigned int    pmerequesterid        : 16  ; // [15..0] pme requester id
        unsigned int    pmestatus             : 1   ; // [16] pme status0：不指示pme status;1：指示pme status。
        unsigned int    pmepending            : 1   ; // [17] pme pending0：指示无pme pending;1：指示pme pending。
        unsigned int    root_status           : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap8_u;

// define the union pcie_ep_cap9_u
// pci express功能寄存器
// 0x94
typedef union tageppciecap9
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutrangessupported  : 4   ; // [3..0] completion timeout ranges supportedrange a: 50us to 10ms;range b: 10ms to 250ms;range c: 250ms to 4s;range d: 4s to 64s。
        unsigned int    completiontimeoutdisablesupported  : 1   ; // [4] completion timeout disable supported0：不支持禁用completion timeout;1：支持禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoproutingsupported  : 1   ; // [6] atomicop routing supported，不适用于endpoint。
        unsigned int    _2_bitatomicopcompletersupported  : 1   ; // [7] 32-bit atomicop completer supported0：不支持32-bit atomicop completer ;1：支持32-bit atomicop completer 。
        unsigned int    _4_bitatomicopcompletersupported  : 1   ; // [8] 64-bit atomicop completer supported0：不支持64-bit atomicop completer;1：支持64-bit atomicop completer。
        unsigned int    _28_bitcascompletersupported  : 1   ; // [9] 128-bit cas completer supported0：不支持128-bit cas completer;1：支持128-bit cas completer。
        unsigned int    noro_enabledpr_prpassing  : 1   ; // [10] no ro-enabled pr-pr passing0：no ro-enabled pr-pr passing;1：ro-enabled pr-pr passing。
        unsigned int    reserved_27           : 1   ; // [11] reserved
        unsigned int    tphcompletersupported  : 2   ; // [13..12] tph completer supported00：接收端不支持tph和扩展tph报文;01：接收端仅支持tph报文;10：保留;11：接收端支持tph和扩展tph报文。
        unsigned int    dev_cap2              : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap9_u;

// define the union pcie_ep_cap10_u
// pci express功能寄存器
// 0x98
typedef union tageppciecap10
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutvalue  : 4   ; // [3..0] completion timeout value0000b：default range: 50us to 50ms;0001b：50us to 100us;0010b：1ms to 10ms;0101b：16ms to 55ms;0110b：65ms to 210ms;1001b：260ms to 900ms;1010b：1s to 3.5s;1101b：4s to 13s;1110b：17s to 64s;其他值：保留。
        unsigned int    completiontimeoutdisable  : 1   ; // [4] completion timeout disable0：不禁用completion timeout;1：禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoprequesterenable  : 1   ; // [6] atomicop requester enable0：禁用atomicop requester;1：使能atomicop requester。
        unsigned int    atomicopegressblocking  : 1   ; // [7] atomicop egress blocking对于endpoint不使用，reserved
        unsigned int    idorequestenable      : 1   ; // [8] ido request enable0：禁用ido request enable;1：使能ido request enable。
        unsigned int    idocompletionenable   : 1   ; // [9] ido completion enable0：禁用ido completion enable;1：使能ido completion enable。
        unsigned int    dev_ctrl2             : 22  ; // [31..10] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap10_u;

// define the union pcie_ep_cap11_u
// pci express功能寄存器
// 0x9c
typedef union tageppciecap11
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_29           : 1   ; // [0] reserved
        unsigned int    gen1_suport           : 1   ; // [1] gen1链路速度支持0：不支持2.5gt/s;1：支持2.5gt/s。
        unsigned int    gen2_suport           : 1   ; // [2] gen2链路速度支持0：不支持5.0gt/s;1：支持5.0gt/s。
        unsigned int    gen3_suport           : 1   ; // [3] gen3链路速度支持0：不支持8.0gt/s;1：支持8.0gt/s。
        unsigned int    reserved_28           : 4   ; // [7..4] reserved
        unsigned int    crosslink_supported   : 1   ; // [8] crosslink supported
        unsigned int    link_cap2             : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap11_u;

// define the union pcie_ep_cap12_u
// pci express功能寄存器
// 0xa0
typedef union tageppciecap12
{
    // define the struct bits
    struct
    {
        unsigned int    targetlinkspeed       : 4   ; // [3..0] target link speed
        unsigned int    entercompliance       : 1   ; // [4] enter compliance0：不令链路进入compliance模式;1：令链路进入compliance模式。
        unsigned int    hardwareautonomousspeeddisa  : 1   ; // [5] hardware autonomous speed disable0：不禁用hardware autonomous speed;1：禁用hardware autonomous speed。
        unsigned int    selectablede_empha    : 1   ; // [6] selectable de-emphasis0：-6db;1：-3.5db。
        unsigned int    transmitmargin        : 3   ; // [9..7] transmit margin
        unsigned int    _entermodifiedcompliance  : 1   ; // [10] enter modified compliance0：如果ltssm进入polling.compliance状态，不发送modified compliance pattern;1：如果ltssm进入polling.compliance状态，发送一个modified compliance pattern。
        unsigned int    compliancesos         : 1   ; // [11] compliance sos0：在发送compliance pattern或modified pattern时不在中间插入skp有序集;1：在发送compliance pattern或modified pattern时在中间插入skp有序集。
        unsigned int    de_emphasislevel      : 4   ; // [15..12] de-emphasis level0001：-3.5db;0000：-6db其他值：保留。
        unsigned int    currentde_emphasislevel  : 1   ; // [16] current de-emphasis level0：-6db;1：-3.5db。
        unsigned int    equalizationcomplete  : 1   ; // [17] equalization complete0：equalization未完成;1：equalization完成。
        unsigned int    equalizationphase1successful  : 1   ; // [18] equalization phase 1 successful0：equalization phase 1不成功;1：equalization phase 1成功。
        unsigned int    equalizationphase2successful  : 1   ; // [19] equalization phase 2 successful0：equalization phase 2不成功;1：equalization phase 2成功。
        unsigned int    equalizationphase3successful  : 1   ; // [20] equalization phase 3 successful0：equalization phase 3不成功;1：equalization phase 3成功。
        unsigned int    linkequalizationrequest  : 1   ; // [21] link equalization request0：没有请求link equalization;1：请求link equalization 。
        unsigned int    link_ctrl2_status2    : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap12_u;

// define the union pcie_ep_cap13_u
// pci express功能寄存器
// 0xb0
typedef union tageppciecap13
{
    // define the struct bits
    struct
    {
        unsigned int    msi_x_capability_id   : 8   ; // [7..0] msi_x_capability_id
        unsigned int    next_capability_pointer  : 8   ; // [15..8] next_capability_pointer
        unsigned int    msi_x_table_size      : 11  ; // [26..16] msi-x table sizeencoded as (table size - 1). for example, a value of0x003 indicates the msi-x table size is 4.
        unsigned int    reserved_30           : 3   ; // [29..27] reserved
        unsigned int    function_mask         : 1   ; // [30] function mask■ 1: all vectors associated with the function aremasked, regardless of their respective per-vectormask bits.■ 0: each vector’s mask bit determines whether thevector is masked or not.
        unsigned int    msi_x_enable          : 1   ; // [31] msi-x enablewhen msi-x is enabled, msi and intx must bedisabled
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap13_u;

// define the union pcie_ep_cap14_u
// pci express功能寄存器
// 0xb4
typedef union tageppciecap14
{
    // define the struct bits
    struct
    {
        unsigned int    msix_table_offset_n   : 3   ; // [2..0] table offsetbase address of the msi-x table, as an offsetfrom the base address of the bar indicated by thetable bir bits.
        unsigned int    msix_table_bir_n      : 29  ; // [31..3] table bar indicator register (bir)indicates which bar is used to map the msi-xtable into memory space:■ 000: bar0■ 001: bar1■ 010: bar2■ 011: bar3■ 100: bar4■ 101: bar5■ 110: reserved■ 111: reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap14_u;

// define the union pcie_ep_cap15_u
// pci express功能寄存器
// 0xb8
typedef union tageppciecap15
{
    // define the struct bits
    struct
    {
        unsigned int    msix_pba_offset_n     : 2   ; // [1..0] pba offsetbase address of the msi-x pba, as an offset fromthe base address of the bar indicated by the pbabir bits
        unsigned int    msix_pba_bir_n        : 30  ; // [31..2] pending bit array (pba) birindicates which bar is used to map the msi-x pbainto memory space:■ 000: bar0■ 001: bar1■ 010: bar2■ 011: bar3■ 100: bar4■ 101: bar5■ 110: reserved■ 111: reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_cap15_u;

// define the union pcie_ep_slot_cap_u
// slot numbering功能寄存器
// 0xc0
typedef union tagepslotcap
{
    // define the struct bits
    struct
    {
        unsigned int    slotnumberingcapabilitiesid  : 8   ; // [7..0] slot numbering capabilities id
        unsigned int    nextcapabilitypointer  : 8   ; // [15..8] next capability pointer
        unsigned int    add_incardslotsprovided  : 5   ; // [20..16] add-in card slots provided
        unsigned int    firstinchassis        : 1   ; // [21] first in chassis
        unsigned int    reserved_32           : 2   ; // [23..22] reserved
        unsigned int    slot_cap              : 8   ; // [31..24] chassis number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_slot_cap_u;

// define the union pcie_ep_aer_cap0_u
// 高级错误报告寄存器
// 0x100
typedef union tagepaercap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    aer_cap_hdr           : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap0_u;

// define the union pcie_ep_aer_cap1_u
// 高级错误报告寄存器
// 0x104
typedef union tagepaercap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_38           : 1   ; // [0] 未定义
        unsigned int    reserved_37           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsta  : 1   ; // [4] data link protocol error status0：未检测到data link protocol error;1：检测到data link protocol error。
        unsigned int    surprisedownerrorstatus  : 1   ; // [5] surprise down error status，该版本ip不支持。
        unsigned int    reserved_36           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpstatu      : 1   ; // [12] poisoned tlp status0：未检测到poisoned tlp;1：检测到poisoned tlp。
        unsigned int    flowcontrolprotocolerrorst  : 1   ; // [13] flow control protocol error status0：未检测到flow control protocol error;1：检测到flow control protocol error。
        unsigned int    completiontimeouts    : 1   ; // [14] completion timeout status0：未检测到completion timeout;
        unsigned int    completerabortstatus  : 1   ; // [15] completer abort status0：未检测到completer abort;1：检测到completer abort。
        unsigned int    receiveroverflowstatus  : 1   ; // [16] unexpected completion status0：未检测到unexpected completion;1：检测到unexpected completion。
        unsigned int    malformedtlpstatus    : 1   ; // [17] receiver overflow status0：未检测到receiver overflow;1：检测到receiver overflow。
        unsigned int    ecrcerrorstatus       : 1   ; // [18] malformed tlp status0：未检测到malformed tlp;1：检测到malformed tlp。
        unsigned int    ecrcerrorstat         : 1   ; // [19] ecrc error status0：未检测到ecrc error;1：检测到ecrc error。
        unsigned int    unsupportedrequesterrorstatus  : 1   ; // [20] unsupported request error status0：未检测到unsupported request error;1：检测到unsupported request error;。
        unsigned int    reserved_35           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedstatus  : 1   ; // [24] atomicop egress blocked status0：atomicop egress is not blocked;1：atomicop egress is blocked。
        unsigned int    uncorr_err_status     : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap1_u;

// define the union pcie_ep_aer_cap2_u
// 高级错误报告寄存器
// 0x108
typedef union tagepaercap2
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_42           : 1   ; // [0] 未定义
        unsigned int    reserved_41           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrormask  : 1   ; // [4] data link protocol error mask0：data link protocol error is not masked;1：data link protocol error is masked。
        unsigned int    surprisedownerrormask  : 1   ; // [5] surprise down error mask，该版本ip不支持。
        unsigned int    reserved_40           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpmask       : 1   ; // [12] poisoned tlp mask0：poisoned tlp is not masked;1：poisoned tlp is masked。
        unsigned int    flowcontrolprotocolerrormask  : 1   ; // [13] flow control protocol error mask0：flow control protocol error is not masked;1：flow control protocol error is masked。
        unsigned int    completiontimeoutmask  : 1   ; // [14] completion timeout mask0：completion timeout is not masked;1：completion timeout is masked。
        unsigned int    completerabortmask    : 1   ; // [15] completer abort mask0：completer abort is not masked;1：completer abort is masked。
        unsigned int    unexpectedcompletionmask  : 1   ; // [16] unexpected completion mask0：unexpected completion is not masked;1：unexpected completion is masked。
        unsigned int    receiveroverflowmask  : 1   ; // [17] receiver overflow mask0：receiver overflow is not masked;1：receiver overflow is masked。
        unsigned int    malformedtlpmask      : 1   ; // [18] malformed tlp mask0：malformed tlp is not masked;1：malformed tlp is masked。
        unsigned int    ecrcerrormask         : 1   ; // [19] ecrc error mask0：ecrc error is not masked;1：ecrc error is masked。
        unsigned int    unsupportedrequesterrormask  : 1   ; // [20] unsupported request error mask0：unsupported request error is not masked;1：unsupported request error is masked。
        unsigned int    reserved_39           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedmask  : 1   ; // [24] atomicop egress blocked mask0：atomicop egress blocked is not masked;1：atomicop egress blocked is masked。
        unsigned int    uncorr_err_mask       : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap2_u;

// define the union pcie_ep_aer_cap3_u
// 高级错误报告寄存器
// 0x10c
typedef union tagepaercap3
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_46           : 1   ; // [0] 未定义
        unsigned int    reserved_45           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsever  : 1   ; // [4] data link protocol error severity0：non-fatal;1：fatal。
        unsigned int    surprisedownerrorseverity  : 1   ; // [5] surprise down error severity，该版本ip不支持
        unsigned int    reserved_44           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpseverity   : 1   ; // [12] poisoned tlp severity0：non-fatal;1：fatal。
        unsigned int    flowcontrolprotocolerrorseveri  : 1   ; // [13] flow control protocol error severity0：non-fatal;1：fatal。
        unsigned int    completiontimeoutseverity  : 1   ; // [14] completion timeout severity0：non-fatal;1：fatal。
        unsigned int    completerabortseverity  : 1   ; // [15] completer abort severity0：non-fatal;1：fatal。
        unsigned int    unexpectedcompletionseverity  : 1   ; // [16] unexpected completion severity0：non-fatal;1：fatal。
        unsigned int    receiveroverflowseverity  : 1   ; // [17] receiver overflow severity0：non-fatal;1：fatal。
        unsigned int    malformedtlpseverity  : 1   ; // [18] malformed tlp severity0：non-fatal;1：fatal。
        unsigned int    ecrcerrorseverity     : 1   ; // [19] ecrc error severity0：non-fatal;1：fatal。
        unsigned int    unsupportedrequesterrorseverity  : 1   ; // [20] unsupported request error severity0：non-fatal;1：fatal。
        unsigned int    reserved_43           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedseverity  : 1   ; // [24] atomicop egress blocked severity0：non-fatal;1：fatal。
        unsigned int    uncorr_err_ser        : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap3_u;

// define the union pcie_ep_aer_cap4_u
// 高级错误报告寄存器
// 0x110
typedef union tagepaercap4
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrorstatus   : 1   ; // [0] receiver error status0：未检测到receiver error;1：检测到receiver error。
        unsigned int    reserved_48           : 5   ; // [5..1] reserved
        unsigned int    badtlpstatus          : 1   ; // [6] bad tlp status0：未检测到bad tlp;1：检测到bad tlp。
        unsigned int    baddllpstatus         : 1   ; // [7] bad dllp status0：未检测到bad dllp;1：检测到bad dllp。
        unsigned int    replay_numrolloverstatus  : 1   ; // [8] replay_num rollover status0：未检测到replay_num rollover;1：检测到replay_num rollover。
        unsigned int    reserved_47           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutstatus  : 1   ; // [12] reply timer timeout status0：未检测到reply timer timeout;1：检测到reply timer timeout。
        unsigned int    advisorynon_fatalerrorstatus  : 1   ; // [13] advisory non-fatal error status0：未检测到advisory non-fatal error;1：检测到advisory non-fatal error。
        unsigned int    corr_err_status       : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap4_u;

// define the union pcie_ep_aer_cap5_u
// 高级错误报告寄存器
// 0x114
typedef union tagepaercap5
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrormask     : 1   ; // [0] receiver error mask0：receiver error is not masked;1：receiver error is masked。
        unsigned int    reserved_50           : 5   ; // [5..1] reserved
        unsigned int    badtlpmask            : 1   ; // [6] bad tlp mask0：bad tlp is not masked;1：bad tlp is masked。
        unsigned int    baddllpmask           : 1   ; // [7] bad dllp mask0：bad dllp is not masked;1：bad dllp is masked。
        unsigned int    replay_numrollovermask  : 1   ; // [8] replay_num rollover mask0：replay_num rollover is not masked;1：replay_num rollover is masked。
        unsigned int    reserved_49           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutmask  : 1   ; // [12] reply timer timeout mask0：reply timer timeout is not masked;1：reply timer timeout is masked。
        unsigned int    advisorynon_fatalerrormask  : 1   ; // [13] advisory non-fatal error mask0：advisory non-fatal error is not maskd;1：advisory non-fatal error is masked。
        unsigned int    corr_err_mask         : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap5_u;

// define the union pcie_ep_aer_cap6_u
// 高级错误报告寄存器
// 0x118
typedef union tagepaercap6
{
    // define the struct bits
    struct
    {
        unsigned int    firsterrorpointer     : 5   ; // [4..0] first error pointer
        unsigned int    ecrcgenerationcapability  : 1   ; // [5] ecrc generation capability0：no capability;1：has capability。
        unsigned int    ecrcgenerationenable  : 1   ; // [6] ecrc generation enable0：disable;1：enable。
        unsigned int    ecrccheckcapable      : 1   ; // [7] ecrc check capable0：no capability;1：has capability。
        unsigned int    ecrccheckenable       : 1   ; // [8] ecrc check enable0：diable;1：enable。
        unsigned int    adv_cap_ctrl          : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap6_u;

// define the union pcie_ep_aer_cap11_u
// 高级错误报告寄存器
// 0x12c
typedef union tagepaercap11
{
    // define the struct bits
    struct
    {
        unsigned int    correctableerrorreportingenable  : 1   ; // [0] correctable error reporting enable0：disable;1：enable。
        unsigned int    non_fatalerrorreportingenable  : 1   ; // [1] non-fatal error reporting enable0：disable;1：enable。
        unsigned int    fatalerrorreportingenable  : 1   ; // [2] fatal error reporting enable0：disable;1：enable。
        unsigned int    root_err_cmd          : 29  ; // [31..3] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap11_u;

// define the union pcie_ep_aer_cap12_u
// 高级错误报告寄存器
// 0x130
typedef union tagepaercap12
{
    // define the struct bits
    struct
    {
        unsigned int    err_correceived       : 1   ; // [0] err_cor received0：未收到err_cor;1：收到err_cor。
        unsigned int    multipleerr_correceived  : 1   ; // [1] multiple err_cor received0：未收到多个err_cor;1：收到多个err_cor。
        unsigned int    err_fatal_nonfatalreceived  : 1   ; // [2] err_fatal/nonfatal received0：未收到err_fatal/nonfatal;1：收到err_fatal/nonfatal。
        unsigned int    multipleerr_fatal_nonfatalreceived  : 1   ; // [3] multiple err_fatal/nonfatal received0：未收到多个err_fatal/nonfatal;1：收到多个err_fatal/nonfatal。
        unsigned int    firstuncorrectablefatal  : 1   ; // [4] first uncorrectable fatal0：指示没有收到第一个uncorrectable fatal;1：指示收到第一个uncorrectable fatal。
        unsigned int    non_fatalerrormessagesreceived  : 1   ; // [5] non-fatal error messages received0：未收到non-fatal error messages;1：收到non-fatal error messages。
        unsigned int    fatalerrormessagesreceived  : 1   ; // [6] fatal error messages received0：未收到fatal error messages;1：收到fatal error messages。
        unsigned int    reserved_51           : 20  ; // [26..7] reserved
        unsigned int    root_err_status       : 5   ; // [31..27] advanced error interrupt message number
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap12_u;

// define the union pcie_ep_aer_cap13_u
// 高级错误报告寄存器
// 0x134
typedef union tagepaercap13
{
    // define the struct bits
    struct
    {
        unsigned int    err_corsourceidentification  : 16  ; // [15..0] err_cor source identification
        unsigned int    err_src_id            : 16  ; // [31..16] err_fatal/nonfatal source identification
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_aer_cap13_u;

// define the union pcie_ep_vc_cap0_u
// 虚拟通道功能寄存器
// 0x140
typedef union tagepvccap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    vc_cap_hdr            : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap0_u;

// define the union pcie_ep_vc_cap1_u
// 虚拟通道功能寄存器
// 0x144
typedef union tagepvccap1
{
    // define the struct bits
    struct
    {
        unsigned int    extendedvccount       : 3   ; // [2..0] extended vc count
        unsigned int    reserved_54           : 1   ; // [3] reserved
        unsigned int    lowpriorityextendedvccount  : 3   ; // [6..4] low priority extended vc count
        unsigned int    reserved_53           : 1   ; // [7] reserved
        unsigned int    referenceclock        : 2   ; // [9..8] reference clock，不适用于endpoint，硬连线为0
        unsigned int    portarbitrationtableentrysize  : 2   ; // [11..10] port arbitration table entry size，不适用于endpoint，硬连线为0
        unsigned int    vc_cap1               : 20  ; // [31..12] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap1_u;

// define the union pcie_ep_vc_cap2_u
// 虚拟通道功能寄存器
// 0x148
typedef union tagepvccap2
{
    // define the struct bits
    struct
    {
        unsigned int    vcarbitrationcapability  : 8   ; // [7..0] vc arbitration capability
        unsigned int    reserved_55           : 16  ; // [23..8] reserved
        unsigned int    vc_cap2               : 8   ; // [31..24] vc arbitration table offset，该版本ip不支持
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap2_u;

// define the union pcie_ep_vc_cap3_u
// 虚拟通道功能寄存器
// 0x14c
typedef union tagepvccap3
{
    // define the struct bits
    struct
    {
        unsigned int    loadvcarbitrationtable  : 1   ; // [0] load vc arbitration table
        unsigned int    vcarbitrationselect   : 3   ; // [3..1] vc arbitration select
        unsigned int    reserved_57           : 12  ; // [15..4] reserved
        unsigned int    arbitrationtablestatus  : 1   ; // [16] arbitration table status
        unsigned int    reserved_56           : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap3_u;

// define the union pcie_ep_vc_cap4_u
// 虚拟通道功能寄存器
// 0x150
typedef union tagepvccap4
{
    // define the struct bits
    struct
    {
        unsigned int    portarbitrationcapability  : 8   ; // [7..0] port arbitration capability
        unsigned int    reserved_60           : 6   ; // [13..8] reserved
        unsigned int    reserved_59           : 1   ; // [14] 未定义
        unsigned int    rejectsnooptransactions  : 1   ; // [15] reject snoop transactions，不适用于endpoint，硬连线为0
        unsigned int    maximumtimeslots      : 7   ; // [22..16] maximum time slots，不适用于endpoint
        unsigned int    reserved_58           : 1   ; // [23] reserved
        unsigned int    vc_res_cap            : 8   ; // [31..24] port arbitration table offset，不适用于endpoint，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap4_u;

// define the union pcie_ep_vc_cap5_u
// 虚拟通道功能寄存器
// 0x154
typedef union tagepvccap5
{
    // define the struct bits
    struct
    {
        unsigned int    tc_vcmap              : 8   ; // [7..0] tc/vc map
        unsigned int    reserved_63           : 8   ; // [15..8] reserved
        unsigned int    loadportarbitrationtable  : 1   ; // [16] load port arbitration table，不适用于endpoint
        unsigned int    portarbitrationselec  : 3   ; // [19..17] port arbitration select，对于endpoint硬连线为0
        unsigned int    reserved_62           : 4   ; // [23..20] reserved
        unsigned int    vcid                  : 3   ; // [26..24] vc id，硬连线为0
        unsigned int    reserved_61           : 4   ; // [30..27] reserved
        unsigned int    vc_res_ctrl           : 1   ; // [31] vc enable，硬连线为1
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap5_u;

// define the union pcie_ep_vc_cap6_u
// 虚拟通道功能寄存器
// 0x158
typedef union tagepvccap6
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_64           : 16  ; // [15..0] reserved
        unsigned int    portarbitrationtablestatus  : 1   ; // [16] port arbitration table status
        unsigned int    vcnegotiationpending  : 1   ; // [17] vc negotiation pending
        unsigned int    vc_res_status         : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap6_u;

// define the union pcie_ep_vc_cap7_u
// 虚拟通道功能寄存器
// 0x15c
typedef union tagepvccap7
{
    // define the struct bits
    struct
    {
        unsigned int    portarbitrationcapability  : 8   ; // [7..0] port arbitration capability，硬连线为1
        unsigned int    reserved_67           : 6   ; // [13..8] reserved
        unsigned int    reserved_66           : 1   ; // [14] 未定义
        unsigned int    rejectsnooptransactions  : 1   ; // [15] reject snoop transactions
        unsigned int    maximumtimeslots      : 7   ; // [22..16] maximum time slots
        unsigned int    reserved_65           : 1   ; // [23] reserved
        unsigned int    vc_res_cap0           : 8   ; // [31..24] port arbitration table offset，不适用于endpoint，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap7_u;

// define the union pcie_ep_vc_cap8_u
// 虚拟通道功能寄存器
// 0x160
typedef union tagepvccap8
{
    // define the struct bits
    struct
    {
        unsigned int    tc_vcmap              : 8   ; // [7..0] tc/vc map
        unsigned int    reserved_70           : 8   ; // [15..8] reserved
        unsigned int    loadportarbitrationtable  : 1   ; // [16] load port arbitration table
        unsigned int    portarbitrationselect  : 3   ; // [19..17] port arbitration select，对于endpoint硬连线为0
        unsigned int    reserved_69           : 4   ; // [23..20] reserved
        unsigned int    vcid                  : 3   ; // [26..24] vc id
        unsigned int    reserved_68           : 4   ; // [30..27] reserved
        unsigned int    vc_res_ctrl0          : 1   ; // [31] vc enable0：vc禁用;1：vc使能。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap8_u;

// define the union pcie_ep_vc_cap9_u
// 虚拟通道功能寄存器
// 0x164
typedef union tagepvccap9
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_71           : 16  ; // [15..0] reserved
        unsigned int    arbitrationtablestatus  : 1   ; // [16] arbitration table status
        unsigned int    vcnegotiationpending  : 1   ; // [17] vc negotiation pending
        unsigned int    vc_res_status0        : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_vc_cap9_u;

// define the union pcie_ep_port_logic0_u
// 端口逻辑寄存器
// 0x700
typedef union tagepportlogic0
{
    // define the struct bits
    struct
    {
        unsigned int    ack_lat_timer         : 16  ; // [15..0] round trip latency time limit
        unsigned int    replay_timer          : 16  ; // [31..16] replay time limit
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic0_u;

// define the union pcie_ep_port_logic2_u
// 端口逻辑寄存器
// 0x708
typedef union tagepportlogic2
{
    // define the struct bits
    struct
    {
        unsigned int    linknumber            : 8   ; // [7..0] link number，不适用于endpoint
        unsigned int    reserved_74           : 7   ; // [14..8] reserved
        unsigned int    forcelink             : 1   ; // [15] force link
        unsigned int    linkstate             : 6   ; // [21..16] link state
        unsigned int    reserved_73           : 2   ; // [23..22] reserved
        unsigned int    port_force_link       : 8   ; // [31..24] low power entrance count
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic2_u;

// define the union pcie_ep_port_logic3_u
// 端口逻辑寄存器
// 0x07oc
typedef union tagepportlogic3
{
    // define the struct bits
    struct
    {
        unsigned int    ackfrequency          : 8   ; // [7..0] ack frequency
        unsigned int    n_fts                 : 8   ; // [15..8] n_fts
        unsigned int    commonclockn_fts      : 8   ; // [23..16] common clock n_fts
        unsigned int    l0sentrancelatency    : 3   ; // [26..24] l0s entrance latency000：1us;001：2us;010：3us;011：4us;100：5us;101：6us;110：7us;111：7us。
        unsigned int    l1entrancelatency     : 3   ; // [29..27] l1 entrance latency000：1us;001：2us;010：4us;011：8us;100：16us;101：32us;110：64us;111：64us。
        unsigned int    enteraspml1withoutreceiveinl0s  : 1   ; // [30] enter aspm l1 without receive in l0s0：发送接收端都处于l0s一段空闲时间后，core才能进入l1状态;
        unsigned int    ack_aspm              : 1   ; // [31] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic3_u;

// define the union pcie_ep_port_logic4_u
// 端口逻辑寄存器
// 0x710
typedef union tagepportlogic4
{
    // define the struct bits
    struct
    {
        unsigned int    vendorspecificdllprequest  : 1   ; // [0] vendor specific dllp request0：不发送vendor specific dllp register定义的dllp;1：发送vendor specific dllp register定义的dllp。
        unsigned int    scrambledisable       : 1   ; // [1] scramble disable0：禁用加扰;1：使能加扰。
        unsigned int    loopbackenable        : 1   ; // [2] loopback enable0：禁用loopback;1：使能loopback。
        unsigned int    resetassert           : 1   ; // [3] reset assert，不适用于ep0：不触发recovery状态;
        unsigned int    reserved_77           : 1   ; // [4] reserved
        unsigned int    dlllinkenable         : 1   ; // [5] dll link enable0：禁用initfc dllp发送以及建立链路;1：使能initfc dllp发送以及建立链路。
        unsigned int    reserved_76           : 1   ; // [6] reserved
        unsigned int    fastlinkmode          : 1   ; // [7] fast link mode0：禁用fast link mode;1：使能fast link mode。
        unsigned int    reserved_75           : 8   ; // [15..8] reserved
        unsigned int    linkmodeenable        : 6   ; // [21..16] link mode enable000001：x1;
        unsigned int    crosslinkenable       : 1   ; // [22] crosslink enable0：禁用crosslink;1：使能crosslink。
        unsigned int    crosslinkactive       : 1   ; // [23] crosslink active0：未发生crosslink;1：发生crosslink。
        unsigned int    port_link_ctrl        : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic4_u;

// define the union pcie_ep_port_logic5_u
// 端口逻辑寄存器
// 0x714
typedef union tagepportlogic5
{
    // define the struct bits
    struct
    {
        unsigned int    insertlaneskewfortransmit  : 24  ; // [23..0] insert lane skew for transmit
        unsigned int    flowcontroldisable    : 1   ; // [24] flow control disable0：不禁用core发送fc dllp;1：禁用core发送fc dllp。
        unsigned int    ack_nakdisable        : 1   ; // [25] ack/nak disable0：不禁用core发送ack/nak dllp;1：禁用core发送ack/nak dllp。
        unsigned int    reserved_79           : 5   ; // [30..26] reserved
        unsigned int    lane_skew             : 1   ; // [31] disable lane-to-lane deskew0：不禁用lane-to-lane deskew;1：禁用lane-to-lane deskew。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic5_u;

// define the union pcie_ep_port_logic6_u
// 端口逻辑寄存器
// 0x718
typedef union tagepportlogic6
{
    // define the struct bits
    struct
    {
        unsigned int    numberoftssymbols     : 4   ; // [3..0] number of ts symbols
        unsigned int    reserved_81           : 4   ; // [7..4] reserved
        unsigned int    numberofskpsymbols    : 3   ; // [10..8] number of skp symbols
        unsigned int    reserved_80           : 3   ; // [13..11] reserved
        unsigned int    timermodifierforreplaytimer  : 5   ; // [18..14] timer modifier for replay timer
        unsigned int    timermodifierforack_naklatencytimer  : 5   ; // [23..19] timer modifier for ack/nak latency timer
        unsigned int    timermodifierforflowcontrolwatchdogtimer  : 5   ; // [28..24] timer modifier for flow control watchdog timer
        unsigned int    sym_num               : 3   ; // [31..29] configuration requests targeted at function numbers above this value will be returned with ur (unsupported request).
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic6_u;

// define the union pcie_ep_port_logic7_u
// 端口逻辑寄存器
// 0x71c
typedef union tagepportlogic7
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddataqueuedepth  : 11  ; // [10..0] skp interval value
        unsigned int    reserved_82           : 4   ; // [14..11] reserved
        unsigned int    sym_timer             : 1   ; // [15] disable fc watchdog timer0：不禁用fc watchdog timer;1：禁用fc watchdog timer。
        unsigned int    maskfunctionmismatchfilteringfo  : 1   ; // [16] mask function mismatch filtering for incoming requests0：不使用mask;1：使用mask。
        unsigned int    maskpoisonedtlpfiltering  : 1   ; // [17] mask poisoned tlp filtering0：不使用mask;1：使用mask。
        unsigned int    maskbarmatchfiltering  : 1   ; // [18] mask bar match filtering0：不使用mask;1：使用mask。
        unsigned int    masktype1configurationrequestfiltering  : 1   ; // [19] mask type 1 configuration request filtering0：不使用mask;1：使用mask。
        unsigned int    masklockedrequestfiltering  : 1   ; // [20] mask locked request filtering0：不使用mask;1：使用mask。
        unsigned int    masktagerrorrulesforreceivedcompletions  : 1   ; // [21] mask tag error rules for received completions0：不使用mask;1：使用mask。
        unsigned int    maskrequesteridmismatcherrorforreceivedcompletions  : 1   ; // [22] mask requester id mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maskfunctionmismatcherrorforreceivedcompletions  : 1   ; // [23] mask function mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_traffic_classmis_match_error_forreceived_completions  : 1   ; // [24] mask traffic class mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_attributesmismatcherrorforreceivedcompletions  : 1   ; // [25] mask attributes mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_length_mismatch_error_forreceive_dcompletions  : 1   ; // [26] mask length mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering  : 1   ; // [27] mask ecrc error filtering0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering_forcompletions  : 1   ; // [28] mask ecrc error filtering for completions0：不使用mask;1：使用mask。
        unsigned int    message_control       : 1   ; // [29] 0：send decoded message on the sii,then drop the message tlps;
        unsigned int    maskfilteringofreceived  : 1   ; // [30] mask filtering of received i/o requests (rc mode only)0：不使用mask;1：使用mask。
        unsigned int    flt_mask1             : 1   ; // [31] mask filtering of received configuration requests (rc mode only)0：不使用mask;1：使用mask。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic7_u;

// define the union pcie_ep_port_logic8_u
// 端口逻辑寄存器
// 0x720
typedef union tagepportlogic8
{
    // define the struct bits
    struct
    {
        unsigned int    cx_flt_mask_venmsg0_drop  : 1   ; // [0] cx_flt_mask_venmsg0_drop0：丢弃vendor msg type 0并报告ur错误;1：不丢弃vendor msg type 0。
        unsigned int    cx_flt_mask_venmsg1_drop  : 1   ; // [1] cx_flt_mask_venmsg1_drop0：丢弃vendor msg type 1;1：不丢弃vendor msg type 1。
        unsigned int    cx_flt_mask_dabort_4ucpl  : 1   ; // [2] cx_flt_mask_dabort_4ucpl0：对于unexpected cpl使能dllp abort;1：对于unexpected cpl禁用dllp abort。
        unsigned int    cx_flt_mask_handle_flush  : 1   ; // [3] cx_flt_mask_handle_flush0：禁用core filter处理flush请求;1：使能core filter处理flush请求。
        unsigned int    flt_mask2             : 28  ; // [31..4] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic8_u;

// define the union pcie_ep_port_logic9_u
// 端口逻辑寄存器
// 0x724
typedef union tagepportlogic9
{
    // define the struct bits
    struct
    {
        unsigned int    amba_multi_outbound_decomp_np  : 1   ; // [0] enable amba multiple outbound decomposed np sub-request0：禁用;1：使能。
        unsigned int    amba_obnp_ctrl        : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic9_u;

// define the union pcie_ep_port_logic12_u
// 端口逻辑寄存器
// 0x730
typedef union tagepportlogic12
{
    // define the struct bits
    struct
    {
        unsigned int    transmitposteddatafccredits  : 12  ; // [11..0] transmit posted data fc credits
        unsigned int    transmitpostedheaderfccredits  : 8   ; // [19..12] transmit posted header fc credits
        unsigned int    tx_pfc_status         : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic12_u;

// define the union pcie_ep_port_logic13_u
// 端口逻辑寄存器
// 0x734
typedef union tagepportlogic13
{
    // define the struct bits
    struct
    {
        unsigned int    transmitnon_posteddatafccredits  : 12  ; // [11..0] transmit non-posted data fc credits
        unsigned int    transmitnon_postedheaderfccredits  : 8   ; // [19..12] transmit non-posted header fc credits
        unsigned int    tx_npfc_status        : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic13_u;

// define the union pcie_ep_port_logic14_u
// 端口逻辑寄存器
// 0x738
typedef union tagepportlogic14
{
    // define the struct bits
    struct
    {
        unsigned int    transmitcompletiondatafccredits  : 12  ; // [11..0] transmit completion data fc credits
        unsigned int    transmitcompletionheaderfccredits  : 8   ; // [19..12] transmit completion header fc credits
        unsigned int    tx_cplfc_status       : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic14_u;

// define the union pcie_ep_port_logic15_u
// 端口逻辑寄存器
// 0x73c
typedef union tagepportlogic15
{
    // define the struct bits
    struct
    {
        unsigned int    rx_tlp_fc_credit_not_retured  : 1   ; // [0] received tlp fc credits not returnedindicates that the core has sent a tlp but has not yet received anupdatefc dllp indicating that the credits for that tlp have been restoredby the receiver at the other end of the link
        unsigned int    tx_retry_buf_not_empty  : 1   ; // [1] transmit retry buffer not emptyindicates that there is data in the transmit retry buffer.
        unsigned int    rx_queue_not_empty    : 1   ; // [2] received queue not emptyindicates there is data in one or more of the receive buffers
        unsigned int    reserved_84           : 13  ; // [15..3] reserved
        unsigned int    fc_latency_timer_override_value  : 13  ; // [28..16] fc latency timer override value
        unsigned int    reserved_83           : 2   ; // [30..29] reserved
        unsigned int    fc_latency_timer_override_en  : 1   ; // [31] fc latency timer override enable
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic15_u;

// define the union pcie_ep_port_logic16_u
// 端口逻辑寄存器
// 0x748
typedef union tagepportlogic16
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddatacredits  : 12  ; // [11..0] vc0 posted data credits
        unsigned int    vc0postedheadercredits  : 8   ; // [19..12] vc0 posted header credits
        unsigned int    reserved_86           : 1   ; // [20] reserved
        unsigned int    vc0_postedtlpqueuemode  : 1   ; // [21] vc0 posted tlp queue mode0：未选择store-and-forword;1：选择store-and-forword。
        unsigned int    vc0postedtlpqueuemode  : 1   ; // [22] vc0 posted tlp queue mode0：未选择cut_through;1：选择cut_through。
        unsigned int    vc0postedtlpqueuemo   : 1   ; // [23] vc0 posted tlp queue mode0：未选择bypass;1：选择bypass。
        unsigned int    reserved_85           : 6   ; // [29..24] reserved
        unsigned int    tlptypeorderingforvc0  : 1   ; // [30] tlp type ordering for vc00：strict ordering;1：ordering follows the rules in pcie 3.0。
        unsigned int    rx_pque_ctrl          : 1   ; // [31] vc ordering for receive queues0：round robin;
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic16_u;

// define the union pcie_ep_port_logic17_u
// 端口逻辑寄存器
// 0x74c
typedef union tagepportlogic17
{
    // define the struct bits
    struct
    {
        unsigned int    vc0non_posteddatacredits  : 12  ; // [11..0] vc0 non-posted data credits
        unsigned int    vc0non_postedheadercredits  : 8   ; // [19..12] vc0 non-posted header credits
        unsigned int    rx_npque_ctrl         : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic17_u;

// define the union pcie_ep_port_logic18_u
// 端口逻辑寄存器
// 0x750
typedef union tagepportlogic18
{
    // define the struct bits
    struct
    {
        unsigned int    vco_comp_data_credits  : 12  ; // [11..0] vc0 completion data credits
        unsigned int    vc0_cpl_header_credt  : 8   ; // [19..12] vc0 completion header credits
        unsigned int    reserved_88           : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic18_u;

// define the union pcie_ep_port_logic19_u
// 端口逻辑寄存器
// 0x7a8
typedef union tagepportlogic19
{
    // define the struct bits
    struct
    {
        unsigned int    vco_posted_data_que_path  : 14  ; // [13..0] vc0 posted data queue depth
        unsigned int    reserved_89           : 2   ; // [15..14] reserved
        unsigned int    vco_posted_head_queue_depth  : 10  ; // [25..16] vc0 posted header queue depth
        unsigned int    vc_pbuf_ctrl          : 6   ; // [31..26] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic19_u;

// define the union pcie_ep_port_logic20_u
// 端口逻辑寄存器
// 0x7ac
typedef union tagepportlogic20
{
    // define the struct bits
    struct
    {
        unsigned int    vco_np_data_que_depth  : 14  ; // [13..0] vc0 non-posted data queue depth
        unsigned int    reserved_91           : 2   ; // [15..14] reserved
        unsigned int    vco_np_header_que_depth  : 10  ; // [25..16] vc0 non-posted header queue depth
        unsigned int    vc_npbuf_ctrl         : 6   ; // [31..26] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic20_u;

// define the union pcie_ep_port_logic21_u
// 端口逻辑寄存器
// 0x7b0
typedef union tagepportlogic21
{
    // define the struct bits
    struct
    {
        unsigned int    vco_comp_data_queue_depth  : 14  ; // [13..0] vc0 completion data queue depth
        unsigned int    reserved_93           : 2   ; // [15..14] reserved
        unsigned int    vco_posted_head_queue_depth  : 10  ; // [25..16] vc0 posted header queue depth
        unsigned int    reserved_92           : 6   ; // [31..26] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic21_u;

// define the union pcie_ep_port_logic22_u
// 端口逻辑寄存器
// 0x80c
typedef union tagepportlogic22
{
    // define the struct bits
    struct
    {
        unsigned int    n_fts                 : 8   ; // [7..0] sets the number of fast training sequences (n_fts) that the core advertises as its n_fts during gen2 or gen3 link training
        unsigned int    pre_determ_num_of_lane  : 9   ; // [16..8] predetermined number of lanes1：1 lane;2：2 lanes;其他值：保留。
        unsigned int    det_sp_change         : 1   ; // [17] directed speed change0：指示ltssm在链路初始化完成后不改变到gen2速率;1：指示ltssm在链路初始化完成后改变到gen2速率。
        unsigned int    config_phy_tx_sw      : 1   ; // [18] config phy tx swing0：low swing;1：full swing。
        unsigned int    config_tx_comp_rcv_bit  : 1   ; // [19] config tx compliance receive bit0：不指示ltssm发送含有声明compliance接受比特的ts有序集;1：指示ltssm发送含有声明compliance接受比特的ts有序集。
        unsigned int    set_emp_level         : 1   ; // [20] used to set the de-emphasis level for upstream ports0：-6db;1：-3.5db。
        unsigned int    reserved_94           : 11  ; // [31..21] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_port_logic22_u;

// define the union pcie_ep_portlogic25_u
// 端口逻辑寄存器
// 0x818
typedef union tagepportlogic25
{
    // define the struct bits
    struct
    {
        unsigned int    remote_rd_req_size    : 3   ; // [2..0] remote read request size000：128;001：256;010：512;011：1024;100：2048;101：4096;110：保留;111：保留。
        unsigned int    reserved_97           : 5   ; // [7..3] reserved
        unsigned int    remote_max_brd_tag    : 8   ; // [15..8] remote max bridge tag
        unsigned int    reserved_96           : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic25_u;

// define the union pcie_ep_portlogic26_u
// 端口逻辑寄存器
// 0x81c
typedef union tagepportlogic26
{
    // define the struct bits
    struct
    {
        unsigned int    resize_master_resp_compser  : 1   ; // [0] resize master response composer0：不改变axi master response composer contro register 0的值;1：改变axi master response composer contro register 0的值。
        unsigned int    axi_ctrl1             : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic26_u;

// define the union pcie_ep_portlogic54_u
// 端口逻辑寄存器
// 0x900
typedef union tagepportlogic54
{
    // define the struct bits
    struct
    {
        unsigned int    region_index          : 4   ; // [3..0] region index
        unsigned int    reserved_98           : 27  ; // [30..4] reserved
        unsigned int    iatu_view             : 1   ; // [31] region direction0：outbound;1：inbound。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic54_u;

// define the union pcie_ep_portlogic55_u
// 端口逻辑寄存器
// 0x904
typedef union tagepportlogic55
{
    // define the struct bits
    struct
    {
        unsigned int    iatu1_type            : 5   ; // [4..0] 出站tlp的地址在该区域内则该tlp的type字段用该值替换;入站tlp的type字段如果等于该值则执行地址转换。
        unsigned int    iatu1_tc              : 3   ; // [7..5] 出站tlp的地址在该区域内则该tlp的tc字段用该值替换;入站tlp的tc字段如果等于该值则执行地址转换。
        unsigned int    iatu1_td              : 1   ; // [8] 出站tlp的地址在该区域内则该tlp的td字段用该值替换;入站tlp的td字段如果等于该值则执行地址转换。
        unsigned int    iatu1_attr            : 2   ; // [10..9] 出站tlp的地址在该区域内则该tlp的attr字段用该值替换;入站tlp的attr字段如果等于该值则执行地址转换。
        unsigned int    reserved_102          : 5   ; // [15..11] reserved
        unsigned int    iatu1_at              : 2   ; // [17..16] 出站tlp的地址在该区域内则该tlp的at字段用该值替换;入站tlp的at字段如果等于该值则执行地址转换。
        unsigned int    reserved_101          : 2   ; // [19..18] reserved
        unsigned int    iatu1_id              : 3   ; // [22..20] 出站tlp的地址在该区域内则该tlp的requester id的功能号字段用该值替换;对于入站mem/io，如果与该功能号的bar匹配，则执行地址转换;对于入站cfg，如果功能号字段等于该值则执行地址转换。
        unsigned int    reserved_100          : 9   ; // [31..23] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic55_u;

// define the union pcie_ep_portlogic56_u
// 端口逻辑寄存器
// 0x908
typedef union tagepportlogic56
{
    // define the struct bits
    struct
    {
        unsigned int    iatu2_type            : 8   ; // [7..0] 出站tlp的地址在该区域内，并且转换的tlp的type字段为消息，那么该tlp的message code字段用该值替换;
        unsigned int    iatu2_bar_num         : 3   ; // [10..8] bar number对于outbound不适用。
        unsigned int    reserved_106          : 3   ; // [13..11] reserved
        unsigned int    iatu2_tc_match_en     : 1   ; // [14] tc match enable对于outbound不适用。
        unsigned int    iatu2_td_match_en     : 1   ; // [15] td match enable对于outbound不适用。
        unsigned int    iatu2_attr_match_en   : 1   ; // [16] attr match enable对于outbound不适用。
        unsigned int    reserved_105          : 1   ; // [17] reserved
        unsigned int    iatu2_at_match_en     : 1   ; // [18] at match enable对于outbound不适用。
        unsigned int    iatu2_func_num_match_en  : 1   ; // [19] function number match enable对于outbound不适用。
        unsigned int    iatu2_virtual_func_num_match_en  : 1   ; // [20] virtual function number match enable对于outbound不适用。
        unsigned int    message_code_match_en  : 1   ; // [21] message code match enable对于outbound不适用。
        unsigned int    reserved_104          : 2   ; // [23..22] reserved
        unsigned int    iatu2_response_code   : 2   ; // [25..24] response code对于outbound不适用。
        unsigned int    reserved_103          : 1   ; // [26] reserved
        unsigned int    iatu2_fuzzy_type_match_mode  : 1   ; // [27] fuzzy type match mode对于outbound不适用。
        unsigned int    iatu2_cfg_shift_mode  : 1   ; // [28] cfg shift mode0：不使用cfg shift mode;1：使用cfg shift mode。
        unsigned int    iatu2_ivert_mode      : 1   ; // [29] invert mode0：不使用invert mode;1：使用invert mode。
        unsigned int    iatu2_match_mode      : 1   ; // [30] match mode对于outbound不适用。
        unsigned int    iatu2_region_en       : 1   ; // [31] region enable0：禁用该区域地址转换;1：使能该区域地址转换。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic56_u;

// define the union pcie_ep_portlogic57_u
// 端口逻辑寄存器
// 0x90c
typedef union tagepportlogic57
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_start_low        : 12  ; // [11..0] forms bits [11:0] of the start address of the address region to be translated.
        unsigned int    iatu_start_high       : 20  ; // [31..12] forms bits [31:12] of the start address of the address region to be translated.
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic57_u;

// define the union pcie_ep_portlogic59_u
// 端口逻辑寄存器
// 0x914
typedef union tagepportlogic59
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_107          : 12  ; // [11..0] forms bits [11:0] of the end address of the address region to be translated
        unsigned int    iatu_limit            : 20  ; // [31..12] forms bits [31:12] of the end address of the address region to be translated
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic59_u;

// define the union pcie_ep_portlogic60_u
// 端口逻辑寄存器
// 0x918
typedef union tagepportlogic60
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_108          : 12  ; // [11..0] forms bits [11:0] of the start address of the new address of the translated region
        unsigned int    xlated_addr_low       : 20  ; // [31..12] forms bits [31:12] of the of the new address of the translated region
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic60_u;

// define the union pcie_ep_portlogic62_u
// 端口逻辑寄存器
// 0x97c
typedef union tagepportlogic62
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_eng_en         : 1   ; // [0] dma write engine enable0：禁用dma write engine;1：使能dma write engine。
        unsigned int    dma_wr_ena            : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic62_u;

// define the union pcie_ep_portlogic63_u
// 端口逻辑寄存器
// 0x980
typedef union tagepportlogic63
{
    // define the struct bits
    struct
    {
        unsigned int    wr_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma写操作，目前仅支持单通道。
        unsigned int    reserved_110          : 28  ; // [30..3] reserved
        unsigned int    dma_wr_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic63_u;

// define the union pcie_ep_portlogic64_u
// 端口逻辑寄存器
// 0x99c
typedef union tagepportlogic64
{
    // define the struct bits
    struct
    {
        unsigned int    dma_read_eng_en       : 1   ; // [0] dma read engine enable0：禁用dma read engine;1：使能dma read engine。
        unsigned int    reserved_111          : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic64_u;

// define the union pcie_ep_portlogic65_u
// 端口逻辑寄存器
// 0x9a0
typedef union tagepportlogic65
{
    // define the struct bits
    struct
    {
        unsigned int    rd_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma读操作，目前仅支持单通道。
        unsigned int    reserved_113          : 28  ; // [30..3] reserved
        unsigned int    dma_rd_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic65_u;

// define the union pcie_ep_portlogic66_u
// 端口逻辑寄存器
// 0x9bc
typedef union tagepportlogic66
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 8   ; // [7..0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_115          : 8   ; // [15..8] reserved
        unsigned int    abort_int_status      : 8   ; // [23..16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_114          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic66_u;

// define the union pcie_ep_portlogic67_u
// 端口逻辑寄存器
// 0x9c4
typedef union tagepportlogic67
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 8   ; // [7..0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_118          : 8   ; // [15..8] reserved
        unsigned int    abort_int_mask        : 8   ; // [23..16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    reserved_117          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic67_u;

// define the union pcie_ep_portlogic68_u
// 端口逻辑寄存器
// 0x9c8
typedef union tagepportlogic68
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 8   ; // [7..0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_121          : 8   ; // [15..8] reserved
        unsigned int    abort_int_clr         : 8   ; // [23..16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    reserved_120          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic68_u;

// define the union pcie_ep_portlogic69_u
// 端口逻辑寄存器
// 0x9cc
typedef union tagepportlogic69
{
    // define the struct bits
    struct
    {
        unsigned int    app_rd_err_det        : 8   ; // [7..0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_123          : 8   ; // [15..8] reserved
        unsigned int    ll_element_fetch_err_det  : 8   ; // [23..16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    reserved_122          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic69_u;

// define the union pcie_ep_portlogic74_u
// 端口逻辑寄存器
// 0x9e0
typedef union tagepportlogic74
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_c0_imwr_data   : 16  ; // [15..0] the dma uses this field to generate the data field for the done or abort imwr tlps it generates for write channel 0
        unsigned int    dma_wr_c1_imwr_data   : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic74_u;

// define the union pcie_ep_portlogic75_u
// 端口逻辑寄存器
// 0xa00
typedef union tagepportlogic75
{
    // define the struct bits
    struct
    {
        unsigned int    wr_ch_ll_remote_abort_int_en  : 8   ; // [7..0] write channel ll remote abort interrupt enable (llraie)0：禁用write channel ll remote abort interrupt;1：使能write channel ll remote abort interrupt。
        unsigned int    reserved_125          : 8   ; // [15..8] reserved
        unsigned int    wr_ch_ll_local_abort_int_en  : 8   ; // [23..16] write channel ll local abort interrupt enable (lllaie)0：禁用write channel ll local abort interrupt;1：使能write channel ll local abort interrupt。
        unsigned int    reserved_124          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic75_u;

// define the union pcie_ep_portlogic76_u
// 端口逻辑寄存器
// 0xa10
typedef union tagepportlogic76
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 8   ; // [7..0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_128          : 8   ; // [15..8] reserved
        unsigned int    abort_int_status      : 8   ; // [23..16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_127          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic76_u;

// define the union pcie_ep_portlogic77_u
// 端口逻辑寄存器
// 0xa18
typedef union tagepportlogic77
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 8   ; // [7..0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_130          : 8   ; // [15..8] reserved
        unsigned int    abort_int_mask        : 8   ; // [23..16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    dma_rd_int_mask       : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic77_u;

// define the union pcie_ep_portlogic78_u
// 端口逻辑寄存器
// 0xa1c
typedef union tagepportlogic78
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 8   ; // [7..0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_132          : 8   ; // [15..8] reserved
        unsigned int    abort_int_clr         : 8   ; // [23..16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    dma_rd_int_clr        : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic78_u;

// define the union pcie_ep_portlogic79_u
// 端口逻辑寄存器
// 0xa24
typedef union tagepportlogic79
{
    // define the struct bits
    struct
    {
        unsigned int    app_wr_err_det        : 8   ; // [7..0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_133          : 8   ; // [15..8] reserved
        unsigned int    link_list_fetch_err_det  : 8   ; // [23..16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    dma_rd_err_low        : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic79_u;

// define the union pcie_ep_portlogic80_u
// 端口逻辑寄存器
// 0xa28
typedef union tagepportlogic80
{
    // define the struct bits
    struct
    {
        unsigned int    unspt_request         : 8   ; // [7..0] unsupported request0：未检测到unsupported request;1：检测到unsupported request。
        unsigned int    completer_abort       : 8   ; // [15..8] completer abort0：未检测到completer abort;1：检测到completer abort。
        unsigned int    cpl_time_out          : 8   ; // [23..16] completion time out
        unsigned int    data_poison           : 8   ; // [31..24] data poisoning0：未检测到data poisoning;1：检测到data poisoning。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic80_u;

// define the union pcie_ep_portlogic81_u
// 端口逻辑寄存器
// 0xa34
typedef union tagepportlogic81
{
    // define the struct bits
    struct
    {
        unsigned int    remote_abort_int_en   : 8   ; // [7..0] read channel ll remote abort interrupt enable (llraie)0：禁用read channel ll remote abort interrupt;1：使能read channel ll remote abort interrupt。
        unsigned int    reserved_135          : 8   ; // [15..8] reserved
        unsigned int    local_abort_int_en    : 8   ; // [23..16] read channel ll local abort interrupt enable (lllaie)0：禁用read channel ll local abort interrupt;1：使能read channel ll local abort interrupt。
        unsigned int    dma_rd_ll_err_ena     : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic81_u;

// define the union pcie_ep_portlogic86_u
// 端口逻辑寄存器
// 0xa6c
typedef union tagepportlogic86
{
    // define the struct bits
    struct
    {
        unsigned int    channel_dir           : 3   ; // [2..0]
        unsigned int    reserved_138          : 28  ; // [30..3] reserved
        unsigned int    dma_ch_con_idx        : 1   ; // [31] channel direction0：写通道0;1：读通道0。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic86_u;

// define the union pcie_ep_portlogic87_u
// 端口逻辑寄存器
// 0xa70
typedef union tagepportlogic87
{
    // define the struct bits
    struct
    {
        unsigned int    cycle_bit             : 1   ; // [0] cycle bit (cb)
        unsigned int    toggle_cycle_bit      : 1   ; // [1] toggle cycle bit (tcb)
        unsigned int    load_link_pointer     : 1   ; // [2] load link pointer (llp)
        unsigned int    local_int_en          : 1   ; // [3] local interrupt enable (lie)0：禁用local interrupt;1：使能local interrupt。
        unsigned int    remote_int_en         : 1   ; // [4] remote interrupt enable (rie)0：禁用remote interrupt;1：使能remote interrupt。
        unsigned int    channel_status        : 2   ; // [6..5] channel status00：保留;01：running;10：halted;11：stopped。
        unsigned int    reserved_142          : 1   ; // [7] reserved
        unsigned int    consumer_cycle_state  : 1   ; // [8] consumer cycle state (ccs)
        unsigned int    linked_list_en        : 1   ; // [9] linked list enable (lle)0：禁用linked list;1：使能linked list。
        unsigned int    reserved_141          : 2   ; // [11..10] reserved
        unsigned int    func_num_dma          : 5   ; // [16..12] function number (fn) for generated mrd/mwr dma tlps
        unsigned int    reserved_140          : 7   ; // [23..17] reserved
        unsigned int    no_snoop              : 1   ; // [24] no snoop tlp header bit (ns)
        unsigned int    ro                    : 1   ; // [25] relaxed ordering tlp header bit (ro)
        unsigned int    td                    : 1   ; // [26] traffic digest tlp header bit (td)
        unsigned int    tc                    : 3   ; // [29..27] traffic class tlp header bit (tc)
        unsigned int    dma_ch_ctrl           : 2   ; // [31..30] address translation tlp header bit (at)
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic87_u;

// define the union pcie_ep_portlogic93_u
// 端口逻辑寄存器
// 0xa8c
typedef union tagepportlogic93
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_144          : 2   ; // [1..0] reserved
        unsigned int    dma_ll_ptr_low        : 30  ; // [31..2] lower bits of the address of the linked list transfer list in local memory
    } bits;

    // define an unsigned member
    unsigned int    u32;

} pcie_ep_portlogic93_u;

/* PCIE_MCAST_CFG_REG 模块寄存器基地址 */
#define PCIE_MUL_BASE                             (0x1000)

/******************************************************************************/
/*                      PhosphorV660 PCIE_MCAST_CFG_REG 寄存器定义            */
/******************************************************************************/
#define PCIE_MUL_MC_CTRL_REG                      (PCIE_MUL_BASE + 0x0)           /* 多播控制寄存器 */
#define PCIE_MUL_CFG_WIN0_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x4)           /* 窗口0基地址低32位 */
#define PCIE_MUL_CFG_WIN0_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x8)           /* 窗口0基地址高32位 */
#define PCIE_MUL_CFG_WIN1_BAR_LOWER_REG           (PCIE_MUL_BASE + 0xC)           /* 窗口1基地址低32位 */
#define PCIE_MUL_CFG_WIN1_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x10)          /* 窗口1基地址高32位 */
#define PCIE_MUL_CFG_WIN2_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x14)          /* 窗口2基地址低32位 */
#define PCIE_MUL_CFG_WIN2_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x18)          /* 窗口2基地址高32位 */
#define PCIE_MUL_CFG_WIN3_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x1C)          /* 窗口3基地址低32位 */
#define PCIE_MUL_CFG_WIN3_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x20)          /* 窗口3基地址高32位 */
#define PCIE_MUL_CFG_WIN4_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x24)          /* 窗口4基地址低32位 */
#define PCIE_MUL_CFG_WIN4_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x28)          /* 窗口4基地址高32位 */
#define PCIE_MUL_CFG_WIN5_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x2C)          /* 窗口5基地址低32位 */
#define PCIE_MUL_CFG_WIN5_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x30)          /* 窗口5基地址高32位 */
#define PCIE_MUL_CFG_WIN6_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x34)          /* 窗口6基地址低32位 */
#define PCIE_MUL_CFG_WIN6_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x38)          /* 窗口6基地址高32位 */
#define PCIE_MUL_CFG_WIN7_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x3C)          /* 窗口7基地址低32位 */
#define PCIE_MUL_CFG_WIN7_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x40)          /* 窗口7基地址高32位 */
#define PCIE_MUL_CFG_WIN8_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x44)          /* 窗口8基地址低32位 */
#define PCIE_MUL_CFG_WIN8_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x48)          /* 窗口8基地址高32位 */
#define PCIE_MUL_CFG_WIN9_BAR_LOWER_REG           (PCIE_MUL_BASE + 0x4C)          /* 窗口9基地址低32位 */
#define PCIE_MUL_CFG_WIN9_BAR_UPPER_REG           (PCIE_MUL_BASE + 0x50)          /* 窗口9基地址高32位 */
#define PCIE_MUL_CFG_WIN10_BAR_LOWER_REG          (PCIE_MUL_BASE + 0x54)          /* 窗口10基地址低32位 */
#define PCIE_MUL_CFG_WIN10_BAR_UPPER_REG          (PCIE_MUL_BASE + 0x58)          /* 窗口10基地址高32位 */
#define PCIE_MUL_CFG_WIN11_BAR_LOWER_REG          (PCIE_MUL_BASE + 0x5C)          /* 窗口11基地址低32位 */
#define PCIE_MUL_CFG_WIN11_BAR_UPPER_REG          (PCIE_MUL_BASE + 0x60)          /* 窗口11基地址高32位 */
#define PCIE_MUL_CFG_WIN12_BAR_LOWER_REG          (PCIE_MUL_BASE + 0x64)          /* 窗口12基地址低32位 */
#define PCIE_MUL_CFG_WIN12_BAR_UPPER_REG          (PCIE_MUL_BASE + 0x68)          /* 窗口12基地址高32位 */
#define PCIE_MUL_CFG_WIN13_BAR_LOWER_REG          (PCIE_MUL_BASE + 0x6C)          /* 窗口13基地址低32位 */
#define PCIE_MUL_CFG_WIN13_BAR_UPPER_REG          (PCIE_MUL_BASE + 0x70)          /* 窗口13基地址高32位 */
#define PCIE_MUL_CFG_WIN14_BAR_LOWER_REG          (PCIE_MUL_BASE + 0x74)          /* 窗口14基地址低32位 */
#define PCIE_MUL_CFG_WIN14_BAR_UPPER_REG          (PCIE_MUL_BASE + 0x78)          /* 窗口14基地址高32位 */
#define PCIE_MUL_CFG_WIN15_BAR_LOWER_REG          (PCIE_MUL_BASE + 0x7C)          /* 窗口15基地址低32位 */
#define PCIE_MUL_CFG_WIN15_BAR_UPPER_REG          (PCIE_MUL_BASE + 0x80)          /* 窗口15基地址高32位 */
#define PCIE_MUL_CFG_WIN0_SIZE_REG                (PCIE_MUL_BASE + 0x84)          /* 窗口0的大小 */
#define PCIE_MUL_CFG_WIN1_SIZE_REG                (PCIE_MUL_BASE + 0x88)          /* 窗口1的大小 */
#define PCIE_MUL_CFG_WIN2_SIZE_REG                (PCIE_MUL_BASE + 0x8C)          /* 窗口2的大小 */
#define PCIE_MUL_CFG_WIN3_SIZE_REG                (PCIE_MUL_BASE + 0x90)          /* 窗口3的大小 */
#define PCIE_MUL_CFG_WIN4_SIZE_REG                (PCIE_MUL_BASE + 0x94)          /* 窗口4的大小 */
#define PCIE_MUL_CFG_WIN5_SIZE_REG                (PCIE_MUL_BASE + 0x98)          /* 窗口5的大小 */
#define PCIE_MUL_CFG_WIN6_SIZE_REG                (PCIE_MUL_BASE + 0x9C)          /* 窗口6的大小 */
#define PCIE_MUL_CFG_WIN7_SIZE_REG                (PCIE_MUL_BASE + 0xA0)          /* 窗口7的大小 */
#define PCIE_MUL_CFG_WIN8_SIZE_REG                (PCIE_MUL_BASE + 0xA4)          /* 窗口8的大小 */
#define PCIE_MUL_CFG_WIN9_SIZE_REG                (PCIE_MUL_BASE + 0xA8)          /* 窗口9的大小 */
#define PCIE_MUL_CFG_WIN10_SIZE_REG               (PCIE_MUL_BASE + 0xAC)          /* 窗口10的大小 */
#define PCIE_MUL_CFG_WIN11_SIZE_REG               (PCIE_MUL_BASE + 0xB0)          /* 窗口11的大小 */
#define PCIE_MUL_CFG_WIN12_SIZE_REG               (PCIE_MUL_BASE + 0xB4)          /* 窗口12的大小 */
#define PCIE_MUL_CFG_WIN13_SIZE_REG               (PCIE_MUL_BASE + 0xB8)          /* 窗口13的大小 */
#define PCIE_MUL_CFG_WIN14_SIZE_REG               (PCIE_MUL_BASE + 0xBC)          /* 窗口14的大小 */
#define PCIE_MUL_CFG_WIN15_SIZE_REG               (PCIE_MUL_BASE + 0xC0)          /* 窗口15的大小 */
#define PCIE_MUL_CFG_WIN0_XLAT_BASE_LOWER_REG     (PCIE_MUL_BASE + 0xC4)          /* 窗口0转换地址低32位 */
#define PCIE_MUL_CFG_WIN0_XLAT_BASE_UPPER_REG     (PCIE_MUL_BASE + 0xC8)          /* 窗口0转换地址高32位 */
#define PCIE_MUL_CFG_WIN1_XLAT_BASE_LOWER_REG     (PCIE_MUL_BASE + 0xCC)          /* 窗口1转换地址低32位 */
#define PCIE_MUL_CFG_WIN1_XLAT_BASE_UPPER_REG     (PCIE_MUL_BASE + 0xD0)          /* 窗口1转换地址高32位 */
#define PCIE_MUL_CFG_WIN2_XLAT_BASE_LOWER_REG     (PCIE_MUL_BASE + 0xD4)          /* 窗口2转换地址低32位 */
#define PCIE_MUL_CFG_WIN2_XLAT_BASE_UPPER_REG     (PCIE_MUL_BASE + 0xD8)          /* 窗口2转换地址高32位 */
#define PCIE_MUL_CFG_WIN3_XLAT_BASE_LOWER_REG     (PCIE_MUL_BASE + 0xDC)          /* 窗口3转换地址低32位 */
#define PCIE_MUL_CFG_WIN3_XLAT_BASE_UPPER_REG     (PCIE_MUL_BASE + 0xE0)          /* 窗口3转换地址高32位 */
#define PCIE_MUL_CFG_WIN4_XLAT_BASE_LOWER_REG     (PCIE_MUL_BASE + 0xE4)          /* 窗口4转换地址低32位 */
#define PCIE_MUL_CFG_WIN4_XLAT_BASE_UPPER_REG     (PCIE_MUL_BASE + 0xE8)          /* 窗口3转换地址高32位 */
#define PCIE_MUL_CFG_WIN5_XLAT_BASE_LOWER_REG     (PCIE_MUL_BASE + 0xEC)          /* 窗口5转换地址低32位 */
#define PCIE_MUL_CFG_WIN5_XLAT_BASE_UPPER_REG     (PCIE_MUL_BASE + 0xF0)          /* 窗口5转换地址高32位 */
#define PCIE_MUL_CFG_WIN6_XLAT_BASE_LOWER_REG     (PCIE_MUL_BASE + 0xF4)          /* 窗口6转换地址低32位 */
#define PCIE_MUL_CFG_WIN6_XLAT_BASE_UPPER_REG     (PCIE_MUL_BASE + 0xF8)          /* 窗口6转换地址高32位 */
#define PCIE_MUL_CFG_WIN7_XLAT_LOWER_REG          (PCIE_MUL_BASE + 0xFC)          /* 窗口7转换地址低32位 */
#define PCIE_MUL_CFG_WIN7_XLAT_UPPER_REG          (PCIE_MUL_BASE + 0x100)         /* 窗口7转换地址高32位 */
#define PCIE_MUL_CFG_WIN8_XLAT_LOWER_REG          (PCIE_MUL_BASE + 0x104)         /* 窗口8转换地址低32位 */
#define PCIE_MUL_CFG_WIN8_XLAT_UPPER_REG          (PCIE_MUL_BASE + 0x108)         /* 窗口8转换地址高32位 */
#define PCIE_MUL_CFG_WIN9_XLAT_LOWER_REG          (PCIE_MUL_BASE + 0x10C)         /* 窗口9转换地址低32位 */
#define PCIE_MUL_CFG_WIN9_XLAT_UPPER_REG          (PCIE_MUL_BASE + 0x110)         /* 窗口9转换地址高32位 */
#define PCIE_MUL_CFG_WIN10_XLAT_LOWER_REG         (PCIE_MUL_BASE + 0x114)         /* 窗口10转换地址低32位 */
#define PCIE_MUL_CFG_WIN10_XLAT_UPPER_REG         (PCIE_MUL_BASE + 0x118)         /* 窗口10转换地址高32位 */
#define PCIE_MUL_CFG_WIN11_XLAT_LOWER_REG         (PCIE_MUL_BASE + 0x11C)         /* 窗口11转换地址低32位 */
#define PCIE_MUL_CFG_WIN11_XLAT_UPPER_REG         (PCIE_MUL_BASE + 0x120)         /* 窗口11转换地址高32位 */
#define PCIE_MUL_CFG_WIN12_XLAT_LOWER_REG         (PCIE_MUL_BASE + 0x124)         /* 窗口12转换地址低32位 */
#define PCIE_MUL_CFG_WIN12_XLAT_UPPER_REG         (PCIE_MUL_BASE + 0x128)         /* 窗口12转换地址高32位 */
#define PCIE_MUL_CFG_WIN13_XLAT_LOWER_REG         (PCIE_MUL_BASE + 0x12C)         /* 窗口13转换地址低32位 */
#define PCIE_MUL_CFG_WIN13_XLAT_UPPER_REG         (PCIE_MUL_BASE + 0x130)         /* 窗口13转换地址高32位 */
#define PCIE_MUL_CFG_WIN14_XLAT_LOWER_REG         (PCIE_MUL_BASE + 0x134)         /* 窗口14转换地址低32位 */
#define PCIE_MUL_CFG_WIN14_XLAT_UPPER_REG         (PCIE_MUL_BASE + 0x138)         /* 窗口14转换地址高32位 */
#define PCIE_MUL_CFG_WIN15_XLAT_LOWER_REG         (PCIE_MUL_BASE + 0x13C)         /* 窗口15转换地址低32位 */
#define PCIE_MUL_CFG_WIN15_XLAT_UPPER_REG         (PCIE_MUL_BASE + 0x140)         /* 窗口15转换地址高32位 */
#define PCIE_MUL_CFG_WIN_XLAT_EN_REG              (PCIE_MUL_BASE + 0x144)         /* 窗口地址转换使能 */
#define PCIE_MUL_CFG_MCAST_CMD_TIMEOUT_REG        (PCIE_MUL_BASE + 0x148)         /* 多播命令超时计数器 */
#define PCIE_MUL_CFG_INT_STATUS_REG               (PCIE_MUL_BASE + 0x14C)         /* 中断状态寄存器 */
#define PCIE_MUL_CFG_INJECT_ECC_ERR_REG           (PCIE_MUL_BASE + 0x150)         /* ECC错误注入使能 */

/* Define the union pcie_mul_mc_ctrl_u */
/* 多播控制寄存器 */
/* 0x0 */
typedef union tagMcCtrl
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_mcast_en          : 1   ; /* [0] Multicast使能。 */
        unsigned int    cfg_win0_mcast_en     : 1   ; /* [1] 窗口0多播功能使能 */
        unsigned int    cfg_win1_mcast_en     : 1   ; /* [2] 窗口1多播功能使能 */
        unsigned int    cfg_win2_mcast_en     : 1   ; /* [3] 窗口2多播功能使能 */
        unsigned int    cfg_win3_mcast_en     : 1   ; /* [4] 窗口3多播功能使能 */
        unsigned int    cfg_win4_mcast_en     : 1   ; /* [5] 窗口4多播功能使能 */
        unsigned int    cfg_win5_mcast_en     : 1   ; /* [6] 窗口5多播功能使能 */
        unsigned int    cfg_win6_mcast_en     : 1   ; /* [7] 窗口6多播功能使能 */
        unsigned int    cfg_win7_mcast_en     : 1   ; /* [8] 窗口7多播功能使能 */
        unsigned int    cfg_win8_mcast_en     : 1   ; /* [9] 窗口8多播功能使能 */
        unsigned int    cfg_win9_mcast_en     : 1   ; /* [10] 窗口9多播功能使能 */
        unsigned int    cfg_win10_mcast_en    : 1   ; /* [11] 窗口10多播功能使能 */
        unsigned int    cfg_win11_mcast_en    : 1   ; /* [12] 窗口11多播功能使能 */
        unsigned int    cfg_win12_mcast_en    : 1   ; /* [13] 窗口12多播功能使能 */
        unsigned int    cfg_win13_mcast_en    : 1   ; /* [14] 窗口13多播功能使能 */
        unsigned int    cfg_win14_mcast_en    : 1   ; /* [15] 窗口14多播功能使能 */
        unsigned int    cfg_win15_mcast_en    : 1   ; /* [16] 窗口15多播功能使能 */
        unsigned int    cfg_mcast_win_dis     : 1   ; /* [17] 关闭所有窗口的multicast数据功能。通过配置该bit为1，可以动态关闭multicast的功能。 */
        unsigned int    Reserved_0            : 14  ; /* [31..18] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_mc_ctrl_u;

/* Define the union pcie_mul_cfg_win0_size_u */
/* 窗口0的大小 */
/* 0x84 */
typedef union tagCfgWin0Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win0_size         : 6   ; /* [5..0] 窗口0的大小。 */
        unsigned int    Reserved_1            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win0_size_u;

/* Define the union pcie_mul_cfg_win1_size_u */
/* 窗口1的大小 */
/* 0x88 */
typedef union tagCfgWin1Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win1_size         : 6   ; /* [5..0] 窗口1的大小。 */
        unsigned int    Reserved_2            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win1_size_u;

/* Define the union pcie_mul_cfg_win2_size_u */
/* 窗口2的大小 */
/* 0x8C */
typedef union tagCfgWin2Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win2_size         : 6   ; /* [5..0] 窗口2的大小。 */
        unsigned int    Reserved_3            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win2_size_u;

/* Define the union pcie_mul_cfg_win3_size_u */
/* 窗口3的大小 */
/* 0x90 */
typedef union tagCfgWin3Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win3_size         : 6   ; /* [5..0] 窗口3的大小。 */
        unsigned int    Reserved_4            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win3_size_u;

/* Define the union pcie_mul_cfg_win4_size_u */
/* 窗口4的大小 */
/* 0x94 */
typedef union tagCfgWin4Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win4_size         : 6   ; /* [5..0] 窗口4的大小。 */
        unsigned int    Reserved_5            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win4_size_u;

/* Define the union pcie_mul_cfg_win5_size_u */
/* 窗口5的大小 */
/* 0x98 */
typedef union tagCfgWin5Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win5_size         : 6   ; /* [5..0] 窗口5的大小。 */
        unsigned int    Reserved_6            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win5_size_u;

/* Define the union pcie_mul_cfg_win6_size_u */
/* 窗口6的大小 */
/* 0x9C */
typedef union tagCfgWin6Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win6_size         : 6   ; /* [5..0] 窗口6的大小。 */
        unsigned int    Reserved_7            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win6_size_u;

/* Define the union pcie_mul_cfg_win7_size_u */
/* 窗口7的大小 */
/* 0xA0 */
typedef union tagCfgWin7Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win7_size         : 6   ; /* [5..0] 窗口7的大小。 */
        unsigned int    Reserved_8            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win7_size_u;

/* Define the union pcie_mul_cfg_win8_size_u */
/* 窗口8的大小 */
/* 0xA4 */
typedef union tagCfgWin8Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win8_size         : 6   ; /* [5..0] 窗口8的大小。 */
        unsigned int    Reserved_9            : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win8_size_u;

/* Define the union pcie_mul_cfg_win9_size_u */
/* 窗口9的大小 */
/* 0xA8 */
typedef union tagCfgWin9Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win9_size         : 6   ; /* [5..0] 窗口9的大小。 */
        unsigned int    Reserved_10           : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win9_size_u;

/* Define the union pcie_mul_cfg_win10_size_u */
/* 窗口10的大小 */
/* 0xAC */
typedef union tagCfgWin10Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win10_size        : 6   ; /* [5..0] 窗口10的大小。 */
        unsigned int    Reserved_11           : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win10_size_u;

/* Define the union pcie_mul_cfg_win11_size_u */
/* 窗口11的大小 */
/* 0xB0 */
typedef union tagCfgWin11Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win11_size        : 6   ; /* [5..0] 窗口11的大小。 */
        unsigned int    Reserved_12           : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win11_size_u;

/* Define the union pcie_mul_cfg_win12_size_u */
/* 窗口12的大小 */
/* 0xB4 */
typedef union tagCfgWin12Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win12_size        : 6   ; /* [5..0] 窗口12的大小。 */
        unsigned int    Reserved_13           : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win12_size_u;

/* Define the union pcie_mul_cfg_win13_size_u */
/* 窗口13的大小 */
/* 0xB8 */
typedef union tagCfgWin13Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win13_size        : 6   ; /* [5..0] 窗口13的大小。 */
        unsigned int    Reserved_14           : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win13_size_u;

/* Define the union pcie_mul_cfg_win14_size_u */
/* 窗口14的大小 */
/* 0xBC */
typedef union tagCfgWin14Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win14_size        : 6   ; /* [5..0] 窗口14的大小。 */
        unsigned int    Reserved_15           : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win14_size_u;

/* Define the union pcie_mul_cfg_win15_size_u */
/* 窗口15的大小 */
/* 0xC0 */
typedef union tagCfgWin15Size
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win15_size        : 6   ; /* [5..0] 窗口15的大小。 */
        unsigned int    Reserved_16           : 26  ; /* [31..6] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win15_size_u;

/* Define the union pcie_mul_cfg_win_xlat_en_u */
/* 窗口地址转换使能 */
/* 0x144 */
typedef union tagCfgWinXlatEn
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_win0_xlat_en      : 1   ; /* [0] 窗口0地址转换使能 */
        unsigned int    cfg_win1_xlat_en      : 1   ; /* [1] 窗口1地址转换使能 */
        unsigned int    cfg_win2_xlat_en      : 1   ; /* [2] 窗口2地址转换使能 */
        unsigned int    cfg_win3_xlat_en      : 1   ; /* [3] 窗口3地址转换使能 */
        unsigned int    cfg_win4_xlat_en      : 1   ; /* [4] 窗口4地址转换使能 */
        unsigned int    cfg_win5_xlat_en      : 1   ; /* [5] 窗口5地址转换使能 */
        unsigned int    cfg_win6_xlat_en      : 1   ; /* [6] 窗口6地址转换使能 */
        unsigned int    cfg_win7_xlat_en      : 1   ; /* [7] 窗口7地址转换使能 */
        unsigned int    cfg_win8_xlat_en      : 1   ; /* [8] 窗口8地址转换使能 */
        unsigned int    cfg_win9_xlat_en      : 1   ; /* [9] 窗口9地址转换使能 */
        unsigned int    cfg_win10_xlat_en     : 1   ; /* [10] 窗口10地址转换使能 */
        unsigned int    cfg_win11_xlat_en     : 1   ; /* [11] 窗口11地址转换使能 */
        unsigned int    cfg_win12_xlat_en     : 1   ; /* [12] 窗口12地址转换使能 */
        unsigned int    cfg_win13_xlat_en     : 1   ; /* [13] 窗口13地址转换使能 */
        unsigned int    cfg_win14_xlat_en     : 1   ; /* [14] 窗口14地址转换使能 */
        unsigned int    cfg_win15_xlat_en     : 1   ; /* [15] 窗口15地址转换使能 */
        unsigned int    Reserved_17           : 16  ; /* [31..16] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_win_xlat_en_u;

/* Define the union pcie_mul_cfg_mcast_cmd_timeout_u */
/* 多播命令超时计数器 */
/* 0x148 */
typedef union tagCfgMcastCmdTimeout
{
    /* Define the struct bits */
    struct
    {
        unsigned int    cfg_mcast_cmd_timeout  : 10  ; /* [9..0] 发出multicast命令，但是没有得到回应的超时时间设置。 */
        unsigned int    Reserved_18           : 22  ; /* [31..10] 保留位 */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_mcast_cmd_timeout_u;

/* Define the union pcie_mul_cfg_int_status_u */
/* 中断状态寄存器 */
/* 0x14C */
typedef union tagCfgIntStatus
{
    /* Define the struct bits */
    struct
    {
        unsigned int    timeout_int           : 1   ; /* [0] 命令超时中断寄存器 */
        unsigned int    ecc_err1_int          : 1   ; /* [1] ECC 1bit错误中断寄存器 */
        unsigned int    ecc_err2_int          : 1   ; /* [2] ECC 2bit错误中断寄存器 */
        unsigned int    Reserved_19           : 29  ; /* [31..3]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_int_status_u;

/* Define the union pcie_mul_cfg_inject_ecc_err_u */
/* ECC错误注入使能 */
/* 0x150 */
typedef union tagCfgInjectEccErr
{
    /* Define the struct bits */
    struct
    {
        unsigned int    ecc_err_inject_en     : 1   ; /* [0] ECC错误注入使能 */
        unsigned int    Reserved_20           : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} pcie_mul_cfg_inject_ecc_err_u;

/******************************************************************************/
/*                      PhosphorV660 NTB_iEP_CFG 寄存器定义                   */
/******************************************************************************/
#define NTB_IEP_CFG_DEVICE_VENDOR_ID_REG  (0x0)  /* 设备ID和厂商ID */
#define NTB_IEP_CFG_PCISTS_PCICMD_REG  (0x4)  /* 控制和状况寄存器 */
#define NTB_IEP_CFG_CCR_RID_REG      (0x8)  /* 类代码和修订版ID */
#define NTB_IEP_CFG_BIST_TYPE_REG    (0xC)  /* BIST，配置头格式寄存器 */
#define NTB_IEP_CFG_PBAR01_BASE_LOWER_REG  (0x10)  /* 基地址寄存器01低32位 */
#define NTB_IEP_CFG_PBAR01_BASE_UPPER_REG  (0x14)  /* 基地址寄存器01高32位 */
#define NTB_IEP_CFG_PBAR23_BASE_LOWER_REG  (0x18)  /* 基地址寄存器23低32位 */
#define NTB_IEP_CFG_PBAR23_BASE_UPPER_REG  (0x1C)  /* 基地址寄存器23低32位 */
#define NTB_IEP_CFG_PBAR45_BASE_LOWER_REG  (0x20)  /* 基地址寄存器45高32位 */
#define NTB_IEP_CFG_PBAR45_BASE_UPPER_REG  (0x24)  /* 基地址寄存器45高32位 */
#define NTB_IEP_CFG_SUBSYSTEMID_REG  (0x2C)  /* 子系统Vendor ID */
#define NTB_IEP_CFG_INTERRUPT_REG    (0x3C)  /* 中断引脚，中断线 */
#define NTB_IEP_CFG_MSI_LOWER32_BITADDRESS_REG  (0x54)  /* MSI低32位地址寄存器 */
#define NTB_IEP_CFG_MSI_UPPER32_BIT_ADDRESS_REG  (0x58)  /* MSI高32位地址寄存器 */
#define NTB_IEP_CFG_LINK_CAPABILITY_REG  (0x7C)  /* 链路功能寄存器 */
#define NTB_IEP_CFG_AER_CAP_HEADER_REG  (0x100)  /* AER功能寄存器头 */
#define NTB_IEP_CFG_HEADER_LOG_REGISTERS_1_REG  (0x11C)  /* 头日志寄存器1 */
#define NTB_IEP_CFG_HEADER_LOG_REGISTERS_2_REG  (0x120)  /* 头日志寄存器2 */
#define NTB_IEP_CFG_HEADER_LOG_REGISTERS_3_REG  (0x124)  /* 头日志寄存器3 */
#define NTB_IEP_CFG_HEADER_LOG_REGISTERS_4_REG  (0x128)  /* 头日志寄存器4 */
#define NTB_IEP_CFG_TLP_PREFIX_LOGREGISTERS_1_REG  (0x130)  /* TLP前缀日志寄存器1 */
#define NTB_IEP_CFG_TLP_PREFIX_LOGREGISTERS_2_REG  (0x134)  /* TLP前缀日志寄存器2 */
#define NTB_IEP_CFG_TLP_PREFIX_LOGREGISTERS_3_REG  (0x138)  /* TLP前缀日志寄存器3 */
#define NTB_IEP_CFG_TLP_PREFIX_LOGREGISTERS_4_REG  (0x13C)  /* TLP前缀日志寄存器4 */
#define NTB_IEP_CFG_NTB_IEP_CONFIG_SPACE_LOWER_REG  (0x700)  /* iEP配置空间低32位地址 */
#define NTB_IEP_CFG_NTB_IEP_CONFIG_SPACE_UPPER_REG  (0x704)  /* iEP配置空间低32位地址 */
#define NTB_IEP_BAR01_CTRL_REG       (0x708)
#define NTB_IEP_BAR23_CTRL_REG       (0x70c)
#define NTB_IEP_BAR45_CTRL_REG       (0x710)
#define NTB_IEP_CFG_DBI_RO_WR_EN_REG  (0x714)  /* 写Read-Only控制寄存器 */
#define NTB_IEP_CFG_AXI_ERR_RESPONSE_REG  (0x718)  /* AXI总线ErrorResponse控制寄存器 */
#define NTB_IEP_CFG_NTB_OUTBOUND_FLOW_REG  (0x71C)  /* NTB Outbound流量统计状态寄存器 */
#define NTB_IEP_CFG_NTB_HDR_CTRL_STATUS_REG  (0x720)  /* NTB Header Ctrl Status */
#define NTB_IEP_CFG_NTB_HDR_STATUS0_REG  (0x724)  /* NTB TLP包头状态寄存器0 */
#define NTB_IEP_CFG_NTB_HDR_STATUS1_REG  (0x728)  /* NTB TLP包头状态寄存器1 */
#define NTB_IEP_CFG_NTB_HDR_STATUS2_REG  (0x72C)  /* NTB TLP包头状态寄存器2 */
#define NTB_IEP_CFG_NTB_HDR_STATUS3_REG  (0x730)  /* NTB TLP包头状态寄存器3 */
#define NTB_IEP_CFG_DEV_TYPE_SWITCH_REG  (0x738)  /* 设备类型切换寄存器 */
// define the union ntb_iep_device_vendor_id_u
// 设备id和厂商id
// 0x0
typedef union tagdevicevendorid
{
    // define the struct bits
    struct
    {
        unsigned int    vendor_id             : 16  ; // [15..0] 华为分配到的vendor id为0x19e5
        unsigned int    device_id             : 16  ; // [31..16] 设备id，以项目名作为device id号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_device_vendor_id_u;

// define the union ntb_iep_pcists_pcicmd_u
// 控制和状况寄存器
// 0x4
typedef union tagpcistspcicmd
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_io_space_en       : 1   ; // [0] io地址空间解码器允许，ntb模式下不支持io访问，硬连线到0
        unsigned int    cfg_mem_space_en      : 1   ; // [1] 存储器地址空间解码器使能，在ntb模式下，硬连线到1
        unsigned int    cfg_bus_master_en     : 1   ; // [2] 总线主控器允许;
        unsigned int    special_cycle_en      : 1   ; // [3] pcie不支持，保留
        unsigned int    mem_wr_and_invalid    : 1   ; // [4] pcie不支持，保留
        unsigned int    vga_palette_snoop     : 1   ; // [5] pcie不支持，保留
        unsigned int    parity_error_response  : 1   ; // [6] 奇偶校验错误响应，用于控制将master的数据奇偶校验错误记录在status寄存器，当该bit为0时，status寄存器不会记录该错误。
        unsigned int    idsel_stepping_wait_cycle_ctrl  : 1   ; // [7] pcie不支持，保留
        unsigned int    cfg_reg_seren         : 1   ; // [8] 用于控制设备将non-fatal和fatal错误报告给rc。
        unsigned int    fast_back_to_back_trans_en  : 1   ; // [9] pcie不支持，保留
        unsigned int    cfg_int_disable       : 1   ; // [10] 中断禁用，控制pcie设备产生intx中断消息的能力
        unsigned int    reserved_2            : 8   ; // [18..11] 保留位
        unsigned int    int_msg_pending       : 1   ; // [19] 中断状况，表示该功能有个未完成的intx中断请求
        unsigned int    cap_list              : 1   ; // [20] 功能列表.该比特为1表示存在扩展功能列表。
        unsigned int    pci_bus_66mhz_cap     : 1   ; // [21] pcie不支持，保留
        unsigned int    reserved_1            : 1   ; // [22] 保留
        unsigned int    fast_back_to_back_trans_cap  : 1   ; // [23] pcie不支持，硬连线到0
        unsigned int    master_data_perr      : 1   ; // [24] master data parity errorz，当command寄存器的的parity error response 位为1时，该比特会在以下两种情况下置起：1. 接收到了中毒的完成报文;
        unsigned int    reserved_0            : 2   ; // [26..25] pcie不支持，保留
        unsigned int    signaled_target_abort  : 1   ; // [27] 当完成者返回的完成状况为comleter abort时，会将该位置起。
        unsigned int    rcvd_target_abt       : 1   ; // [28] received tarted abort，当一个请求者接收到完成者返回的完成状况为completion abort时，会将该位置起。
        unsigned int    rcvd_master_abt       : 1   ; // [29] received master abort，当一个请求者接收到完成者返回的完成状况为unsupported request时，会将该位置起。
        unsigned int    rcvd_serr             : 1   ; // [30] signaled system error,当该功能发送err_fatal或者err_nonfatal消息，并且command寄存器中的seer_enable为1时，该位就会置起。
        unsigned int    detected_perr         : 1   ; // [31] detected parrity error,不论command寄存器的bit6(即parity error response位)的状况如何，只要该功能收到一个中毒tlp，该比特就会被置起。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_pcists_pcicmd_u;

// define the union ntb_iep_ccr_rid_u
// 类代码和修订版id
// 0x8
typedef union tagccrrid
{
    // define the struct bits
    struct
    {
        unsigned int    revision_id           : 8   ; // [7..0] 修订版id
        unsigned int    reserved_3            : 8   ; // [15..8] 保留
        unsigned int    cfg_sub_class         : 8   ; // [23..16] 子类代码，在ntb模式下，该寄存器的值硬连线到0x80h表示“其它类型桥设备”
        unsigned int    cfg_base_class        : 8   ; // [31..24] 类代码，桥设备，硬连线到0x06
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_ccr_rid_u;

// define the union ntb_iep_bist_type_u
// bist，配置头格式寄存器
// 0xc
typedef union tagbisttype
{
    // define the struct bits
    struct
    {
        unsigned int    cache_line_size       : 8   ; // [7..0] 高速缓存行大小。
        unsigned int    primary_latency_timer  : 8   ; // [15..8] 主控制器延时定时器寄存器，该寄存器不影响pcie的功能，硬连线为0
        unsigned int    cfg_hdr_type          : 7   ; // [22..16] 配置头的格式，type0
        unsigned int    multi_function_device  : 1   ; // [23] 多功能设备，ntb是0
        unsigned int    bist                  : 8   ; // [31..24] bist寄存器，控制器不支持，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_bist_type_u;

// define the union ntb_iep_pbar01_base_lower_u
// 基地址寄存器01低32位
// 0x10
typedef union tagpbar01baselower
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_iep_bar0_io       : 1   ; // [0] 0 =bar01 is a memory bar1 =bar01 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    cfg_iep_bar0_type     : 2   ; // [2..1] 00 =32-bit bar10 =64-bit barntb只支持64位bar寄存器
        unsigned int    cfg_iep_bar0_pref     : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchablentb的bar01空间为不可预取
        unsigned int    reserved_4            : 12  ; // [15..4] 保留位
        unsigned int    cfg_iep_bar01_low     : 16  ; // [31..16] bar01基地址低位，bar01的最低可写位是bit 17，因此窗口大小为64kb
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_pbar01_base_lower_u;

// define the union ntb_iep_pbar23_base_lower_u
// 基地址寄存器23低32位
// 0x18
typedef union tagpbar23baselower
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_iep_bar23_io      : 1   ; // [0] 0 =bar0 is a memory bar1 =bar0 is an i/o barntb支持memory空间，不支持io空间
        unsigned int    cfg_iep_bar23_type    : 2   ; // [2..1] 00 =32-bit bar10 =64-bit barntb只支持64位bar寄存器
        unsigned int    cfg_iep_bar23_pref    : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_5            : 8   ; // [11..4] 保留位
        unsigned int    cfg_iep_bar23_low     : 20  ; // [31..12] bar23基地址低位，bar23默认最低可写位是比特12，因此默认窗口大小为4kb。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_pbar23_base_lower_u;

// define the union ntb_iep_pbar45_base_lower_u
// 基地址寄存器45高32位
// 0x20
typedef union tagpbar45baselower
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_iep_bar45_io      : 1   ; // [0] 0 =bar0 is a memory bar1 =bar0 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    cfg_iep_bar45_type    : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    cfg_iep_bar45_pref    : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_6            : 8   ; // [11..4] 保留位
        unsigned int    cfg_iep_bar45_low     : 20  ; // [31..12] bar45基地址低位，bar4默认的最低可写位是比特12，因此窗口大小为4kb。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_pbar45_base_lower_u;

// define the union ntb_iep_subsystemid_u
// 子系统vendor id
// 0x2c
typedef union tagsubsystemid
{
    // define the struct bits
    struct
    {
        unsigned int    subsystem_vendor_id   : 16  ; // [15..0] 子系统vendor id
        unsigned int    subsystem_device_id   : 16  ; // [31..16] 子系统id
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_subsystemid_u;

// define the union ntb_iep_interrupt_u
// 中断引脚，中断线
// 0x3c
typedef union taginterrupt
{
    // define the struct bits
    struct
    {
        unsigned int    int_line_reg          : 8   ; // [7..0] 中断线寄存器，该寄存器保留仅仅是为了和pci兼容
        unsigned int    cfg_int_pin           : 8   ; // [15..8] 中断引脚寄存器，inta用来作为中断引脚
        unsigned int    min_gnt               : 8   ; // [23..16] pcie不支持，硬连线为0
        unsigned int    max_lat               : 8   ; // [31..24] pcie不支持，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_interrupt_u;

// define the union ntb_iep_msi_lower32_bitaddress_u
// msi低32位地址寄存器
// 0x54
typedef union tagmsilower32bitaddress
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_9            : 2   ; // [1..0] 保留
        unsigned int    iep_msi_addr_low32    : 30  ; // [31..2] msi低32位地址，dw对齐
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_msi_lower32_bitaddress_u;

// define the union ntb_iep_link_capability_u
// 链路功能寄存器
// 0x7c
typedef union taglinkcapability
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_pcie_max_link_speed  : 4   ; // [3..0] 支持的最大链接速度4'b0001 : 2.5gt/s4'b0010 : 5gt/s4'b0011 : 8gt/s其它值不支持
        unsigned int    cfg_pcie_max_link_width  : 6   ; // [9..4] 支持最大链路宽度，支持最大x8 lane
        unsigned int    active_state_power_management  : 2   ; // [11..10] 活动状态电源管理，ntb不支持
        unsigned int    l0s_exit_latency      : 3   ; // [14..12] 保留，ntb不支持
        unsigned int    l1_exit_latency       : 3   ; // [17..15] 保留，ntb不支持
        unsigned int    clock_power_management  : 1   ; // [18] 保留，ntb不支持
        unsigned int    surprise_down_error_report_cap  : 1   ; // [19] 保留,ntb不支持
        unsigned int    data_link_layer_active_report_cap  : 1   ; // [20] 保留,ntb不支持
        unsigned int    link_bandwidth_noti_cap  : 1   ; // [21] 保留,ntb不支持
        unsigned int    aspm_option_compliance  : 1   ; // [22] 根据pcie spec，固定为1
        unsigned int    reserved_11           : 1   ; // [23] 保留位
        unsigned int    cfg_pcie_port_num     : 8   ; // [31..24] ntb端口数量
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_link_capability_u;

// define the union ntb_iep_aer_cap_header_u
// aer功能寄存器头
// 0x100
typedef union tagaercapheader
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_extended_capability_id  : 16  ; // [15..0] pcie功能id，对于aer来说，该id为0x0001h
        unsigned int    capability_version    : 4   ; // [19..16] 功能版本号
        unsigned int    next_capability_offset  : 12  ; // [31..20] 下一个功能地址偏移
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_aer_cap_header_u;

typedef union tagiepntbiepbar01ctrl
{
    // define the struct bits
    struct
    {
        unsigned int    bar01_type            : 5   ; // [4..0] 当地址与bar01的基地址匹配时，tlp头的type字段将使用该字段
        unsigned int    bar01_tc              : 3   ; // [7..5] 当地址与bar01的基地址匹配时，tlp头的tc字段将使用该字段
        unsigned int    bar01_td              : 1   ; // [8] 当地址与bar01的基地址匹配时，tlp头的td字段将使用该字段
        unsigned int    bar01_attr            : 2   ; // [10..9] 当地址与bar01的基地址匹配时，tlp头的attr字段将使用该字段
        unsigned int    reserved_258          : 7   ; // [17..11] 保留位
        unsigned int    bar01_match_en        : 1   ; // [18] 当该比特置1时，local cpu发出去的与bar01基地址匹配的tlp头的相应字段将使用本寄存器定义的字段
        unsigned int    reserved_257          : 13  ; // [31..19] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_bar01_ctrl_u;

// define the union ntb_meep_ntb_iep_bar23_ctrl_u
// 映射到bar23空间的tlp头控制寄存器
// 0x970c
typedef union tagiepntbiepbar23ctrl
{
    // define the struct bits
    struct
    {
        unsigned int    bar23_type            : 5   ; // [4..0] 当地址与bar23的基地址匹配时，tlp头的type字段将使用该字段
        unsigned int    bar23_tc              : 3   ; // [7..5] 当地址与bar23的基地址匹配时，tlp头的tc字段将使用该字段
        unsigned int    bar23_td              : 1   ; // [8] 当地址与bar23的基地址匹配时，tlp头的td字段将使用该字段
        unsigned int    bar23_attr            : 2   ; // [10..9] 当地址与bar23的基地址匹配时，tlp头的attr字段将使用该字段
        unsigned int    reserved_260          : 7   ; // [17..11] 保留位
        unsigned int    bar23_match_en        : 1   ; // [18] 当该比特置1时，local cpu发出去的与bar23基地址匹配的tlp头的相应字段将使用本寄存器定义的字段
        unsigned int    reserved_259          : 13  ; // [31..19] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_bar23_ctrl_u;

// define the union ntb_meep_ntb_iep_bar45_ctrl_u
// 映射到bar45空间的tlp头控制寄存器
// 0x9710
typedef union tagiepntbiepbar45ctrl
{
    // define the struct bits
    struct
    {
        unsigned int    bar45_type            : 5   ; // [4..0] 当地址与bar45的基地址匹配时，tlp头的type字段将使用该字段
        unsigned int    bar45_tc              : 3   ; // [7..5] 当地址与bar45的基地址匹配时，tlp头的tc字段将使用该字段
        unsigned int    bar45_td              : 1   ; // [8] 当地址与bar45的基地址匹配时，tlp头的td字段将使用该字段
        unsigned int    bar45_attr            : 2   ; // [10..9] 当地址与bar45的基地址匹配时，tlp头的attr字段将使用该字段
        unsigned int    reserved_262          : 7   ; // [17..11] 保留位
        unsigned int    bar45_match_en        : 1   ; // [18] 当该比特置1时，local cpu发出去的与bar45基地址匹配的tlp头的相应字段将使用本寄存器定义的字段
        unsigned int    reserved_261          : 13  ; // [31..19] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_bar45_ctrl_u;

// define the union ntb_iep_dbi_ro_wr_en_u
// 写read-only控制寄存器
// 0x714
typedef union tagdbirowren
{
    // define the struct bits
    struct
    {
        unsigned int    dbi_ro_wr_en          : 1   ; // [0] 写read-only寄存器使能控制信号
        unsigned int    reserved_17           : 31  ; // [31..1] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_dbi_ro_wr_en_u;

// define the union ntb_iep_axi_err_response_u
// axi总线errorresponse控制寄存器
// 0x718
typedef union tagaxierrresponse
{
    // define the struct bits
    struct
    {
        unsigned int    err_resp_mode         : 4   ; // [3..0] axi总线错误response控制信号
        unsigned int    reserved_19           : 28  ; // [31..4] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_axi_err_response_u;

// define the union ntb_iep_ntb_outbound_flow_u
// ntb outbound流量统计状态寄存器
// 0x71c
typedef union tagntboutboundflow
{
    // define the struct bits
    struct
    {
        unsigned int    xali0_flow_cnt        : 16  ; // [15..0] 统计周期内，xali0口上的流量(单位为字节)
        unsigned int    xali1_flow_cnt        : 16  ; // [31..16] 统计周期内，xali1口上的流量(单位为字节)
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_ntb_outbound_flow_u;

// define the union ntb_iep_ntb_hdr_ctrl_status_u
// ntb header ctrl status
// 0x720
typedef union tagntbhdrctrlstatus
{
    // define the struct bits
    struct
    {
        unsigned int    client0_tlp_hv        : 1   ; // [0]
        unsigned int    client0_tlp_dv        : 1   ; // [1]
        unsigned int    client0_tlp_eot       : 1   ; // [2]
        unsigned int    ntb_xali0_halt        : 1   ; // [3] axi桥xali0上接口控制信号
        unsigned int    client0_tlp_hv_out    : 1   ; // [4]
        unsigned int    client0_tlp_dv_out    : 1   ; // [5]
        unsigned int    client0_tlp_eot_out   : 1   ; // [6]
        unsigned int    xadm_xali0_halt       : 1   ; // [7] xadm的xali0上接口控制信号
        unsigned int    client1_tlp_hv        : 1   ; // [8]
        unsigned int    client1_tlp_dv        : 1   ; // [9]
        unsigned int    client1_tlp_eot       : 1   ; // [10]
        unsigned int    ntb_xali1_halt        : 1   ; // [11] axi桥xali1上接口控制信号
        unsigned int    client1_tlp_hv_out    : 1   ; // [12]
        unsigned int    client1_tlp_dv_out    : 1   ; // [13]
        unsigned int    client1_tlp_eot_out   : 1   ; // [14]
        unsigned int    xadm_xali1_halt       : 1   ; // [15] xadm的xali0上接口控制信号
        unsigned int    ntb_hdr_ctrl          : 2   ; // [17..16] 选择寄存器0x0724~0x0730输出的头字段2'b00 : 输出axi桥xali0上头字段2'b01 : 输出xadm的xali0上的头字段2'b10 ：输出axi桥xali1上头字段2'b11 ：xadm的xali0上头字段
        unsigned int    reserved_20           : 14  ; // [31..18] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_ntb_hdr_ctrl_status_u;

// define the union ntb_iep_dev_type_switch_u
// 设备类型切换寄存器
// 0x734
typedef union tagdevtypeswitch
{
    // define the struct bits
    struct
    {
        unsigned int    dev_type_sw           : 1   ; // [0] 在ntb/ntb模式下，通过写该寄存器，是的在training过程中切换到rc的device重新切换成ep
        unsigned int    reserved_21           : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_iep_dev_type_switch_u;

#define NTB_MIEP_PBAR23XLAT_LOWER_REG  (0x0)  /* PBAR23地址转换寄存器低32位 */
#define NTB_MIEP_PBAR23XLAT_UPPER_REG  (0x4)  /* PBAR23地址转换寄存器高32位 */
#define NTB_MIEP_PBAR45XLAT_LOWER_REG  (0x8)  /* PBAR45地址转换寄存器低32位 */
#define NTB_MIEP_PBAR45XLAT_UPPER_REG  (0xC)  /* PBAR45地址转换寄存器高32位 */
#define NTB_MIEP_PBAR23LMT_LOWER_REG  (0x10)  /* PBAR23的limit寄存器低32位 */
#define NTB_MIEP_PBAR23LMT_UPPER_REG  (0x14)  /* PBAR23的limit寄存器高32位 */
#define NTB_MIEP_PBAR45LMT_LOWER_REG  (0x18)  /* PBAR45的limit寄存器低32位 */
#define NTB_MIEP_PBAR45LMT_UPPER_REG  (0x1C)  /* PBAR45的limit寄存器高32位 */
#define NTB_MIEP_PDOORBELL_REG   (0x20)  /* Primary侧的门铃寄存器 */
#define NTB_MIEP_PDOORBELL_MASK_REG  (0x24)  /* Primary侧的门铃屏蔽寄存器 */
#define NTB_MIEP_B2B_BAR01XLAT_LOWER_REG  (0x28)  /* B2B模式PBAR01地址转换寄存器低32位 */
#define NTB_MIEP_B2B_BAR01XLAT_UPPER_REG  (0x2C)  /* B2B模式PBAR01地址转换寄存器高32位 */
#define NTB_MIEP_B2BDOORBELL_REG  (0x30)  /* B2B模式下的DOORBELL寄存器 */
#define NTB_MIEP_SPAD0_REG       (0x38)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD1_REG       (0x3C)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD2_REG       (0x40)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD3_REG       (0x44)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD4_REG       (0x48)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD5_REG       (0x4C)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD6_REG       (0x50)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD7_REG       (0x54)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD8_REG       (0x58)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD9_REG       (0x5C)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD10_REG      (0x60)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD11_REG      (0x64)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD12_REG      (0x68)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD13_REG      (0x6C)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD14_REG      (0x70)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD15_REG      (0x74)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD16_REG      (0x78)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD17_REG      (0x7C)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD18_REG      (0x80)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD19_REG      (0x84)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD20_REG      (0x88)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD21_REG      (0x8C)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD22_REG      (0x90)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD23_REG      (0x94)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD24_REG      (0x98)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD25_REG      (0x9C)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD26_REG      (0xA0)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD27_REG      (0xA4)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD28_REG      (0xA8)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD29_REG      (0xAC)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD30_REG      (0xB0)  /* 便签本寄存器 */
#define NTB_MIEP_SPAD31_REG      (0xB4)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD0_REG    (0xB8)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD1_REG    (0xBC)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD2_REG    (0xC0)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD3_REG    (0xC4)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD4_REG    (0xC8)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD5_REG    (0xCC)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD6_REG    (0xD0)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD7_REG    (0xD4)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD8_REG    (0xD8)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD9_REG    (0xDC)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD10_REG   (0xE0)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD11_REG   (0xE4)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD12_REG   (0xE8)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD13_REG   (0xEC)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD14_REG   (0xF0)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD15_REG   (0xF4)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD16_REG   (0xF8)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD17_REG   (0xFC)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD18_REG   (0x100)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD19_REG   (0x104)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD20_REG   (0x108)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD21_REG   (0x10C)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD22_REG   (0x110)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD23_REG   (0x114)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD24_REG   (0x118)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD25_REG   (0x11C)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD26_REG   (0x120)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD27_REG   (0x124)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD28_REG   (0x128)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD29_REG   (0x12C)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD30_REG   (0x130)  /* 便签本寄存器 */
#define NTB_MIEP_B2BSPAD31_REG   (0x134)  /* 便签本寄存器 */
#define NTB_MIEP_PPD_REG         (0x138)  /* 端口定义寄存器 */
#define NTB_MIEP_P_DEVICE_VENDOR_ID_REG  (0x1000)  /* 设备ID和厂商ID */
#define NTB_MIEP_P_PCISTS_PCICMD_REG  (0x1004)  /* 控制和状况寄存器 */
#define NTB_MIEP_P_CCR_RID_REG   (0x1008)  /* 类代码和修订版ID */
#define NTB_MIEP_P_BIST_TYPE_REG  (0x100C)  /* BIST，配置头格式寄存器 */
#define NTB_MIEP_PBAR01_BASE_LOWER_REG  (0x1010)  /* 基地址寄存器01低32位 */
#define NTB_MIEP_PBAR01_BASE_UPPER_REG  (0x1014)  /* 基地址寄存器01高32位 */
#define NTB_MIEP_PBAR23_BASE_LOWER_REG  (0x1018)  /* 基地址寄存器23低32位 */
#define NTB_MIEP_PBAR23_BASE_UPPER_REG  (0x101C)  /* 基地址寄存器23低32位 */
#define NTB_MIEP_PBAR45_BASE_LOWER_REG  (0x1020)  /* 基地址寄存器45高32位 */
#define NTB_MIEP_PBAR45_BASE_UPPER_REG  (0x1024)  /* 基地址寄存器45高32位 */
#define NTB_MIEP_P_SUBSYSTEMID_REG  (0x102C)  /* 子系统Vendor ID */
#define NTB_MIEP_P_INTERRUPT_REG  (0x103C)  /* 中断引脚，中断线 */
#define NTB_MIEP_P_MSI_LOWER32_BITADDRESS_REG  (0x1054)  /* MSI低32位地址寄存器 */
#define NTB_MIEP_P_MSI_UPPER32_BIT_ADDRESS_REG  (0x1058)  /* MSI高32位地址寄存器 */
#define NTB_MIEP_P_LINK_CAPABILITY_REG  (0x107C)  /* 链路功能寄存器 */
#define NTB_MIEP_P_AER_CAP_HEADER_REG  (0x1100)  /* AER功能寄存器头 */
#define NTB_MIEP_P_HEADER_LOG_REGISTERS_1_REG  (0x111C)  /* 头日志寄存器1 */
#define NTB_MIEP_P_HEADER_LOG_REGISTERS_2_REG  (0x1120)  /* 头日志寄存器2 */
#define NTB_MIEP_P_HEADER_LOG_REGISTERS_3_REG  (0x1124)  /* 头日志寄存器3 */
#define NTB_MIEP_P_HEADER_LOG_REGISTERS_4_REG  (0x1128)  /* 头日志寄存器4 */
#define NTB_MIEP_P_TLP_PREFIX_LOGREGISTERS_1_REG  (0x1130)  /* TLP前缀日志寄存器1 */
#define NTB_MIEP_P_TLP_PREFIX_LOGREGISTERS_2_REG  (0x1134)  /* TLP前缀日志寄存器2 */
#define NTB_MIEP_P_TLP_PREFIX_LOGREGISTERS_3_REG  (0x1138)  /* TLP前缀日志寄存器3 */
#define NTB_MIEP_P_TLP_PREFIX_LOGREGISTERS_4_REG  (0x113C)  /* TLP前缀日志寄存器4 */
#define NTB_MIEP_P_NTB_IEP_CONFIG_SPACE_LOWER_REG  (0x1700)  /* iEP配置空间低32位地址 */
#define NTB_MIEP_P_NTB_IEP_CONFIG_SPACE_UPPER_REG  (0x1704)  /* iEP配置空间低32位地址 */
#define NTB_MIEP_NTB_OUTBOUND_FLOW_REG  (0x171C)  /* NTB Outbound流量统计状态寄存器 */
#define NTB_MIEP_NTB_HDR_CTRL_STATUS_REG  (0x1720)  /* NTB Header Ctrl Status */
#define NTB_MIEP_NTB_HDR_STATUS0_REG  (0x1724)  /* NTB TLP包头状态寄存器0 */
#define NTB_MIEP_NTB_HDR_STATUS1_REG  (0x1728)  /* NTB TLP包头状态寄存器1 */
#define NTB_MIEP_NTB_HDR_STATUS2_REG  (0x172C)  /* NTB TLP包头状态寄存器2 */
#define NTB_MIEP_NTB_HDR_STATUS3_REG  (0x1730)  /* NTB TLP包头状态寄存器3 */
#define NTB_MIEP_DEV_TYPE_SWITCH_REG  (0x1734)  /* 设备类型切换寄存器 */
#define NTB_MIEP_SBAR23XLAT_LOWER_REG  (0x8000)  /* SBAR23地址转换寄存器低32位 */
#define NTB_MIEP_SBAR23XLAT_UPPER_REG  (0x8004)  /* SBAR23地址转换寄存器高32位 */
#define NTB_MIEP_SBAR45XLAT_LOWER_REG  (0x8008)  /* SBAR45地址转换寄存器低32位 */
#define NTB_MIEP_SBAR45XLAT_UPPER_REG  (0x800C)  /* SBAR45地址转换寄存器高32位 */
#define NTB_MIEP_SBAR23LMT_LOWER_REG  (0x8010)  /* SBAR23的limit寄存器低32位 */
#define NTB_MIEP_SBAR23LMT_UPPER_REG  (0x8014)  /* SBAR23的limit寄存器高32位 */
#define NTB_MIEP_SBAR45LMT_LOWER_REG  (0x8018)  /* SBAR45的limit寄存器低32位 */
#define NTB_MIEP_SBAR45LMT_UPPER_REG  (0x801C)  /* SBAR45的limit寄存器高32位 */
#define NTB_MIEP_SDOORBELL_REG   (0x8020)  /* Secondary侧的门铃寄存器 */
#define NTB_MIEP_SDOORBELL_MASK_REG  (0x8024)  /* Secondary侧的门铃屏蔽寄存器 */
#define NTB_MIEP_PCI_CFG_HDR0_REG  (0x9000)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_CFG_HDR1_REG  (0x9004)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_CFG_HDR2_REG  (0x9008)  /* 类代码和修订版ID */
#define NTB_MIEP_PCI_CFG_HDR3_REG  (0x900C)  /* BIST，配置头格式寄存器 */
#define NTB_MIEP_PCI_CFG_HDR4_REG  (0x9010)  /* 基地址寄存器01低32位 */
#define NTB_MIEP_PCI_CFG_HDR5_REG  (0x9014)  /* 基地址寄存器01高32位 */
#define NTB_MIEP_PCI_CFG_HDR6_REG  (0x9018)  /* 基地址寄存器23低32位 */
#define NTB_MIEP_PCI_CFG_HDR7_REG  (0x901C)  /* 基地址寄存器23高32位 */
#define NTB_MIEP_PCI_CFG_HDR8_REG  (0x9020)  /* 基地址寄存器45高32位 */
#define NTB_MIEP_PCI_CFG_HDR9_REG  (0x9024)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_CFG_HDR11_REG  (0x902C)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_CFG_HDR12_REG  (0x9030)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_CFG_HDR13_REG  (0x9034)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_CFG_HDR14_REG  (0x9038)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_CFG_HDR15_REG  (0x903C)  /* PCI兼容配置头空间寄存器 */
#define NTB_MIEP_PCI_MSI_CAP0_REG  (0x9050)  /* PCI MSI功能寄存器 */
#define NTB_MIEP_PCI_MSI_CAP1_REG  (0x9054)  /* PCI MSI功能寄存器 */
#define NTB_MIEP_PCI_MSI_CAP2_REG  (0x9058)  /* PCI MSI功能寄存器 */
#define NTB_MIEP_PCI_MSI_CAP3_REG  (0x905C)  /* PCI MSI功能寄存器 */
#define NTB_MIEP_PCI_MSI_CAP4_REG  (0x60)  /* PCI MSI功能寄存器 */
#define NTB_MIEP_PCI_MSI_CAP5_REG  (0x64)  /* PCI MSI功能寄存器 */
#define NTB_MIEP_PCIE_CAP0_REG   (0x9070)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP1_REG   (0x9074)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP2_REG   (0x9078)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP3_REG   (0x907C)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP4_REG   (0x9080)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP5_REG   (0x9084)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP6_REG   (0x9088)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP7_REG   (0x908C)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP8_REG   (0x9090)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP9_REG   (0x9094)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP10_REG  (0x9098)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP11_REG  (0x909C)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP12_REG  (0x90A0)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP13_REG  (0x90B0)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP14_REG  (0x90B4)  /* PCI Express功能寄存器 */
#define NTB_MIEP_PCIE_CAP15_REG  (0x90B8)  /* PCI Express功能寄存器 */
#define NTB_MIEP_AER_CAP0_REG    (0x9100)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP1_REG    (0x9104)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP2_REG    (0x9108)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP3_REG    (0x910C)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP4_REG    (0x9110)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP5_REG    (0x9114)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP7_REG    (0x911C)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP8_REG    (0x9120)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP9_REG    (0x9124)  /* 高级错误报告寄存器 */
#define NTB_MIEP_AER_CAP10_REG   (0x9128)  /* 高级错误报告寄存器 */
#define NTB_MIEP_VC_CAP0_REG     (0x9148)  /* 虚拟通道功能寄存器 */
#define NTB_MIEP_VC_CAP1_REG     (0x914C)  /* 虚拟通道功能寄存器 */
#define NTB_MIEP_VC_CAP2_REG     (0x9150)  /* 虚拟通道功能寄存器 */
#define NTB_MIEP_VC_CAP3_REG     (0x9154)  /* 虚拟通道功能寄存器 */
#define NTB_MIEP_VC_CAP4_REG     (0x9158)  /* 虚拟通道功能寄存器 */
#define NTB_MIEP_VC_CAP5_REG     (0x915C)  /* 虚拟通道功能寄存器 */
#define NTB_MIEP_VC_CAP6_REG     (0x9160)  /* 虚拟通道功能寄存器 */
#define NTB_MIEP_PORT_LOGIC0_REG  (0x9700)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC1_REG  (0x9704)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC2_REG  (0x9708)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC3_REG  (0x970C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC4_REG  (0x9710)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC5_REG  (0x9714)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC6_REG  (0x9718)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC7_REG  (0x971C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC8_REG  (0x9720)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC9_REG  (0x9724)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC10_REG  (0x9728)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC11_REG  (0x972C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC12_REG  (0x9730)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC13_REG  (0x9734)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC14_REG  (0x9738)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC15_REG  (0x973C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC16_REG  (0x9748)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC17_REG  (0x974C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC18_REG  (0x9750)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC22_REG  (0x980C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC23_REG  (0x9810)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC24_REG  (0x9814)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC27_REG  (0x9820)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC28_REG  (0x9824)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC29_REG  (0x9828)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC30_REG  (0x982C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC31_REG  (0x9830)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC32_REG  (0x9834)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC33_REG  (0x9838)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC34_REG  (0x983C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC35_REG  (0x9840)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC36_REG  (0x9844)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC37_REG  (0x9848)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC38_REG  (0x984C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC39_REG  (0x9850)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC40_REG  (0x9854)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC41_REG  (0x9858)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC42_REG  (0x985C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC43_REG  (0x9860)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC44_REG  (0x9864)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC45_REG  (0x9868)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC46_REG  (0x986C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC47_REG  (0x9870)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC48_REG  (0x9874)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC49_REG  (0x9878)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC50_REG  (0x987C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC51_REG  (0x9880)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC52_REG  (0x9884)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC53_REG  (0x9888)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC54_REG  (0x9890)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC55_REG  (0x9894)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC56_REG  (0x9898)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC57_REG  (0x989C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC58_REG  (0x98A4)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC59_REG  (0x98A8)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC60_REG  (0x98AC)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC61_REG  (0x98B8)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC62_REG  (0x98BC)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC63_REG  (0x98D0)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC64_REG  (0x98D8)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC65_REG  (0x98DC)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC66_REG  (0x98E0)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC67_REG  (0x98E4)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC68_REG  (0x98E8)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC69_REG  (0x98FC)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC70_REG  (0x9900)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC71_REG  (0x9904)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC72_REG  (0x9908)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC73_REG  (0x990C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC74_REG  (0x9910)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC75_REG  (0x9914)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC76_REG  (0x9918)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC77_REG  (0x991C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC78_REG  (0x9920)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC79_REG  (0x9978)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC80_REG  (0x997C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC81_REG  (0x9980)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC82_REG  (0x9988)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC83_REG  (0x998C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC84_REG  (0x9998)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC87_REG  (0x99A8)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC88_REG  (0x99AC)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC91_REG  (0x99C8)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC92_REG  (0x99CC)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC93_REG  (0x99D0)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC97_REG  (0x99E0)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC98_REG  (0x99E4)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC99_REG  (0x99E8)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC100_REG  (0x99EC)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC106_REG  (0x9A28)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC112_REG  (0x9A4C)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC113_REG  (0x9A50)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC114_REG  (0x9A54)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC115_REG  (0x9A58)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC118_REG  (0x9A74)  /* 端口逻辑寄存器 */
#define NTB_MIEP_PORT_LOGIC126_REG  (0xB30)  /* 端口逻辑寄存器 */
// define the union ntb_miep_device_vendor_id_u
// 设备id和厂商id
// 0x0
typedef union tagmiepdevicevendorid
{
    // define the struct bits
    struct
    {
        unsigned int    vendor_id             : 16  ; // [15..0] 华为分配到的vendor id为0x19e5
        unsigned int    device_id             : 16  ; // [31..16] 设备id，以项目名作为device id号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_device_vendor_id_u;

// define the union ntb_miep_pcists_pcicmd_u
// 控制和状况寄存器
// 0x4
typedef union tagmieppcistspcicmd
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_io_space_en       : 1   ; // [0] io地址空间解码器允许，ntb模式下不支持io访问，硬连线到0
        unsigned int    cfg_mem_space_en      : 1   ; // [1] 存储器地址空间解码器使能，在ntb模式下，硬连线到1
        unsigned int    cfg_bus_master_en     : 1   ; // [2] 总线主控器允许;
        unsigned int    special_cycle_en      : 1   ; // [3] pcie不支持，保留
        unsigned int    mem_wr_and_invalid    : 1   ; // [4] pcie不支持，保留
        unsigned int    vga_palette_snoop     : 1   ; // [5] pcie不支持，保留
        unsigned int    parity_error_response  : 1   ; // [6] 奇偶校验错误响应，用于控制将master的数据奇偶校验错误记录在status寄存器，当该bit为0时，status寄存器不会记录该错误。
        unsigned int    idsel_stepping_wait_cycle_ctrl  : 1   ; // [7] pcie不支持，保留
        unsigned int    cfg_reg_seren         : 1   ; // [8] 用于控制设备将non-fatal和fatal错误报告给rc。
        unsigned int    fast_back_to_back_trans_en  : 1   ; // [9] pcie不支持，保留
        unsigned int    cfg_int_disable       : 1   ; // [10] 中断禁用，控制pcie设备产生intx中断消息的能力
        unsigned int    reserved_2            : 8   ; // [18..11] 保留位
        unsigned int    int_msg_pending       : 1   ; // [19] 中断状况，表示该功能有个未完成的intx中断请求
        unsigned int    cap_list              : 1   ; // [20] 功能列表.该比特为1表示存在扩展功能列表。
        unsigned int    pci_bus_66mhz_cap     : 1   ; // [21] pcie不支持，保留
        unsigned int    reserved_1            : 1   ; // [22] 保留
        unsigned int    fast_back_to_back_trans_cap  : 1   ; // [23] pcie不支持，硬连线到0
        unsigned int    master_data_perr      : 1   ; // [24] master data parity errorz，当command寄存器的的parity error response 位为1时，该比特会在以下两种情况下置起：1. 接收到了中毒的完成报文;
        unsigned int    reserved_0            : 2   ; // [26..25] pcie不支持，保留
        unsigned int    signaled_target_abort  : 1   ; // [27] 当完成者返回的完成状况为comleter abort时，会将该位置起。
        unsigned int    rcvd_target_abt       : 1   ; // [28] received tarted abort，当一个请求者接收到完成者返回的完成状况为completion abort时，会将该位置起。
        unsigned int    rcvd_master_abt       : 1   ; // [29] received master abort，当一个请求者接收到完成者返回的完成状况为unsupported request时，会将该位置起。
        unsigned int    rcvd_serr             : 1   ; // [30] signaled system error,当该功能发送err_fatal或者err_nonfatal消息，并且command寄存器中的seer_enable为1时，该位就会置起。
        unsigned int    detected_perr         : 1   ; // [31] detected parrity error,不论command寄存器的bit6(即parity error response位)的状况如何，只要该功能收到一个中毒tlp，该比特就会被置起。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_pcists_pcicmd_u;

// define the union ntb_miep_ccr_rid_u
// 类代码和修订版id
// 0x8
typedef union tagmiepccrrid
{
    // define the struct bits
    struct
    {
        unsigned int    revision_id           : 8   ; // [7..0] 修订版id
        unsigned int    reserved_3            : 8   ; // [15..8] 保留
        unsigned int    cfg_sub_class         : 8   ; // [23..16] 子类代码，在ntb模式下，该寄存器的值硬连线到0x80h表示“其它类型桥设备”
        unsigned int    cfg_base_class        : 8   ; // [31..24] 类代码，桥设备，硬连线到0x06
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_ccr_rid_u;

// define the union ntb_miep_bist_type_u
// bist，配置头格式寄存器
// 0xc
typedef union tagmiepbisttype
{
    // define the struct bits
    struct
    {
        unsigned int    cache_line_size       : 8   ; // [7..0] 高速缓存行大小。
        unsigned int    primary_latency_timer  : 8   ; // [15..8] 主控制器延时定时器寄存器，该寄存器不影响pcie的功能，硬连线为0
        unsigned int    cfg_hdr_type          : 7   ; // [22..16] 配置头的格式，type0
        unsigned int    multi_function_device  : 1   ; // [23] 多功能设备，ntb是0
        unsigned int    bist                  : 8   ; // [31..24] bist寄存器，控制器不支持，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_bist_type_u;

// define the union ntb_miep_pbar01_base_lower_u
// 基地址寄存器01低32位
// 0x10
typedef union tagmieppbar01baselower
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_iep_bar0_io       : 1   ; // [0] 0 =bar01 is a memory bar1 =bar01 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    cfg_iep_bar0_type     : 2   ; // [2..1] 00 =32-bit bar10 =64-bit barntb只支持64位bar寄存器
        unsigned int    cfg_iep_bar0_pref     : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchablentb的bar01空间为不可预取
        unsigned int    reserved_4            : 12  ; // [15..4] 保留位
        unsigned int    cfg_iep_bar01_low     : 16  ; // [31..16] bar01基地址低位，bar01的最低可写位是bit 17，因此窗口大小为64kb
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_pbar01_base_lower_u;

// define the union ntb_miep_pbar23_base_lower_u
// 基地址寄存器23低32位
// 0x18
typedef union tagmieppbar23baselower
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_iep_bar23_io      : 1   ; // [0] 0 =bar0 is a memory bar1 =bar0 is an i/o barntb支持memory空间，不支持io空间
        unsigned int    cfg_iep_bar23_type    : 2   ; // [2..1] 00 =32-bit bar10 =64-bit barntb只支持64位bar寄存器
        unsigned int    cfg_iep_bar23_pref    : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_5            : 8   ; // [11..4] 保留位
        unsigned int    cfg_iep_bar23_low     : 20  ; // [31..12] bar23基地址低位，bar23默认最低可写位是比特12，因此默认窗口大小为4kb。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_pbar23_base_lower_u;

// define the union ntb_miep_pbar45_base_lower_u
// 基地址寄存器45高32位
// 0x20
typedef union tagmieppbar45baselower
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_iep_bar45_io      : 1   ; // [0] 0 =bar0 is a memory bar1 =bar0 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    cfg_iep_bar45_type    : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    cfg_iep_bar45_pref    : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_6            : 8   ; // [11..4] 保留位
        unsigned int    cfg_iep_bar45_low     : 20  ; // [31..12] bar45基地址低位，bar4默认的最低可写位是比特12，因此窗口大小为4kb。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_pbar45_base_lower_u;

// define the union ntb_miep_subsystemid_u
// 子系统vendor id
// 0x2c
typedef union tagmiepsubsystemid
{
    // define the struct bits
    struct
    {
        unsigned int    subsystem_vendor_id   : 16  ; // [15..0] 子系统vendor id
        unsigned int    subsystem_device_id   : 16  ; // [31..16] 子系统id
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_subsystemid_u;

// define the union ntb_miep_interrupt_u
// 中断引脚，中断线
// 0x3c
typedef union tagmiepinterrupt
{
    // define the struct bits
    struct
    {
        unsigned int    int_line_reg          : 8   ; // [7..0] 中断线寄存器，该寄存器保留仅仅是为了和pci兼容
        unsigned int    cfg_int_pin           : 8   ; // [15..8] 中断引脚寄存器，inta用来作为中断引脚
        unsigned int    min_gnt               : 8   ; // [23..16] pcie不支持，硬连线为0
        unsigned int    max_lat               : 8   ; // [31..24] pcie不支持，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_interrupt_u;

// define the union ntb_miep_msi_lower32_bitaddress_u
// msi低32位地址寄存器
// 0x54
typedef union tagmiepmsilower32bitaddress
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_9            : 2   ; // [1..0] 保留
        unsigned int    iep_msi_addr_low32    : 30  ; // [31..2] msi低32位地址，dw对齐
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_msi_lower32_bitaddress_u;

// define the union ntb_miep_link_capability_u
// 链路功能寄存器
// 0x7c
typedef union tagmieplinkcapability
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_pcie_max_link_speed  : 4   ; // [3..0] 支持的最大链接速度4'b0001 : 2.5gt/s4'b0010 : 5gt/s4'b0011 : 8gt/s其它值不支持
        unsigned int    cfg_pcie_max_link_width  : 6   ; // [9..4] 支持最大链路宽度，支持最大x8 lane
        unsigned int    active_state_power_management  : 2   ; // [11..10] 活动状态电源管理，ntb不支持
        unsigned int    l0s_exit_latency      : 3   ; // [14..12] 保留，ntb不支持
        unsigned int    l1_exit_latency       : 3   ; // [17..15] 保留，ntb不支持
        unsigned int    clock_power_management  : 1   ; // [18] 保留，ntb不支持
        unsigned int    surprise_down_error_report_cap  : 1   ; // [19] 保留,ntb不支持
        unsigned int    data_link_layer_active_report_cap  : 1   ; // [20] 保留,ntb不支持
        unsigned int    link_bandwidth_noti_cap  : 1   ; // [21] 保留,ntb不支持
        unsigned int    aspm_option_compliance  : 1   ; // [22] 根据pcie spec，固定为1
        unsigned int    reserved_11           : 1   ; // [23] 保留位
        unsigned int    cfg_pcie_port_num     : 8   ; // [31..24] ntb端口数量
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_link_capability_u;

// define the union ntb_miep_aer_cap_header_u
// aer功能寄存器头
// 0x100
typedef union tagmiepaercapheader
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_extended_capability_id  : 16  ; // [15..0] pcie功能id，对于aer来说，该id为0x0001h
        unsigned int    capability_version    : 4   ; // [19..16] 功能版本号
        unsigned int    next_capability_offset  : 12  ; // [31..20] 下一个功能地址偏移
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_aer_cap_header_u;

// define the union ntb_miep_dbi_ro_wr_en_u
// 写read-only控制寄存器
// 0x714
typedef union tagmiepdbirowren
{
    // define the struct bits
    struct
    {
        unsigned int    dbi_ro_wr_en          : 1   ; // [0] 写read-only寄存器使能控制信号
        unsigned int    reserved_17           : 31  ; // [31..1] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_dbi_ro_wr_en_u;

// define the union ntb_miep_axi_err_response_u
// axi总线errorresponse控制寄存器
// 0x718
typedef union tagmiepaxierrresponse
{
    // define the struct bits
    struct
    {
        unsigned int    err_resp_mode         : 4   ; // [3..0] axi总线错误response控制信号
        unsigned int    reserved_19           : 28  ; // [31..4] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_axi_err_response_u;

// define the union ntb_miep_ntb_outbound_flow_u
// ntb outbound流量统计状态寄存器
// 0x71c
typedef union tagmiepntboutboundflow
{
    // define the struct bits
    struct
    {
        unsigned int    xali0_flow_cnt        : 16  ; // [15..0] 统计周期内，xali0口上的流量(单位为字节)
        unsigned int    xali1_flow_cnt        : 16  ; // [31..16] 统计周期内，xali1口上的流量(单位为字节)
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_ntb_outbound_flow_u;

// define the union ntb_miep_ntb_hdr_ctrl_status_u
// ntb header ctrl status
// 0x720
typedef union tagmiepntbhdrctrlstatus
{
    // define the struct bits
    struct
    {
        unsigned int    client0_tlp_hv        : 1   ; // [0]
        unsigned int    client0_tlp_dv        : 1   ; // [1]
        unsigned int    client0_tlp_eot       : 1   ; // [2]
        unsigned int    ntb_xali0_halt        : 1   ; // [3] axi桥xali0上接口控制信号
        unsigned int    client0_tlp_hv_out    : 1   ; // [4]
        unsigned int    client0_tlp_dv_out    : 1   ; // [5]
        unsigned int    client0_tlp_eot_out   : 1   ; // [6]
        unsigned int    xadm_xali0_halt       : 1   ; // [7] xadm的xali0上接口控制信号
        unsigned int    client1_tlp_hv        : 1   ; // [8]
        unsigned int    client1_tlp_dv        : 1   ; // [9]
        unsigned int    client1_tlp_eot       : 1   ; // [10]
        unsigned int    ntb_xali1_halt        : 1   ; // [11] axi桥xali1上接口控制信号
        unsigned int    client1_tlp_hv_out    : 1   ; // [12]
        unsigned int    client1_tlp_dv_out    : 1   ; // [13]
        unsigned int    client1_tlp_eot_out   : 1   ; // [14]
        unsigned int    xadm_xali1_halt       : 1   ; // [15] xadm的xali0上接口控制信号
        unsigned int    ntb_hdr_ctrl          : 2   ; // [17..16] 选择寄存器0x0724~0x0730输出的头字段2'b00 : 输出axi桥xali0上头字段2'b01 : 输出xadm的xali0上的头字段2'b10 ：输出axi桥xali1上头字段2'b11 ：xadm的xali0上头字段
        unsigned int    reserved_20           : 14  ; // [31..18] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_ntb_hdr_ctrl_status_u;

// define the union ntb_miep_dev_type_switch_u
// 设备类型切换寄存器
// 0x734
typedef union tagmiepdevtypeswitch
{
    // define the struct bits
    struct
    {
        unsigned int    dev_type_sw           : 1   ; // [0] 在ntb/ntb模式下，通过写该寄存器，是的在training过程中切换到rc的device重新切换成ep
        unsigned int    reserved_21           : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_miep_dev_type_switch_u;


/******************************************************************************/
/*                      PhosphorV660 NTB_eEP_CFG 寄存器定义                   */
/******************************************************************************/
#define NTB_EEP_CFG_HDR0_REG  (0x0)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR1_REG  (0x4)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR2_REG  (0x8)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR3_REG  (0xC)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR4_REG  (0x10)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR5_REG  (0x14)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR6_REG  (0x18)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR7_REG  (0x1C)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR8_REG  (0x20)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR9_REG  (0x24)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR10_REG  (0x28)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR11_REG  (0x2C)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR12_REG  (0x30)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR13_REG  (0x34)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR14_REG  (0x38)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_CFG_HDR15_REG  (0x3C)  /* PCI兼容配置头空间寄存器 */
#define NTB_EEP_MSI_CAP0_REG  (0x50)  /* PCI MSI功能寄存器 */
#define NTB_EEP_MSI_CAP1_REG  (0x54)  /* PCI MSI功能寄存器 */
#define NTB_EEP_MSI_CAP2_REG  (0x58)  /* PCI MSI功能寄存器 */
#define NTB_EEP_MSI_CAP3_REG  (0x5C)  /* PCI MSI功能寄存器 */
#define NTB_EEP_MSI_CAP4_REG  (0x60)  /* PCI MSI功能寄存器 */
#define NTB_EEP_MSI_CAP5_REG  (0x64)  /* PCI MSI功能寄存器 */
#define NTB_EEP_CAP0_REG    (0x70)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP1_REG    (0x74)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP2_REG    (0x78)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP3_REG    (0x7C)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP4_REG    (0x80)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP9_REG    (0x94)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP10_REG   (0x98)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP11_REG   (0x9C)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP12_REG   (0xA0)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP13_REG   (0xB0)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP14_REG   (0xB4)  /* PCI Express功能寄存器 */
#define NTB_EEP_CAP15_REG   (0xB8)  /* PCI Express功能寄存器 */
#define NTB_EEP_AER_CAP0_REG     (0x100)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP1_REG     (0x104)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP2_REG     (0x108)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP3_REG     (0x10C)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP4_REG     (0x110)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP5_REG     (0x114)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP6_REG     (0x118)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP7_REG     (0x11C)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP8_REG     (0x120)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP9_REG     (0x124)  /* 高级错误报告寄存器 */
#define NTB_EEP_AER_CAP10_REG    (0x128)  /* 高级错误报告寄存器 */
#define NTB_EEP_VC_CAP0_REG      (0x148)  /* 虚拟通道功能寄存器 */
#define NTB_EEP_VC_CAP1_REG      (0x14C)  /* 虚拟通道功能寄存器 */
#define NTB_EEP_VC_CAP2_REG      (0x150)  /* 虚拟通道功能寄存器 */
#define NTB_EEP_VC_CAP3_REG      (0x154)  /* 虚拟通道功能寄存器 */
#define NTB_EEP_VC_CAP4_REG      (0x158)  /* 虚拟通道功能寄存器 */
#define NTB_EEP_VC_CAP5_REG      (0x15C)  /* 虚拟通道功能寄存器 */
#define NTB_EEP_VC_CAP6_REG      (0x160)  /* 虚拟通道功能寄存器 */
#define NTB_EEP_PORT_LOGIC0_REG  (0x700)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC1_REG  (0x704)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC2_REG  (0x708)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC3_REG  (0x70C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC4_REG  (0x710)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC5_REG  (0x714)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC6_REG  (0x718)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC7_REG  (0x71C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC8_REG  (0x720)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC9_REG  (0x724)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC10_REG  (0x728)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC11_REG  (0x72C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC12_REG  (0x730)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC13_REG  (0x734)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC14_REG  (0x738)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC15_REG  (0x73C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC16_REG  (0x748)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC17_REG  (0x74C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC18_REG  (0x750)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC22_REG  (0x80C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC23_REG  (0x810)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC24_REG  (0x814)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC27_REG  (0x820)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC28_REG  (0x824)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC29_REG  (0x828)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC30_REG  (0x82C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC31_REG  (0x830)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC32_REG  (0x834)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC33_REG  (0x838)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC34_REG  (0x83C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC35_REG  (0x840)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC36_REG  (0x844)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC37_REG  (0x848)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC38_REG  (0x84C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC39_REG  (0x850)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC40_REG  (0x854)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC41_REG  (0x858)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC42_REG  (0x85C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC43_REG  (0x860)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC44_REG  (0x864)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC45_REG  (0x868)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC46_REG  (0x86C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC47_REG  (0x870)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC48_REG  (0x874)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC49_REG  (0x878)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC50_REG  (0x87C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC51_REG  (0x880)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC52_REG  (0x884)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC53_REG  (0x888)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC54_REG  (0x890)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC55_REG  (0x894)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC56_REG  (0x898)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC57_REG  (0x89C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC58_REG  (0x8A4)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC59_REG  (0x8A8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC60_REG  (0x8AC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC61_REG  (0x8B8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC62_REG  (0x8BC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC63_REG  (0x8D0)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC64_REG  (0x8D8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC65_REG  (0x8DC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC66_REG  (0x8E0)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC67_REG  (0x8E4)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC68_REG  (0x8E8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC69_REG  (0x8FC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC70_REG  (0x900)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC71_REG  (0x904)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC72_REG  (0x908)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC73_REG  (0x90C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC74_REG  (0x910)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC75_REG  (0x914)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC76_REG  (0x918)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC77_REG  (0x91C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC78_REG  (0x920)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC79_REG  (0x978)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC80_REG  (0x97C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC81_REG  (0x980)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC82_REG  (0x988)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC83_REG  (0x98C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC84_REG  (0x998)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC85_REG  (0x99C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC86_REG  (0x9A0)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC87_REG  (0x9A8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC88_REG  (0x9AC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC89_REG  (0x9BC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC90_REG  (0x9C4)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC91_REG  (0x9C8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC92_REG  (0x9CC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC93_REG  (0x9D0)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC94_REG  (0x9D4)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC95_REG  (0x9D8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC96_REG  (0x9DC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC97_REG  (0x9E0)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC98_REG  (0x9E4)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC99_REG  (0x9E8)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC100_REG  (0x9EC)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC101_REG  (0xA00)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC102_REG  (0xA10)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC103_REG  (0xA18)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC104_REG  (0xA1C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC105_REG  (0xA24)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC106_REG  (0xA28)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC107_REG  (0xA34)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC108_REG  (0xA3C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC109_REG  (0xA40)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC110_REG  (0xA44)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC111_REG  (0xA48)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC112_REG  (0xA4C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC113_REG  (0xA50)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC114_REG  (0xA54)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC115_REG  (0xA58)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC116_REG  (0xA6C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC117_REG  (0xA70)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC118_REG  (0xA74)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC119_REG  (0xA78)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC120_REG  (0xA7C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC121_REG  (0xA80)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC122_REG  (0xA84)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC123_REG  (0xA88)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC124_REG  (0xA8C)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC125_REG  (0xA90)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC126_REG  (0xB30)  /* 端口逻辑寄存器 */
#define NTB_EEP_PORT_LOGIC127_REG  (0xB40)  /* 端口逻辑寄存器 */
// define the union ntb_eep_cfg_hdr0_u
// pci兼容配置头空间寄存器
// 0x0
typedef union tageeppcicfghdr0
{
    // define the struct bits
    struct
    {
        unsigned int    vendor_id             : 16  ; // [15..0] 厂商id号
        unsigned int    device_id             : 16  ; // [31..16] 设备id号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr0_u;

// define the union ntb_eep_cfg_hdr1_u
// pci兼容配置头空间寄存器
// 0x4
typedef union tageeppcicfghdr1
{
    // define the struct bits
    struct
    {
        unsigned int    io_space_enable       : 1   ; // [0] i/o sapace enable0：该设备不能响应i/o请求;1：该设备能够响应i/o请求。
        unsigned int    memory_space_enable   : 1   ; // [1] memory space enable0：该设备不能响应存储器请求;1：该设备能够响应存储器请求。
        unsigned int    bus_master_enable     : 1   ; // [2] bus master enable0：该设备不能作为主设备;1：该设备能够作为主设备。
        unsigned int    specialcycleenable    : 1   ; // [3] special cycle enalbe不适用于pcie，硬连线为0
        unsigned int    memory_write_and_invalidate  : 1   ; // [4] memory write and invalidata不适用于pcie，硬连线为0
        unsigned int    vga_palette_snoop_enable  : 1   ; // [5] vga palette snoop不适用于pcie，硬连线为0
        unsigned int    parity_error_response  : 1   ; // [6] parity error response0：对奇偶校验错误不作出响应;1：对奇偶校验错误作出响应。
        unsigned int    idsel_stepping_waitcycle_control  : 1   ; // [7] idsel stepping/wait cycle control不适用于pcie，硬连线为0
        unsigned int    serr_enable           : 1   ; // [8] serr#信号使能0：可以使用serr#信号;
        unsigned int    fastback_to_backenable  : 1   ; // [9] faster back-to-back enaable不适用于pcie，硬连线为0
        unsigned int    interrupt_disable     : 1   ; // [10] intx assertion disable0：允许使用intx方式提交中断;1：禁用intx方式提交中断。
        unsigned int    reserved_2            : 5   ; // [15..11] reserved
        unsigned int    reserved_1            : 3   ; // [18..16] reserved
        unsigned int    intx_status           : 1   ; // [19] intx status0：设备未使用intx方式向处理器提交了中断请求;1：设备使用intx方式向处理器提交了中断请求。
        unsigned int    capabilitieslist      : 1   ; // [20] capabilities list指示capability pointer寄存器中的值有效，硬连线为1
        unsigned int    pcibus66mhzcapable    : 1   ; // [21] 66mhz capable不适用于pcie，硬连线为0
        unsigned int    reserved_0            : 1   ; // [22] reserved
        unsigned int    fastback_to_back      : 1   ; // [23] faster back-to-back capable不适用于pcie，硬连线为0
        unsigned int    masterdataparityerror  : 1   ; // [24] master data parity error0：除置一条件满足之外的其他情况;1：perr#信号有效，或者总线出现数据传输错误时，或者command寄存器的parity error response位为1时。
        unsigned int    devsel_timing         : 2   ; // [26..25] devsel timing不适用于pcie，硬连线为0
        unsigned int    signaled_target_abort  : 1   ; // [27] signaled target abort由pci目标设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_target_abort  : 1   ; // [28] received target abort由pci主设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_master_abort  : 1   ; // [29] received master abort由pci主设备设置0：未发生主设备夭折时序;1：发生主设备夭折时序。
        unsigned int    signaled_system_error  : 1   ; // [30] signaled system error0：serr#信号无效;1：serr#信号有效。
        unsigned int    detected_parity_error  : 1   ; // [31] detected parity error0：未检测到奇偶校验错误;1：检测到奇偶校验错误。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr1_u;

// define the union ntb_eep_cfg_hdr2_u
// pci兼容配置头空间寄存器
// 0x8
typedef union tageeppcicfghdr2
{
    // define the struct bits
    struct
    {
        unsigned int    revision_id           : 8   ; // [7..0] 修订版id
        unsigned int    reserved_3            : 8   ; // [15..8] 保留
        unsigned int    cfg_sub_class         : 8   ; // [23..16] 子类代码，在ntb模式下，该值需要通过local cpu配置为0x80，表示“其它类型桥设备”
        unsigned int    cfg_base_class        : 8   ; // [31..24] 类代码，在ntb模式下,该值需要通过local cpu配置为0x06,表示是桥设备
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr2_u;

// define the union ntb_eep_cfg_hdr3_u
// pci兼容配置头空间寄存器
// 0xc
typedef union tageeppcicfghdr3
{
    // define the struct bits
    struct
    {
        unsigned int    cache_line_size       : 8   ; // [7..0] cache line size不适用于pcie设备，对此寄存器执行写操作不会影响pcie core的功能
        unsigned int    mstr_lat_tmr          : 8   ; // [15..8] master latency timer不适用于pcie设备，硬连线为0
        unsigned int    hdr_type              : 7   ; // [22..16] configuration header format0：type0配置头空间;1：type1配置头空间。
        unsigned int    multi_function_device  : 1   ; // [23] multi function device0：单功能设备;1：多功能设备。
        unsigned int    bist                  : 8   ; // [31..24] bist register该版本ip不支持该功能，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr3_u;

// define the union ntb_eep_cfg_hdr4_u
// pci兼容配置头空间寄存器
// 0x10
typedef union tageeppcicfghdr4
{
    // define the struct bits
    struct
    {
        unsigned int    sbar01_space_inicator  : 1   ; // [0] 指示bar类型0：memory bar;1：i/o bar。
        unsigned int    sbar01_type           : 2   ; // [2..1] 指示memory bar类型00：32-bit bar;10：64-bit bar;01：保留;11：保留。
        unsigned int    sbar01_prefetchable   : 1   ; // [3] 指示memory bar是否可预取0：不可预取;1：可预取。
        unsigned int    sbar01_lower          : 28  ; // [31..4] 64位bar0地址的[31:4]位若dbi_cs2有效，则为bar0_mask的[31:4]位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr4_u;

// define the union ntb_eep_cfg_hdr6_u
// pci兼容配置头空间寄存器
// 0x18
typedef union tageeppcicfghdr6
{
    // define the struct bits
    struct
    {
        unsigned int    sbar23_space_inicator  : 1   ; // [0] 0 =bar23 is a memory bar1 =bar23 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    sbar23_type           : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    sbar23_prefetchable   : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_4            : 8   ; // [11..4] 保留位
        unsigned int    sbar23_lower          : 20  ; // [31..12] 64位bar23地址的[31:12]位若dbi_cs2有效，则为bar23_mask的[31:12]位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr6_u;

// define the union ntb_eep_cfg_hdr8_u
// pci兼容配置头空间寄存器
// 0x20
typedef union tageeppcicfghdr8
{
    // define the struct bits
    struct
    {
        unsigned int    sbar45_space_inicator  : 1   ; // [0] 0 =bar01 is a memory bar1 =bar01 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    sbar45_type           : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    sbar45_prefetchable   : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_5            : 8   ; // [11..4] 保留位
        unsigned int    sbar45_lower          : 20  ; // [31..12] bar01基地址低位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr8_u;

// define the union ntb_eep_cfg_hdr11_u
// pci兼容配置头空间寄存器
// 0x2c
typedef union tageeppcicfghdr11
{
    // define the struct bits
    struct
    {
        unsigned int    subsystem_vendor_id   : 16  ; // [15..0] 子系统厂商id
        unsigned int    subsystemid           : 16  ; // [31..16] 子系统id
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr11_u;

// define the union ntb_eep_cfg_hdr13_u
// pci兼容配置头空间寄存器
// 0x34
typedef union tageeppcicfghdr13
{
    // define the struct bits
    struct
    {
        unsigned int    capptr                : 8   ; // [7..0] 功能指针
        unsigned int    reserved_7            : 24  ; // [31..8] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr13_u;

// define the union ntb_eep_cfg_hdr15_u
// pci兼容配置头空间寄存器
// 0x3c
typedef union tageeppcicfghdr15
{
    // define the struct bits
    struct
    {
        unsigned int    int_line              : 8   ; // [7..0] interrupt line
        unsigned int    int_pin               : 8   ; // [15..8] interrupt pin00：不使用intx类型上报中断;01：使用inta;02：使用intb;03：使用intc;04：使用intd。
        unsigned int    min_grant             : 8   ; // [23..16] 不适用于pcie，硬连线为0
        unsigned int    max_latency           : 8   ; // [31..24] 不适用于pcie，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cfg_hdr15_u;

// define the union ntb_eep_msi_cap0_u
// pci msi功能寄存器
// 0x50
typedef union tageeppcimsicap0
{
    // define the struct bits
    struct
    {
        unsigned int    msi_cap_id            : 8   ; // [7..0] msi capability id
        unsigned int    next_capability_pointer  : 8   ; // [15..8] next capability pointer
        unsigned int    msi_enabled           : 1   ; // [16] msi enabled0：禁用msi;1：使能msi。
        unsigned int    multiple_message_capable  : 3   ; // [19..17] multiple message capable000：pcie设备可以使用1个中断向量;001：pcie设备可以使用2个中断向量;010：pcie设备可以使用4个中断向量;011：pcie设备可以使用8个中断向量;100：pcie设备可以使用16个中断向量;101：pcie设备可以使用32个中断向量;110：保留;111：保留。
        unsigned int    multiple_message_enabled  : 3   ; // [22..20] multiple message enabled表示分配给当前pcie设备的中断向量数目000：pcie设备被分配给1个中断向量;001：pcie设备被分配给2个中断向量;010：pcie设备被分配给4个中断向量;011：pcie设备被分配给8个中断向量;100：pcie设备被分配给16个中断向量;101：pcie设备被分配给32个中断向量;110：保留;111：保留。
        unsigned int    msi_64_en             : 1   ; // [23] 支持64位地址功能
        unsigned int    pvm_en                : 1   ; // [24] 设备是否支持per vector masking功能1'b0: 不支持1'b1: 支持
        unsigned int    message_control_register  : 7   ; // [31..25] msi per vector masking (pvm) supported0：不支持msi pvm;1：支持msi pvm。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_msi_cap0_u;

// define the union ntb_eep_msi_cap1_u
// pci msi功能寄存器
// 0x54
typedef union tageeppcimsicap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_10           : 2   ; // [1..0] reserved
        unsigned int    msi_addr_low          : 30  ; // [31..2] msi的低32bit地址的[31:2]位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_msi_cap1_u;

// define the union ntb_eep_msi_cap3_u
// pci msi功能寄存器
// 0x5c
typedef union tageeppcimsicap3
{
    // define the struct bits
    struct
    {
        unsigned int    msi_data              : 16  ; // [15..0] msi数据
        unsigned int    reserved_11           : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_msi_cap3_u;

// define the union ntb_eep_cap0_u
// pci express功能寄存器
// 0x70
typedef union tageeppciecap0
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_cap_id           : 8   ; // [7..0] pci express capability id
        unsigned int    pcie_next_ptr         : 8   ; // [15..8] next capability pointer
        unsigned int    pcie_capability_version  : 4   ; // [19..16] pci express capability version
        unsigned int    device_port_type      : 4   ; // [23..20] device/port type0100：pcie rc;
        unsigned int    slot_implemented      : 1   ; // [24] slot implemented
        unsigned int    interrupt_message_number  : 5   ; // [29..25] interrupt message number
        unsigned int    reserved_12           : 2   ; // [31..30] ro
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap0_u;

// define the union ntb_eep_cap1_u
// pci express功能寄存器
// 0x74
typedef union tageeppciecap1
{
    // define the struct bits
    struct
    {
        unsigned int    max_payload_size_supported  : 3   ; // [2..0] 支持最大payload 为512byte
        unsigned int    phantom_function_supported  : 2   ; // [4..3] 仿真器功能支持，硬连线0
        unsigned int    extended_tagfield_supported  : 1   ; // [5] 拓展标记字段支持，支持最大outstanding的深度为32
        unsigned int    endpoint_l0sacceptable_latency  : 3   ; // [8..6] 端点l0可接受的延时，不支持，硬连线为0
        unsigned int    endpoint_l1acceptable_latency  : 3   ; // [11..9] 端点l1可接受的延时，不支持，硬连线为0
        unsigned int    undefined             : 3   ; // [14..12] 保留
        unsigned int    role_based_err_rpt    : 1   ; // [15] 根据pcie spec，该值固定接为1
        unsigned int    reserved_15           : 2   ; // [17..16] 保留
        unsigned int    captured_slot_power_limit_value  : 8   ; // [25..18] 捕获的插槽功率极限值，硬连线0x0，只读
        unsigned int    captured_slot_power_limit_scale  : 2   ; // [27..26] 捕获的插槽功率极限因子，硬连线0x0，只读
        unsigned int    function_level_reset_cap  : 1   ; // [28] function级的复位，ntb不支持该功能
        unsigned int    reserved_14           : 3   ; // [31..29] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap1_u;

// define the union ntb_eep_cap2_u
// pci express功能寄存器
// 0x78
typedef union tageeppciecap2
{
    // define the struct bits
    struct
    {
        unsigned int    correctable_error_reporting_enable  : 1   ; // [0] correctable error reporting enable0：不支持发送“可纠正错误”消息;1：支持发送“可纠正错误”消息。
        unsigned int    non_fatal_error_reporting_enable  : 1   ; // [1] non-fatal error reporting enable0：不支持发送“非致命错误”消息;1：支持发送“非致命错误”消息。
        unsigned int    fatal_error_reporting_enable  : 1   ; // [2] fatal error reporting enable0：不支持发送“致命错误”消息;1：支持发送“致命错误”消息。
        unsigned int    urenable              : 1   ; // [3] unsupported request reporting enable0：不支持发送“不被支持请求”消息;1：支持发送“不被支持请求”消息。
        unsigned int    enable_relaxed_ordering  : 1   ; // [4] enable relaxed ordering0：不支持灵活事务顺序;1：支持灵活事务顺序。
        unsigned int    max_payload_size      : 3   ; // [7..5] max_payload_size000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    extended_tagfieldenable  : 1   ; // [8] extended tag field enable0：禁用扩展tag字段;1：使能扩展tag字段。
        unsigned int    phantom_function_enable  : 1   ; // [9] phantom function enable0：禁用phantom function;1：使能phantom function。
        unsigned int    auxpowerpmenable      : 1   ; // [10] aux power pm enable0：禁用附加电源;1：使能附加电源。
        unsigned int    enablenosnoop         : 1   ; // [11] enable no snoop0：禁用no snoop特性;1：使能no snoop特性。
        unsigned int    max_read_request_size  : 3   ; // [14..12] max_read_request_size000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    reserved_17           : 1   ; // [15] reserved
        unsigned int    correctableerrordetected  : 1   ; // [16] correctable error detected0：没有检测到可纠正错误;1：检测到可纠正错误。
        unsigned int    non_fatalerrordetected  : 1   ; // [17] non-fatal error detected0：没有检测到非致命错误;1：检测到非致命错误。
        unsigned int    fatalerrordetected    : 1   ; // [18] fatal error detected0：没有检测到致命错误;1：检测到致命错误。
        unsigned int    unsupportedrequestdetected  : 1   ; // [19] unsupported request detected0：没有收到不被支持的请求;1：收到不被支持的请求。
        unsigned int    auxpowerdetected      : 1   ; // [20] aux power detected0：没有检测到辅助电源;1：检测到辅助电源。
        unsigned int    transactionpending    : 1   ; // [21] transaction pending硬连线为0
        unsigned int    reserved_16           : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap2_u;

// define the union ntb_eep_cap3_u
// pci express功能寄存器
// 0x7c
typedef union tageeppciecap3
{
    // define the struct bits
    struct
    {
        unsigned int    max_link_speed        : 4   ; // [3..0] 支持的最大链接速度4'b0001 : 2.5gt/s4'b0010 : 5gt/s4'b0011 : 8gt/s其它值不支持
        unsigned int    max_link_width        : 6   ; // [9..4] 支持最大链路宽度，支持最大x8 lane
        unsigned int    active_state_power_management  : 2   ; // [11..10] 活动状态电源管理，ntb不支持
        unsigned int    l0s_exitlatency       : 3   ; // [14..12] 保留，ntb不支持
        unsigned int    l1_exit_latency       : 3   ; // [17..15] 保留，ntb不支持
        unsigned int    clock_power_management  : 1   ; // [18] 保留，ntb不支持
        unsigned int    surprise_down_error_report_cap  : 1   ; // [19] 保留,ntb不支持
        unsigned int    data_link_layer_active_report_cap  : 1   ; // [20] 保留,ntb不支持
        unsigned int    link_bandwidth_noti_cap  : 1   ; // [21] 保留,ntb不支持
        unsigned int    aspm_option_compliance  : 1   ; // [22] 根据pcie spec，固定为1
        unsigned int    reserved_18           : 1   ; // [23] 保留位
        unsigned int    port_number           : 8   ; // [31..24] ntb端口数量
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap3_u;

// define the union ntb_eep_cap4_u
// pci express功能寄存器
// 0x80
typedef union tageeppciecap4
{
    // define the struct bits
    struct
    {
        unsigned int    active_state_power_management  : 2   ; // [1..0]
        unsigned int    reserved_21           : 1   ; // [2] 保留
        unsigned int    rcb                   : 1   ; // [3] 0表示能返回64b边界的完成报文
        unsigned int    link_disable          : 1   ; // [4]
        unsigned int    retrain_link          : 1   ; // [5]
        unsigned int    common_clock_config   : 1   ; // [6]
        unsigned int    extended_sync         : 1   ; // [7]
        unsigned int    enable_clock_pwr_management  : 1   ; // [8]
        unsigned int    hw_auto_width_disable  : 1   ; // [9]
        unsigned int    link_bandwidth_management_int_en  : 1   ; // [10]
        unsigned int    link_auto_bandwidth_int_en  : 1   ; // [11]
        unsigned int    reserved_20           : 4   ; // [15..12] 保留
        unsigned int    current_link_speed    : 4   ; // [19..16] 4'b0001 : 2.5gbps4'b0010 : 5gbps4'b0011 : 8gbps其它值:保留当链路没有建立的时候，该无意义
        unsigned int    negotiated_link_width  : 6   ; // [25..20] 协商的链路宽度，可能值为x1/x2/x4/x8
        unsigned int    reserved_19           : 1   ; // [26] 保留位
        unsigned int    link_training         : 1   ; // [27] 链路协商正在进行的状态
        unsigned int    slot_clock_configration  : 1   ; // [28] 表示设备是否使用连接器上提供的参考物理时钟
        unsigned int    data_link_layer_active  : 1   ; // [29] 链路层的活动状态
        unsigned int    link_bandwidth_management_status  : 1   ; // [30]
        unsigned int    link_auto_bandwidth_status  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap4_u;

// define the union ntb_eep_cap9_u
// pci express功能寄存器
// 0x94
typedef union tageeppciecap9
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutrangessupported  : 4   ; // [3..0] completion timeout ranges supportedrange a: 50us to 10ms;range b: 10ms to 250ms;range c: 250ms to 4s;range d: 4s to 64s。
        unsigned int    completiontimeoutdisablesupported  : 1   ; // [4] completion timeout disable supported0：不支持禁用completion timeout;1：支持禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoproutingsupported  : 1   ; // [6] atomicop routing supported，不适用于endpoint。
        unsigned int    _2_bitatomicopcompletersupported  : 1   ; // [7] 32-bit atomicop completer supported0：不支持32-bit atomicop completer ;1：支持32-bit atomicop completer 。
        unsigned int    _4_bitatomicopcompletersupported  : 1   ; // [8] 64-bit atomicop completer supported0：不支持64-bit atomicop completer;1：支持64-bit atomicop completer。
        unsigned int    _28_bitcascompletersupported  : 1   ; // [9] 128-bit cas completer supported0：不支持128-bit cas completer;1：支持128-bit cas completer。
        unsigned int    noro_enabledpr_prpassing  : 1   ; // [10] no ro-enabled pr-pr passing0：no ro-enabled pr-pr passing;1：ro-enabled pr-pr passing。
        unsigned int    reserved_22           : 1   ; // [11] reserved
        unsigned int    tphcompletersupported  : 2   ; // [13..12] tph completer supported00：接收端不支持tph和扩展tph报文;01：接收端仅支持tph报文;10：保留;11：接收端支持tph和扩展tph报文。
        unsigned int    dev_cap2              : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap9_u;

// define the union ntb_eep_cap10_u
// pci express功能寄存器
// 0x98
typedef union tageeppciecap10
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutvalue  : 4   ; // [3..0] completion timeout value0000b：default range: 50us to 50ms;0001b：50us to 100us;0010b：1ms to 10ms;0101b：16ms to 55ms;0110b：65ms to 210ms;1001b：260ms to 900ms;1010b：1s to 3.5s;1101b：4s to 13s;1110b：17s to 64s;其他值：保留。
        unsigned int    completiontimeoutdisable  : 1   ; // [4] completion timeout disable0：不禁用completion timeout;1：禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoprequesterenable  : 1   ; // [6] atomicop requester enable0：禁用atomicop requester;1：使能atomicop requester。
        unsigned int    atomicopegressblocking  : 1   ; // [7] atomicop egress blocking对于endpoint不使用，reserved
        unsigned int    idorequestenable      : 1   ; // [8] ido request enable0：禁用ido request enable;1：使能ido request enable。
        unsigned int    idocompletionenable   : 1   ; // [9] ido completion enable0：禁用ido completion enable;1：使能ido completion enable。
        unsigned int    dev_ctrl2             : 22  ; // [31..10] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap10_u;

// define the union ntb_eep_cap11_u
// pci express功能寄存器
// 0x9c
typedef union tageeppciecap11
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_25           : 1   ; // [0] reserved
        unsigned int    gen1_suport           : 1   ; // [1] gen1链路速度支持0：不支持2.5gt/s;1：支持2.5gt/s。
        unsigned int    gen2_suport           : 1   ; // [2] gen2链路速度支持0：不支持5.0gt/s;1：支持5.0gt/s。
        unsigned int    gen3_suport           : 1   ; // [3] gen3链路速度支持0：不支持8.0gt/s;1：支持8.0gt/s。
        unsigned int    reserved_24           : 4   ; // [7..4] reserved
        unsigned int    croslink_supported    : 1   ; // [8] croslink supported
        unsigned int    link_cap2             : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap11_u;

// define the union ntb_eep_cap12_u
// pci express功能寄存器
// 0xa0
typedef union tageeppciecap12
{
    // define the struct bits
    struct
    {
        unsigned int    targetlinkspeed       : 4   ; // [3..0] target link speed
        unsigned int    entercompliance       : 1   ; // [4] enter compliance0：不令链路进入compliance模式;1：令链路进入compliance模式。
        unsigned int    hardwareautonomousspeeddisa  : 1   ; // [5] hardware autonomous speed disable0：不禁用hardware autonomous speed;1：禁用hardware autonomous speed。
        unsigned int    selectablede_empha    : 1   ; // [6] selectable de-emphasis0：-6db;1：-3.5db。
        unsigned int    transmitmargin        : 3   ; // [9..7] transmit margin
        unsigned int    entermodifiedcompliance  : 1   ; // [10] enter modified compliance0：如果ltssm进入polling.compliance状态，不发送modified compliance pattern;1：如果ltssm进入polling.compliance状态，发送一个modified compliance pattern。
        unsigned int    compliancesos         : 1   ; // [11] compliance sos0：在发送compliance pattern或modified pattern时不在中间插入skp有序集;1：在发送compliance pattern或modified pattern时在中间插入skp有序集。
        unsigned int    de_emphasislevel      : 4   ; // [15..12] de-emphasis level0001：-3.5db;0000：-6db其他值：保留。
        unsigned int    currentde_emphasislevel  : 1   ; // [16] current de-emphasis level0：-6db;1：-3.5db。
        unsigned int    equalizationcomplete  : 1   ; // [17] equalization complete0：equalization未完成;1：equalization完成。
        unsigned int    equalizationphase1successful  : 1   ; // [18] equalization phase 1 successful0：equalization phase 1不成功;1：equalization phase 1成功。
        unsigned int    equalizationphase2successful  : 1   ; // [19] equalization phase 2 successful0：equalization phase 2不成功;1：equalization phase 2成功。
        unsigned int    equalizationphase3successful  : 1   ; // [20] equalization phase 3 successful0：equalization phase 3不成功;1：equalization phase 3成功。
        unsigned int    linkequalizationrequest  : 1   ; // [21] link equalization request0：没有请求link equalization;1：请求link equalization 。
        unsigned int    link_ctrl2_status2    : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap12_u;

// define the union ntb_eep_cap13_u
// pci express功能寄存器
// 0xb0
typedef union tageeppciecap13
{
    // define the struct bits
    struct
    {
        unsigned int    pci_msix_cap_id       : 8   ; // [7..0]
        unsigned int    pci_msix_cap_nxt_offset  : 8   ; // [15..8]
        unsigned int    pci_msix_table_size   : 11  ; // [26..16]
        unsigned int    reserved_26           : 3   ; // [29..27]
        unsigned int    pci_msix_func_mask    : 1   ; // [30]
        unsigned int    pci_msix_enable       : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap13_u;

// define the union ntb_eep_cap14_u
// pci express功能寄存器
// 0xb4
typedef union tageeppciecap14
{
    // define the struct bits
    struct
    {
        unsigned int    pci_msix_bir          : 3   ; // [2..0]
        unsigned int    pci_msix_table_offset  : 29  ; // [31..3]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap14_u;

// define the union ntb_eep_cap15_u
// pci express功能寄存器
// 0xb8
typedef union tageeppciecap15
{
    // define the struct bits
    struct
    {
        unsigned int    pci_msix_pba          : 3   ; // [2..0]
        unsigned int    pci_msix_pba_offset   : 29  ; // [31..3]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_cap15_u;

// define the union ntb_eep_aer_cap0_u
// 高级错误报告寄存器
// 0x100
typedef union tageepaercap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    aer_cap_hdr           : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_aer_cap0_u;

// define the union ntb_eep_aer_cap1_u
// 高级错误报告寄存器
// 0x104
typedef union tageepaercap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_32           : 1   ; // [0] 未定义
        unsigned int    reserved_31           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsta  : 1   ; // [4] data link protocol error status0：未检测到data link protocol error;1：检测到data link protocol error。
        unsigned int    surprisedownerrorstatus  : 1   ; // [5] surprise down error status，该版本ip不支持。
        unsigned int    reserved_30           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpstatu      : 1   ; // [12] poisoned tlp status0：未检测到poisoned tlp;1：检测到poisoned tlp。
        unsigned int    flowcontrolprotocolerrorst  : 1   ; // [13] flow control protocol error status0：未检测到flow control protocol error;1：检测到flow control protocol error。
        unsigned int    completiontimeouts    : 1   ; // [14] completion timeout status0：未检测到completion timeout;
        unsigned int    completerabortstatus  : 1   ; // [15] completer abort status0：未检测到completer abort;1：检测到completer abort。
        unsigned int    receiveroverflowstatus  : 1   ; // [16] unexpected completion status0：未检测到unexpected completion;1：检测到unexpected completion。
        unsigned int    malformedtlpstatus    : 1   ; // [17] receiver overflow status0：未检测到receiver overflow;1：检测到receiver overflow。
        unsigned int    ecrcerrorstatus       : 1   ; // [18] malformed tlp status0：未检测到malformed tlp;1：检测到malformed tlp。
        unsigned int    ecrcerrorstat         : 1   ; // [19] ecrc error status0：未检测到ecrc error;1：检测到ecrc error。
        unsigned int    unsupportedrequesterrorstatus  : 1   ; // [20] unsupported request error status0：未检测到unsupported request error;1：检测到unsupported request error;。
        unsigned int    reserved_29           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedstatus  : 1   ; // [24] atomicop egress blocked status0：atomicop egress is not blocked;1：atomicop egress is blocked。
        unsigned int    uncorr_err_status     : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_aer_cap1_u;

// define the union ntb_eep_aer_cap2_u
// 高级错误报告寄存器
// 0x108
typedef union tageepaercap2
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_36           : 1   ; // [0] 未定义
        unsigned int    reserved_35           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrormask  : 1   ; // [4] data link protocol error mask0：data link protocol error is not masked;1：data link protocol error is masked。
        unsigned int    surprisedownerrormask  : 1   ; // [5] surprise down error mask，该版本ip不支持。
        unsigned int    reserved_34           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpmask       : 1   ; // [12] poisoned tlp mask0：poisoned tlp is not masked;1：poisoned tlp is masked。
        unsigned int    flowcontrolprotocolerrormask  : 1   ; // [13] flow control protocol error mask0：flow control protocol error is not masked;1：flow control protocol error is masked。
        unsigned int    completiontimeoutmask  : 1   ; // [14] completion timeout mask0：completion timeout is not masked;1：completion timeout is masked。
        unsigned int    completerabortmask    : 1   ; // [15] completer abort mask0：completer abort is not masked;1：completer abort is masked。
        unsigned int    unexpectedcompletionmask  : 1   ; // [16] unexpected completion mask0：unexpected completion is not masked;1：unexpected completion is masked。
        unsigned int    receiveroverflowmask  : 1   ; // [17] receiver overflow mask0：receiver overflow is not masked;1：receiver overflow is masked。
        unsigned int    malformedtlpmask      : 1   ; // [18] malformed tlp mask0：malformed tlp is not masked;1：malformed tlp is masked。
        unsigned int    ecrcerrormask         : 1   ; // [19] ecrc error mask0：ecrc error is not masked;1：ecrc error is masked。
        unsigned int    unsupportedrequesterrormask  : 1   ; // [20] unsupported request error mask0：unsupported request error is not masked;1：unsupported request error is masked。
        unsigned int    reserved_33           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedmask  : 1   ; // [24] atomicop egress blocked mask0：atomicop egress blocked is not masked;1：atomicop egress blocked is masked。
        unsigned int    uncorr_err_mask       : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_aer_cap2_u;

// define the union ntb_eep_aer_cap3_u
// 高级错误报告寄存器
// 0x10c
typedef union tageepaercap3
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_40           : 1   ; // [0] 未定义
        unsigned int    reserved_39           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsever  : 1   ; // [4] data link protocol error severity0：non-fatal;1：fatal。
        unsigned int    surprisedownerrorseverity  : 1   ; // [5] surprise down error severity，该版本ip不支持
        unsigned int    reserved_38           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpseverity   : 1   ; // [12] poisoned tlp severity0：non-fatal;1：fatal。
        unsigned int    flowcontrolprotocolerrorseveri  : 1   ; // [13] flow control protocol error severity0：non-fatal;1：fatal。
        unsigned int    completiontimeoutseverity  : 1   ; // [14] completion timeout severity0：non-fatal;1：fatal。
        unsigned int    completerabortseverity  : 1   ; // [15] completer abort severity0：non-fatal;1：fatal。
        unsigned int    unexpectedcompletionseverity  : 1   ; // [16] unexpected completion severity0：non-fatal;1：fatal。
        unsigned int    receiveroverflowseverity  : 1   ; // [17] receiver overflow severity0：non-fatal;1：fatal。
        unsigned int    malformedtlpseverity  : 1   ; // [18] malformed tlp severity0：non-fatal;1：fatal。
        unsigned int    ecrcerrorseverity     : 1   ; // [19] ecrc error severity0：non-fatal;1：fatal。
        unsigned int    unsupportedrequesterrorseverity  : 1   ; // [20] unsupported request error severity0：non-fatal;1：fatal。
        unsigned int    reserved_37           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedseverity  : 1   ; // [24] atomicop egress blocked severity0：non-fatal;1：fatal。
        unsigned int    uncorr_err_ser        : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_aer_cap3_u;

// define the union ntb_eep_aer_cap4_u
// 高级错误报告寄存器
// 0x110
typedef union tageepaercap4
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrorstatus   : 1   ; // [0] receiver error status0：未检测到receiver error;1：检测到receiver error。
        unsigned int    reserved_42           : 5   ; // [5..1] reserved
        unsigned int    badtlpstatus          : 1   ; // [6] bad tlp status0：未检测到bad tlp;1：检测到bad tlp。
        unsigned int    baddllpstatus         : 1   ; // [7] bad dllp status0：未检测到bad dllp;1：检测到bad dllp。
        unsigned int    replay_numrolloverstatus  : 1   ; // [8] replay_num rollover status0：未检测到replay_num rollover;1：检测到replay_num rollover。
        unsigned int    reserved_41           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutstatus  : 1   ; // [12] reply timer timeout status0：未检测到reply timer timeout;1：检测到reply timer timeout。
        unsigned int    advisorynon_fatalerrorstatus  : 1   ; // [13] advisory non-fatal error status0：未检测到advisory non-fatal error;1：检测到advisory non-fatal error。
        unsigned int    corr_err_status       : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_aer_cap4_u;

// define the union ntb_eep_aer_cap5_u
// 高级错误报告寄存器
// 0x114
typedef union tageepaercap5
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrormask     : 1   ; // [0] receiver error mask0：receiver error is not masked;1：receiver error is masked。
        unsigned int    reserved_44           : 5   ; // [5..1] reserved
        unsigned int    badtlpmask            : 1   ; // [6] bad tlp mask0：bad tlp is not masked;1：bad tlp is masked。
        unsigned int    baddllpmask           : 1   ; // [7] bad dllp mask0：bad dllp is not masked;1：bad dllp is masked。
        unsigned int    replay_numrollovermask  : 1   ; // [8] replay_num rollover mask0：replay_num rollover is not masked;1：replay_num rollover is masked。
        unsigned int    reserved_43           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutmask  : 1   ; // [12] reply timer timeout mask0：reply timer timeout is not masked;1：reply timer timeout is masked。
        unsigned int    advisorynon_fatalerrormask  : 1   ; // [13] advisory non-fatal error mask0：advisory non-fatal error is not maskd;1：advisory non-fatal error is masked。
        unsigned int    corr_err_mask         : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_aer_cap5_u;

// define the union ntb_eep_aer_cap6_u
// 高级错误报告寄存器
// 0x118
typedef union tageepaercap6
{
    // define the struct bits
    struct
    {
        unsigned int    firsterrorpointer     : 5   ; // [4..0] first error pointer
        unsigned int    ecrcgenerationcapability  : 1   ; // [5] ecrc generation capability0：no capability;1：has capability。
        unsigned int    ecrcgenerationenable  : 1   ; // [6] ecrc generation enable0：disable;1：enable。
        unsigned int    ecrccheckcapable      : 1   ; // [7] ecrc check capable0：no capability;1：has capability。
        unsigned int    ecrccheckenable       : 1   ; // [8] ecrc check enable0：diable;1：enable。
        unsigned int    adv_cap_ctrl          : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_aer_cap6_u;

// define the union ntb_eep_vc_cap0_u
// 虚拟通道功能寄存器
// 0x148
typedef union tageepvccap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    next_cap_offset       : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_vc_cap0_u;

// define the union ntb_eep_vc_cap1_u
// 虚拟通道功能寄存器
// 0x14c
typedef union tageepvccap1
{
    // define the struct bits
    struct
    {
        unsigned int    extendedvccount       : 3   ; // [2..0] extended vc count
        unsigned int    reserved_47           : 1   ; // [3] reserved
        unsigned int    lowpriorityextendedvccount  : 3   ; // [6..4] low priority extended vc count
        unsigned int    reserved_46           : 1   ; // [7] reserved
        unsigned int    referenceclock        : 2   ; // [9..8] reference clock，不适用于endpoint，硬连线为0
        unsigned int    portarbitrationtableentrysize  : 2   ; // [11..10] port arbitration table entry size，不适用于endpoint，硬连线为0
        unsigned int    vc_cap1               : 20  ; // [31..12] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_vc_cap1_u;

// define the union ntb_eep_vc_cap2_u
// 虚拟通道功能寄存器
// 0x150
typedef union tageepvccap2
{
    // define the struct bits
    struct
    {
        unsigned int    vcarbitrationcapability  : 8   ; // [7..0] vc arbitration capability
        unsigned int    reserved_48           : 16  ; // [23..8] reserved
        unsigned int    vc_cap2               : 8   ; // [31..24] vc arbitration table offset，该版本ip不支持
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_vc_cap2_u;

// define the union ntb_eep_vc_cap3_u
// 虚拟通道功能寄存器
// 0x154
typedef union tageepvccap3
{
    // define the struct bits
    struct
    {
        unsigned int    loadvcarbitrationtable  : 1   ; // [0] load vc arbitration table
        unsigned int    vcarbitrationselect   : 3   ; // [3..1] vc arbitration select
        unsigned int    reserved_50           : 12  ; // [15..4] reserved
        unsigned int    arbitrationtablestatus  : 1   ; // [16] arbitration table status
        unsigned int    reserved_49           : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_vc_cap3_u;

// define the union ntb_eep_vc_cap4_u
// 虚拟通道功能寄存器
// 0x158
typedef union tageepvccap4
{
    // define the struct bits
    struct
    {
        unsigned int    portarbitrationcapability  : 8   ; // [7..0] port arbitration capability
        unsigned int    reserved_53           : 6   ; // [13..8] reserved
        unsigned int    reserved_52           : 1   ; // [14] 未定义
        unsigned int    rejectsnooptransactions  : 1   ; // [15] reject snoop transactions
        unsigned int    maximumtimeslots      : 7   ; // [22..16] maximum time slots
        unsigned int    reserved_51           : 1   ; // [23] reserved
        unsigned int    vc_res_cap0           : 8   ; // [31..24] port arbitration table offset，不适用于endpoint，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_vc_cap4_u;

// define the union ntb_eep_vc_cap5_u
// 虚拟通道功能寄存器
// 0x15c
typedef union tageepvccap5
{
    // define the struct bits
    struct
    {
        unsigned int    tc_vcmap_vc0          : 1   ; // [0] tc/vc map
        unsigned int    vc_tcmap_vc0_bit1     : 7   ; // [7..1] tc/vc map
        unsigned int    reserved_56           : 8   ; // [15..8] reserved
        unsigned int    loadportarbitrationtable  : 1   ; // [16] load port arbitration table
        unsigned int    portarbitrationselect  : 1   ; // [17] port arbitration select，对于endpoint硬连线为0
        unsigned int    reserved_55           : 6   ; // [23..18] 保留位
        unsigned int    vcid                  : 3   ; // [26..24] vc id
        unsigned int    reserved_54           : 4   ; // [30..27] reserved
        unsigned int    vc_res_ctrl0          : 1   ; // [31] vc enable0：vc禁用;1：vc使能。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_vc_cap5_u;

// define the union ntb_eep_vc_cap6_u
// 虚拟通道功能寄存器
// 0x160
typedef union tageepvccap6
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_57           : 16  ; // [15..0] reserved
        unsigned int    arbitrationtablestatus  : 1   ; // [16] arbitration table status
        unsigned int    vcnegotiationpending  : 1   ; // [17] vc negotiation pending
        unsigned int    vc_res_status0        : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_vc_cap6_u;

// define the union ntb_eep_port_logic0_u
// 端口逻辑寄存器
// 0x700
typedef union tageepportlogic0
{
    // define the struct bits
    struct
    {
        unsigned int    ack_lat_timer         : 16  ; // [15..0] round trip latency time limit
        unsigned int    replay_timer          : 16  ; // [31..16] replay time limit
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic0_u;

// define the union ntb_eep_port_logic2_u
// 端口逻辑寄存器
// 0x708
typedef union tageepportlogic2
{
    // define the struct bits
    struct
    {
        unsigned int    linknumber            : 8   ; // [7..0] link number，不适用于endpoint
        unsigned int    reserved_60           : 7   ; // [14..8] reserved
        unsigned int    forcelink             : 1   ; // [15] force link
        unsigned int    linkstate             : 6   ; // [21..16] link state
        unsigned int    reserved_59           : 2   ; // [23..22] reserved
        unsigned int    port_force_link       : 8   ; // [31..24] low power entrance count
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic2_u;

// define the union ntb_eep_port_logic3_u
// 端口逻辑寄存器
// 0x70c
typedef union tageepportlogic3
{
    // define the struct bits
    struct
    {
        unsigned int    ackfrequency          : 8   ; // [7..0] ack frequency
        unsigned int    n_fts                 : 8   ; // [15..8] n_fts
        unsigned int    commonclockn_fts      : 8   ; // [23..16] common clock n_fts
        unsigned int    l0sentrancelatency    : 3   ; // [26..24] l0s entrance latency000：1us;001：2us;010：3us;011：4us;100：5us;101：6us;110：7us;111：7us。
        unsigned int    l1entrancelatency     : 3   ; // [29..27] l1 entrance latency000：1us;001：2us;010：4us;011：8us;100：16us;101：32us;110：64us;111：64us。
        unsigned int    enteraspml1withoutreceiveinl0s  : 1   ; // [30] enter aspm l1 without receive in l0s0：发送接收端都处于l0s一段空闲时间后，core才能进入l1状态;
        unsigned int    ack_aspm              : 1   ; // [31] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic3_u;

// define the union ntb_eep_port_logic4_u
// 端口逻辑寄存器
// 0x710
typedef union tageepportlogic4
{
    // define the struct bits
    struct
    {
        unsigned int    vendorspecificdllprequest  : 1   ; // [0] vendor specific dllp request0：不发送vendor specific dllp register定义的dllp;1：发送vendor specific dllp register定义的dllp。
        unsigned int    scrambledisable       : 1   ; // [1] scramble disable0：禁用加扰;1：使能加扰。
        unsigned int    loopbackenable        : 1   ; // [2] loopback enable0：禁用loopback;1：使能loopback。
        unsigned int    resetassert           : 1   ; // [3] reset assert，不适用于ep0：不触发recovery状态;
        unsigned int    reserved_64           : 1   ; // [4] reserved
        unsigned int    dlllinkenable         : 1   ; // [5] dll link enable0：禁用initfc dllp发送以及建立链路;1：使能initfc dllp发送以及建立链路。
        unsigned int    reserved_63           : 1   ; // [6] reserved
        unsigned int    fastlinkmode          : 1   ; // [7] fast link mode0：禁用fast link mode;1：使能fast link mode。
        unsigned int    reserved_62           : 4   ; // [11..8] reserved
        unsigned int    link_rate             : 4   ; // [15..12]
        unsigned int    linkmodeenable        : 6   ; // [21..16] link mode enable000001：x1;
        unsigned int    croslinkenable        : 1   ; // [22] croslink enable0：禁用croslink;1：使能croslink。
        unsigned int    croslinkactive        : 1   ; // [23] croslink active0：未发生croslink;1：发生croslink。
        unsigned int    reserved_61           : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic4_u;

// define the union ntb_eep_port_logic5_u
// 端口逻辑寄存器
// 0x714
typedef union tageepportlogic5
{
    // define the struct bits
    struct
    {
        unsigned int    insertlaneskewfortransmit  : 24  ; // [23..0] insert lane skew for transmit
        unsigned int    flowcontroldisable    : 1   ; // [24] flow control disable0：不禁用core发送fc dllp;1：禁用core发送fc dllp。
        unsigned int    ack_nakdisable        : 1   ; // [25] ack/nak disable0：不禁用core发送ack/nak dllp;1：禁用core发送ack/nak dllp。
        unsigned int    reserved_65           : 5   ; // [30..26] reserved
        unsigned int    lane_skew             : 1   ; // [31] disable lane-to-lane deskew0：不禁用lane-to-lane deskew;1：禁用lane-to-lane deskew。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic5_u;

// define the union ntb_eep_port_logic6_u
// 端口逻辑寄存器
// 0x718
typedef union tageepportlogic6
{
    // define the struct bits
    struct
    {
        unsigned int    max_func_num          : 8   ; // [7..0]
        unsigned int    reserved_67           : 6   ; // [13..8]
        unsigned int    timer_mod_replay_timer  : 5   ; // [18..14]
        unsigned int    timer_mod_ack_nak     : 5   ; // [23..19]
        unsigned int    update_freq_timer     : 5   ; // [28..24]
        unsigned int    reserved_66           : 3   ; // [31..29]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic6_u;

// define the union ntb_eep_port_logic7_u
// 端口逻辑寄存器
// 0x71c
typedef union tageepportlogic7
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddataqueuedepth  : 11  ; // [10..0] skp interval value
        unsigned int    reserved_68           : 4   ; // [14..11] reserved
        unsigned int    sym_timer             : 1   ; // [15] disable fc watchdog timer0：不禁用fc watchdog timer;1：禁用fc watchdog timer。
        unsigned int    maskfunctionmismatchfilteringfo  : 1   ; // [16] mask function mismatch filtering for incoming requests0：不使用mask;1：使用mask。
        unsigned int    maskpoisonedtlpfiltering  : 1   ; // [17] mask poisoned tlp filtering0：不使用mask;1：使用mask。
        unsigned int    maskbarmatchfiltering  : 1   ; // [18] mask bar match filtering0：不使用mask;1：使用mask。
        unsigned int    masktype1configurationrequestfiltering  : 1   ; // [19] mask type 1 configuration request filtering0：不使用mask;1：使用mask。
        unsigned int    masklockedrequestfiltering  : 1   ; // [20] mask locked request filtering0：不使用mask;1：使用mask。
        unsigned int    masktagerrorrulesforreceivedcompletions  : 1   ; // [21] mask tag error rules for received completions0：不使用mask;1：使用mask。
        unsigned int    maskrequesteridmismatcherrorforreceivedcompletions  : 1   ; // [22] mask requester id mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maskfunctionmismatcherrorforreceivedcompletions  : 1   ; // [23] mask function mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_traffic_classmis_match_error_forreceived_completions  : 1   ; // [24] mask traffic class mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_attributesmismatcherrorforreceivedcompletions  : 1   ; // [25] mask attributes mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_length_mismatch_error_forreceive_dcompletions  : 1   ; // [26] mask length mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering  : 1   ; // [27] mask ecrc error filtering0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering_forcompletions  : 1   ; // [28] mask ecrc error filtering for completions0：不使用mask;1：使用mask。
        unsigned int    message_control       : 1   ; // [29] 0：send decoded message on the sii,then drop the message tlps;
        unsigned int    maskfilteringofreceived  : 1   ; // [30] mask filtering of received i/o requests (rc mode only)0：不使用mask;1：使用mask。
        unsigned int    flt_mask1             : 1   ; // [31] mask filtering of received configuration requests (rc mode only)0：不使用mask;1：使用mask。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic7_u;

// define the union ntb_eep_port_logic8_u
// 端口逻辑寄存器
// 0x720
typedef union tageepportlogic8
{
    // define the struct bits
    struct
    {
        unsigned int    cx_flt_mask_venmsg0_drop  : 1   ; // [0] cx_flt_mask_venmsg0_drop0：丢弃vendor msg type 0并报告ur错误;1：不丢弃vendor msg type 0。
        unsigned int    cx_flt_mask_venmsg1_drop  : 1   ; // [1] cx_flt_mask_venmsg1_drop0：丢弃vendor msg type 1;1：不丢弃vendor msg type 1。
        unsigned int    cx_flt_mask_dabort_4ucpl  : 1   ; // [2] cx_flt_mask_dabort_4ucpl0：对于unexpected cpl使能dllp abort;1：对于unexpected cpl禁用dllp abort。
        unsigned int    cx_flt_mask_handle_flush  : 1   ; // [3] cx_flt_mask_handle_flush0：禁用core filter处理flush请求;1：使能core filter处理flush请求。
        unsigned int    flt_mask2             : 28  ; // [31..4] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic8_u;

// define the union ntb_eep_port_logic9_u
// 端口逻辑寄存器
// 0x724
typedef union tageepportlogic9
{
    // define the struct bits
    struct
    {
        unsigned int    amba_multi_outbound_decomp_np  : 1   ; // [0] enable amba multiple outbound decomposed np sub-request0：禁用;1：使能。
        unsigned int    amba_obnp_ctrl        : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic9_u;

// define the union ntb_eep_port_logic12_u
// 端口逻辑寄存器
// 0x730
typedef union tageepportlogic12
{
    // define the struct bits
    struct
    {
        unsigned int    transmitposteddatafccredits  : 12  ; // [11..0] transmit posted data fc credits
        unsigned int    transmitpostedheaderfccredits  : 8   ; // [19..12] transmit posted header fc credits
        unsigned int    tx_pfc_status         : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic12_u;

// define the union ntb_eep_port_logic13_u
// 端口逻辑寄存器
// 0x734
typedef union tageepportlogic13
{
    // define the struct bits
    struct
    {
        unsigned int    transmitnon_posteddatafccredits  : 12  ; // [11..0] transmit non-posted data fc credits
        unsigned int    transmitnon_postedheaderfccredits  : 8   ; // [19..12] transmit non-posted header fc credits
        unsigned int    tx_npfc_status        : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic13_u;

// define the union ntb_eep_port_logic14_u
// 端口逻辑寄存器
// 0x738
typedef union tageepportlogic14
{
    // define the struct bits
    struct
    {
        unsigned int    transmitcompletiondatafccredits  : 12  ; // [11..0] transmit completion data fc credits
        unsigned int    transmitcompletionheaderfccredits  : 8   ; // [19..12] transmit completion header fc credits
        unsigned int    tx_cplfc_status       : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic14_u;

// define the union ntb_eep_port_logic15_u
// 端口逻辑寄存器
// 0x73c
typedef union tageepportlogic15
{
    // define the struct bits
    struct
    {
        unsigned int    rx_tlp_fc_credit_not_retured  : 1   ; // [0] received tlp fc credits not returnedindicates that the core has sent a tlp but has not yet received anupdatefc dllp indicating that the credits for that tlp have been restoredby the receiver at the other end of the link
        unsigned int    tx_retry_buf_not_empty  : 1   ; // [1] transmit retry buffer not emptyindicates that there is data in the transmit retry buffer.
        unsigned int    rx_queue_not_empty    : 1   ; // [2] received queue not emptyindicates there is data in one or more of the receive buffers
        unsigned int    reserved_70           : 13  ; // [15..3] reserved
        unsigned int    fc_latency_timer_override_value  : 13  ; // [28..16] fc latency timer override value
        unsigned int    reserved_69           : 2   ; // [30..29] reserved
        unsigned int    fc_latency_timer_override_en  : 1   ; // [31] fc latency timer override enable
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic15_u;

// define the union ntb_eep_port_logic16_u
// 端口逻辑寄存器
// 0x748
typedef union tageepportlogic16
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddatacredits  : 12  ; // [11..0] vc0 posted data credits
        unsigned int    vc0postedheadercredits  : 8   ; // [19..12] vc0 posted header credits
        unsigned int    reserved_72           : 1   ; // [20] reserved
        unsigned int    vc0_p_tlp_q_mode      : 3   ; // [23..21] vc0 posted tlp queue mode0：未选择store-and-forword;1：选择store-and-forword。
        unsigned int    reserved_71           : 6   ; // [29..24] reserved
        unsigned int    tlptypeorderingforvc0  : 1   ; // [30] tlp type ordering for vc00：strict ordering;1：ordering follows the rules in pcie 3.0。
        unsigned int    vc_ordering_rx_q      : 1   ; // [31] vc ordering for receive queues0：round robin;
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic16_u;

// define the union ntb_eep_port_logic17_u
// 端口逻辑寄存器
// 0x74c
typedef union tageepportlogic17
{
    // define the struct bits
    struct
    {
        unsigned int    vc0non_posteddatacredits  : 12  ; // [11..0] vc0 non-posted data credits
        unsigned int    vc0non_postedheadercredits  : 8   ; // [19..12] vc0 non-posted header credits
        unsigned int    reserved_75           : 1   ; // [20]
        unsigned int    vc0_np_tlp_q_mode     : 3   ; // [23..21]
        unsigned int    reserved_74           : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic17_u;

// define the union ntb_eep_port_logic18_u
// 端口逻辑寄存器
// 0x750
typedef union tageepportlogic18
{
    // define the struct bits
    struct
    {
        unsigned int    vco_comp_data_credits  : 12  ; // [11..0] vc0 completion data credits
        unsigned int    vc0_cpl_header_credt  : 8   ; // [19..12] vc0 completion header credits
        unsigned int    reserved_77           : 1   ; // [20]
        unsigned int    vc0_cpl_tlp_q_mode    : 3   ; // [23..21]
        unsigned int    reserved_76           : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic18_u;

// define the union ntb_eep_port_logic22_u
// 端口逻辑寄存器
// 0x980c
typedef union tageepportlogic22
{
    // define the struct bits
    struct
    {
        unsigned int    n_fts                 : 8   ; // [7..0] sets the number of fast training sequences (n_fts) that the core advertises as its n_fts during gen2 or gen3 link training
        unsigned int    num_of_lanes          : 5   ; // [12..8] predetermined number of lanes1：1 lane;
        unsigned int    pre_det_lane          : 3   ; // [15..13] directed speed change0：指示ltssm在链路初始化完成后不改变到gen2速率;1：指示ltssm在链路初始化完成后改变到gen2速率。
        unsigned int    auto_lane_flip_ctrl_en  : 1   ; // [16]
        unsigned int    direct_speed_change   : 1   ; // [17]
        unsigned int    config_phy_tx_change  : 1   ; // [18] config phy tx swing0：low swing;1：full swing。
        unsigned int    config_tx_comp_rx     : 1   ; // [19] config tx compliance receive bit0：不指示ltssm发送含有声明compliance接受比特的ts有序集;1：指示ltssm发送含有声明compliance接受比特的ts有序集。
        unsigned int    set_emp_level         : 1   ; // [20] used to set the de-emphasis level for upstream ports0：-6db;1：-3.5db。
        unsigned int    gen1_ei_interface     : 1   ; // [21]
        unsigned int    reserved_78           : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic22_u;

// define the union ntb_eep_port_logic54_u
// 端口逻辑寄存器
// 0x890
typedef union tageepportlogic54
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_zrxdc_noncompl   : 1   ; // [0]
        unsigned int    reserved_84           : 7   ; // [7..1]
        unsigned int    disable_scrambler_gen3  : 1   ; // [8]
        unsigned int    eq_phase_2_3          : 1   ; // [9]
        unsigned int    eq_eieos_cnt          : 1   ; // [10]
        unsigned int    eq_redo               : 1   ; // [11]
        unsigned int    rxeq_ph01_en          : 1   ; // [12]
        unsigned int    reserved_83           : 3   ; // [15..13]
        unsigned int    gen3_eq_disable       : 1   ; // [16]
        unsigned int    gen3_dllp_xmt_delay_disable  : 1   ; // [17]
        unsigned int    gen3_dc_balance_disable  : 1   ; // [18]
        unsigned int    reserved_82           : 13  ; // [31..19]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic54_u;

// define the union ntb_eep_port_logic55_u
// 端口逻辑寄存器
// 0x894
typedef union tageepportlogic55
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_local_lf      : 6   ; // [5..0]
        unsigned int    gen3_eq_local_fs      : 6   ; // [11..6]
        unsigned int    reserved_86           : 20  ; // [31..12]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic55_u;

// define the union ntb_eep_port_logic56_u
// 端口逻辑寄存器
// 0x898
typedef union tageepportlogic56
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_pre_cursor_pset  : 6   ; // [5..0]
        unsigned int    gen3_eq_cursor_pset   : 6   ; // [11..6]
        unsigned int    gen3_eq_post_cursor_pset  : 6   ; // [17..12]
        unsigned int    reserved_87           : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic56_u;

// define the union ntb_eep_port_logic57_u
// 端口逻辑寄存器
// 0x89c
typedef union tageepportlogic57
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_pset_index    : 4   ; // [3..0]
        unsigned int    reserved_88           : 28  ; // [31..4]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic57_u;

// define the union ntb_eep_port_logic58_u
// 端口逻辑寄存器
// 0x8a4
typedef union tageepportlogic58
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_vio_coef_rules  : 1   ; // [0]
        unsigned int    reserved_89           : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic58_u;

// define the union ntb_eep_port_logic59_u
// 端口逻辑寄存器
// 0x8a8
typedef union tageepportlogic59
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_fb_mode       : 4   ; // [3..0]
        unsigned int    gen3_eq_phase23_exit_mode  : 1   ; // [4]
        unsigned int    gen3_eq_eval_2ms_disable  : 1   ; // [5]
        unsigned int    reserved_92           : 2   ; // [7..6]
        unsigned int    gen3_eq_pset_req_vec  : 16  ; // [23..8]
        unsigned int    gen3_eq_fom_inc_ini_eval  : 1   ; // [24]
        unsigned int    gen3_eq_pset_req_as_coef  : 1   ; // [25]
        unsigned int    reserved_91           : 6   ; // [31..26]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic59_u;

// define the union ntb_eep_port_logic60_u
// 端口逻辑寄存器
// 0x8ac
typedef union tageepportlogic60
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_fmdc_t_min_phase23  : 5   ; // [4..0]
        unsigned int    gen3_eq_fmdc_n_evals  : 5   ; // [9..5]
        unsigned int    gen3_eq_fmdc_max_pre_cursor_delta  : 4   ; // [13..10]
        unsigned int    gen3_eq_fmdc_max_post_cursor_delta  : 4   ; // [17..14]
        unsigned int    reserved_93           : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic60_u;

// define the union ntb_eep_port_logic61_u
// 端口逻辑寄存器
// 0x8b8
typedef union tageepportlogic61
{
    // define the struct bits
    struct
    {
        unsigned int    lpbk_rxvalid          : 16  ; // [15..0]
        unsigned int    rxstatus_lane         : 6   ; // [21..16]
        unsigned int    reserved_95           : 2   ; // [23..22]
        unsigned int    rxstatus_value        : 3   ; // [26..24]
        unsigned int    reserved_94           : 4   ; // [30..27]
        unsigned int    pipe_lpbk             : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic61_u;

// define the union ntb_eep_port_logic62_u
// 端口逻辑寄存器
// 0x8bc
typedef union tageepportlogic62
{
    // define the struct bits
    struct
    {
        unsigned int    dbi_ro_wr_en          : 1   ; // [0]
        unsigned int    reserved_97           : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic62_u;

// define the union ntb_eep_port_logic63_u
// 端口逻辑寄存器
// 0x8d0
typedef union tageepportlogic63
{
    // define the struct bits
    struct
    {
        unsigned int    amba_err_resp_glb     : 1   ; // [0]
        unsigned int    reserved_99           : 1   ; // [1]
        unsigned int    amba_err_resp_vendorid  : 1   ; // [2]
        unsigned int    amba_err_resp_flush   : 1   ; // [3]
        unsigned int    reserved_98           : 28  ; // [31..4]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic63_u;

// define the union ntb_eep_port_logic64_u
// 端口逻辑寄存器
// 0x8d8
typedef union tageepportlogic64
{
    // define the struct bits
    struct
    {
        unsigned int    ax_mstr_np_pass_p     : 1   ; // [0]
        unsigned int    reserved_101          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic64_u;

// define the union ntb_eep_port_logic65_u
// 端口逻辑寄存器
// 0x8dc
typedef union tageepportlogic65
{
    // define the struct bits
    struct
    {
        unsigned int    amba_ordrmgr_wdog     : 16  ; // [15..0]
        unsigned int    reserved_103          : 15  ; // [30..16]
        unsigned int    amba_ordrmgr_wdog_en  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic65_u;

// define the union ntb_eep_port_logic66_u
// 端口逻辑寄存器
// 0x8e0
typedef union tageepportlogic66
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_memtype_value     : 1   ; // [0]
        unsigned int    reserved_104          : 1   ; // [1]
        unsigned int    cfg_memtype_boundary_low_addr  : 30  ; // [31..2]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic66_u;

// define the union ntb_eep_port_logic68_u
// 端口逻辑寄存器
// 0x8e8
typedef union tageepportlogic68
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_mstr_ardomain_mode  : 2   ; // [1..0]
        unsigned int    reserved_112          : 1   ; // [2]
        unsigned int    cfg_mstr_arcache_mode  : 4   ; // [6..3]
        unsigned int    reserved_111          : 1   ; // [7]
        unsigned int    cfg_mstr_awdomain_mode  : 2   ; // [9..8]
        unsigned int    reserved_110          : 1   ; // [10]
        unsigned int    cfg_mstr_awchache_mode  : 4   ; // [14..11]
        unsigned int    reserved_109          : 1   ; // [15]
        unsigned int    cfg_mstr_ardomain_value  : 2   ; // [17..16]
        unsigned int    reserved_108          : 1   ; // [18]
        unsigned int    cfg_mstr_arcache_value  : 4   ; // [22..19]
        unsigned int    reserved_107          : 1   ; // [23]
        unsigned int    cfg_mstr_awdomain_value  : 2   ; // [25..24]
        unsigned int    reserved_106          : 1   ; // [26]
        unsigned int    cfg_mstr_awcache_value  : 4   ; // [30..27]
        unsigned int    reserved_105          : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic68_u;

// define the union ntb_eep_port_logic69_u
// 端口逻辑寄存器
// 0x8fc
typedef union tageepportlogic69
{
    // define the struct bits
    struct
    {
        unsigned int    pl_last               : 1   ; // [0]
        unsigned int    reserved_113          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic69_u;

// define the union ntb_eep_port_logic70_u
// 端口逻辑寄存器
// 0x900
typedef union tageepportlogic70
{
    // define the struct bits
    struct
    {
        unsigned int    region_index          : 3   ; // [2..0] region direction0：outbound;1：inbound。
        unsigned int    reserved_115          : 28  ; // [30..3] reserved
        unsigned int    region_dir            : 1   ; // [31] region direction0：outbound;1：inbound。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic70_u;

// define the union ntb_eep_port_logic71_u
// 端口逻辑寄存器
// 0x904
typedef union tageepportlogic71
{
    // define the struct bits
    struct
    {
        unsigned int    iatu1_type            : 5   ; // [4..0] 出站tlp的地址在该区域内则该tlp的type字段用该值替换;入站tlp的type字段如果等于该值则执行地址转换。
        unsigned int    iatu1_tc              : 3   ; // [7..5] 出站tlp的地址在该区域内则该tlp的tc字段用该值替换;入站tlp的tc字段如果等于该值则执行地址转换。
        unsigned int    iatu1_td              : 1   ; // [8] 出站tlp的地址在该区域内则该tlp的td字段用该值替换;入站tlp的td字段如果等于该值则执行地址转换。
        unsigned int    iatu1_attr            : 2   ; // [10..9] 出站tlp的地址在该区域内则该tlp的attr字段用该值替换;入站tlp的attr字段如果等于该值则执行地址转换。
        unsigned int    reserved_118          : 5   ; // [15..11] reserved
        unsigned int    iatu1_at              : 2   ; // [17..16] 出站tlp的地址在该区域内则该tlp的at字段用该值替换;入站tlp的at字段如果等于该值则执行地址转换。
        unsigned int    reserved_117          : 2   ; // [19..18] reserved
        unsigned int    ctrl_1_func_num       : 5   ; // [24..20] 出站tlp的地址在该区域内则该tlp的requester id的功能号字段用该值替换;对于入站mem/io，如果与该功能号的bar匹配，则执行地址转换;对于入站cfg，如果功能号字段等于该值则执行地址转换。
        unsigned int    reserved_116          : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic71_u;

// define the union ntb_eep_port_logic72_u
// 端口逻辑寄存器
// 0x908
typedef union tageepportlogic72
{
    // define the struct bits
    struct
    {
        unsigned int    iatu2_msg_code        : 8   ; // [7..0] 出站tlp的地址在该区域内，并且转换的tlp的type字段为消息，那么该tlp的message code字段用该值替换;
        unsigned int    reserved_121          : 11  ; // [18..8] reserved
        unsigned int    func_bypass           : 1   ; // [19] function number translation bypass.
        unsigned int    reserved_120          : 7   ; // [26..20] reserved
        unsigned int    dma_bypass            : 1   ; // [27] dma bypass mode.
        unsigned int    cfg_shift_mode        : 1   ; // [28] cfg shift mode0：不使用cfg shift mode;1：使用cfg shift mode。
        unsigned int    invert_mode           : 1   ; // [29] invert mode0：不使用invert mode;1：使用invert mode。
        unsigned int    reserved_119          : 1   ; // [30] reserved
        unsigned int    iatu2_region_en       : 1   ; // [31] region enable0：禁用该区域地址转换;1：使能该区域地址转换。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic72_u;

// define the union ntb_eep_port_logic73_u
// 端口逻辑寄存器
// 0x90c
typedef union tageepportlogic73
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_low_base_hw      : 12  ; // [11..0] forms bits [11:0] of the start address of the address region to be translated.
        unsigned int    iatu_low_base_rw      : 20  ; // [31..12] forms bits [31:12] of the start address of the address region to be translated.
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic73_u;

// define the union ntb_eep_port_logic75_u
// 端口逻辑寄存器
// 0x914
typedef union tageepportlogic75
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_limit_hw         : 12  ; // [11..0] forms bits [11:0] of the end address of the address region to be translated
        unsigned int    iatu_limit_rw         : 20  ; // [31..12] forms bits [31:12] of the end address of the address region to be translated
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic75_u;

// define the union ntb_eep_port_logic76_u
// 端口逻辑寄存器
// 0x918
typedef union tageepportlogic76
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_lower_trgt_hw    : 12  ; // [11..0] forms bits [11:0] of the start address of the new address of the translated region
        unsigned int    iatu_lower_trgt_rw    : 20  ; // [31..12] forms bits [31:12] of the of the new address of the translated region
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic76_u;

// define the union ntb_eep_port_logic78_u
// 端口逻辑寄存器
// 0x920
typedef union tageepportlogic78
{
    // define the struct bits
    struct
    {
        unsigned int    vf_number             : 1   ; // [0] virtual function number
        unsigned int    reserved_122          : 30  ; // [30..1]
        unsigned int    vf_active             : 1   ; // [31] virtual function active
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic78_u;

// define the union ntb_eep_port_logic79_u
// 端口逻辑寄存器
// 0x978
typedef union tageepportlogic79
{
    // define the struct bits
    struct
    {
        unsigned int    num_dma_wr_chan       : 4   ; // [3..0] number of write channels.
        unsigned int    reserved_124          : 12  ; // [15..4] reserved
        unsigned int    num_dma_rd_chan       : 4   ; // [19..16] number of read channels
        unsigned int    reserved_123          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic79_u;

// define the union ntb_eep_port_logic80_u
// 端口逻辑寄存器
// 0x97c
typedef union tageepportlogic80
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_eng_en         : 1   ; // [0] dma write engine enable0：禁用dma write engine;1：使能dma write engine。
        unsigned int    reserved_126          : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic80_u;

// define the union ntb_eep_port_logic81_u
// 端口逻辑寄存器
// 0x980
typedef union tageepportlogic81
{
    // define the struct bits
    struct
    {
        unsigned int    wr_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma写操作，目前仅支持单通道。
        unsigned int    reserved_127          : 28  ; // [30..3] reserved
        unsigned int    dma_wr_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic81_u;

// define the union ntb_eep_port_logic82_u
// 端口逻辑寄存器
// 0x988
typedef union tageepportlogic82
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel0_weight    : 5   ; // [4..0] channel0 weight
        unsigned int    wr_channel1_weight    : 5   ; // [9..5] channel1 weight
        unsigned int    wr_channel2_weight    : 5   ; // [14..10] channel2 weight
        unsigned int    wr_channel3_weight    : 5   ; // [19..15] channel3 weight
        unsigned int    reserved_128          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic82_u;

// define the union ntb_eep_port_logic83_u
// 端口逻辑寄存器
// 0x98c
typedef union tageepportlogic83
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel4_weight    : 5   ; // [4..0]
        unsigned int    wr_channel5_weight    : 5   ; // [9..5]
        unsigned int    wr_channel6_weight    : 5   ; // [14..10]
        unsigned int    wr_channel7_weight    : 5   ; // [19..15]
        unsigned int    reserved_130          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic83_u;

// define the union ntb_eep_port_logic84_u
// 端口逻辑寄存器
// 0x998
typedef union tageepportlogic84
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_p_timer_lmt    : 12  ; // [11..0] dma tx posted request deadlock timeout value.0 : 2us1 : 4us...4095 : 8192us
        unsigned int    reserved_132          : 3   ; // [14..12]
        unsigned int    dma_wr_p_timer_disable  : 1   ; // [15]
        unsigned int    reserved_131          : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic84_u;

// define the union ntb_eep_port_logic85_u
// 端口逻辑寄存器
// 0x99c
typedef union tageepportlogic85
{
    // define the struct bits
    struct
    {
        unsigned int    dma_read_eng_en       : 1   ; // [0] dma read engine enable0：禁用dma read engine;1：使能dma read engine。
        unsigned int    reserved_134          : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic85_u;

// define the union ntb_eep_port_logic86_u
// 端口逻辑寄存器
// 0x9a0
typedef union tageepportlogic86
{
    // define the struct bits
    struct
    {
        unsigned int    rd_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma读操作，目前仅支持单通道。
        unsigned int    reserved_135          : 28  ; // [30..3] reserved
        unsigned int    dma_rd_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic86_u;

// define the union ntb_eep_port_logic87_u
// 端口逻辑寄存器
// 0x9a8
typedef union tageepportlogic87
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel0_weight    : 5   ; // [4..0]
        unsigned int    rd_channel1_weight    : 5   ; // [9..5]
        unsigned int    rd_channel2_weight    : 5   ; // [14..10]
        unsigned int    rd_channel3_weight    : 5   ; // [19..15]
        unsigned int    reserved_136          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic87_u;

// define the union ntb_eep_port_logic88_u
// 端口逻辑寄存器
// 0x9ac
typedef union tageepportlogic88
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel4_weight    : 5   ; // [4..0]
        unsigned int    rd_channel5_weight    : 5   ; // [9..5]
        unsigned int    rd_channel6_weight    : 5   ; // [14..10]
        unsigned int    rd_channel7_weight    : 5   ; // [19..15]
        unsigned int    reserved_138          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic88_u;

// define the union ntb_eep_port_logic89_u
// 端口逻辑寄存器
// 0x9bc
typedef union tageepportlogic89
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 8   ; // [7..0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_140          : 8   ; // [15..8] reserved
        unsigned int    abort_int_status      : 8   ; // [23..16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_139          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic89_u;

// define the union ntb_eep_port_logic90_u
// 端口逻辑寄存器
// 0x9c4
typedef union tageepportlogic90
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 8   ; // [7..0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_143          : 8   ; // [15..8] reserved
        unsigned int    abort_int_mask        : 8   ; // [23..16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    reserved_142          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic90_u;

// define the union ntb_eep_port_logic91_u
// 端口逻辑寄存器
// 0x9c8
typedef union tageepportlogic91
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 8   ; // [7..0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_146          : 8   ; // [15..8] reserved
        unsigned int    abort_int_clr         : 8   ; // [23..16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    reserved_145          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic91_u;

// define the union ntb_eep_port_logic92_u
// 端口逻辑寄存器
// 0x9cc
typedef union tageepportlogic92
{
    // define the struct bits
    struct
    {
        unsigned int    app_rd_err_det        : 8   ; // [7..0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_148          : 8   ; // [15..8] reserved
        unsigned int    ll_element_fetch_err_det  : 8   ; // [23..16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    reserved_147          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic92_u;

// define the union ntb_eep_port_logic97_u
// 端口逻辑寄存器
// 0x9e0
typedef union tageepportlogic97
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_c0_imwr_data   : 16  ; // [15..0] the dma uses this field to generate the data field for the done or abort imwr tlps it generates for write channel 0
        unsigned int    dma_wr_c1_imwr_data   : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic97_u;

// define the union ntb_eep_port_logic98_u
// 端口逻辑寄存器
// 0x9e4
typedef union tageepportlogic98
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel_2_data     : 16  ; // [15..0]
        unsigned int    wr_channel_3_data     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic98_u;

// define the union ntb_eep_port_logic99_u
// 端口逻辑寄存器
// 0x9e8
typedef union tageepportlogic99
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel_4_data     : 16  ; // [15..0]
        unsigned int    wr_channel_5_data     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic99_u;

// define the union ntb_eep_port_logic100_u
// 端口逻辑寄存器
// 0x9ec
typedef union tageepportlogic100
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel_6_data     : 16  ; // [15..0]
        unsigned int    wr_channel_7_data     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic100_u;

// define the union ntb_eep_port_logic101_u
// 端口逻辑寄存器
// 0xa00
typedef union tageepportlogic101
{
    // define the struct bits
    struct
    {
        unsigned int    wr_ch_ll_remote_abort_int_en  : 8   ; // [7..0] write channel ll remote abort interrupt enable (llraie)0：禁用write channel ll remote abort interrupt;1：使能write channel ll remote abort interrupt。
        unsigned int    reserved_150          : 8   ; // [15..8] reserved
        unsigned int    wr_ch_ll_local_abort_int_en  : 8   ; // [23..16] write channel ll local abort interrupt enable (lllaie)0：禁用write channel ll local abort interrupt;1：使能write channel ll local abort interrupt。
        unsigned int    reserved_149          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic101_u;

// define the union ntb_eep_port_logic102_u
// 端口逻辑寄存器
// 0xa10
typedef union tageepportlogic102
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 8   ; // [7..0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_153          : 8   ; // [15..8] reserved
        unsigned int    abort_int_status      : 8   ; // [23..16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_152          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic102_u;

// define the union ntb_eep_port_logic103_u
// 端口逻辑寄存器
// 0xa18
typedef union tageepportlogic103
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 8   ; // [7..0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_156          : 8   ; // [15..8] reserved
        unsigned int    abort_int_mask        : 8   ; // [23..16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    reserved_155          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic103_u;

// define the union ntb_eep_port_logic104_u
// 端口逻辑寄存器
// 0xa1c
typedef union tageepportlogic104
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 8   ; // [7..0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_159          : 8   ; // [15..8] reserved
        unsigned int    abort_int_clr         : 8   ; // [23..16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    reserved_158          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic104_u;

// define the union ntb_eep_port_logic105_u
// 端口逻辑寄存器
// 0xa24
typedef union tageepportlogic105
{
    // define the struct bits
    struct
    {
        unsigned int    app_wr_err_det        : 8   ; // [7..0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_161          : 8   ; // [15..8] reserved
        unsigned int    link_list_fetch_err_det  : 8   ; // [23..16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    reserved_160          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic105_u;

// define the union ntb_eep_port_logic106_u
// 端口逻辑寄存器
// 0xa28
typedef union tageepportlogic106
{
    // define the struct bits
    struct
    {
        unsigned int    unspt_request         : 8   ; // [7..0] unsupported request0：未检测到unsupported request;1：检测到unsupported request。
        unsigned int    completer_abort       : 8   ; // [15..8] completer abort0：未检测到completer abort;1：检测到completer abort。
        unsigned int    cpl_time_out          : 8   ; // [23..16] completion time out
        unsigned int    data_poison           : 8   ; // [31..24] data poisoning0：未检测到data poisoning;1：检测到data poisoning。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic106_u;

// define the union ntb_eep_port_logic107_u
// 端口逻辑寄存器
// 0xa34
typedef union tageepportlogic107
{
    // define the struct bits
    struct
    {
        unsigned int    remote_abort_int_en   : 8   ; // [7..0] read channel ll remote abort interrupt enable (llraie)0：禁用read channel ll remote abort interrupt;1：使能read channel ll remote abort interrupt。
        unsigned int    reserved_164          : 8   ; // [15..8] reserved
        unsigned int    local_abort_int_en    : 8   ; // [23..16] read channel ll local abort interrupt enable (lllaie)0：禁用read channel ll local abort interrupt;1：使能read channel ll local abort interrupt。
        unsigned int    reserved_163          : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic107_u;

// define the union ntb_eep_port_logic112_u
// 端口逻辑寄存器
// 0xa4c
typedef union tageepportlogic112
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel0_data      : 16  ; // [15..0]
        unsigned int    rd_channel1_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic112_u;

// define the union ntb_eep_port_logic113_u
// 端口逻辑寄存器
// 0xa50
typedef union tageepportlogic113
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel2_data      : 16  ; // [15..0]
        unsigned int    rd_channel3_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic113_u;

// define the union ntb_eep_port_logic114_u
// 端口逻辑寄存器
// 0xa54
typedef union tageepportlogic114
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel4_data      : 16  ; // [15..0]
        unsigned int    rd_channel5_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic114_u;

// define the union ntb_eep_port_logic115_u
// 端口逻辑寄存器
// 0xa58
typedef union tageepportlogic115
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel6_data      : 16  ; // [15..0]
        unsigned int    rd_channel7_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic115_u;

// define the union ntb_eep_port_logic116_u
// 端口逻辑寄存器
// 0xa6c
typedef union tageepportlogic116
{
    // define the struct bits
    struct
    {
        unsigned int    channel_num           : 3   ; // [2..0]
        unsigned int    reserved_167          : 28  ; // [30..3] reserved
        unsigned int    channel_dir           : 1   ; // [31] channel direction0：写通道0;1：读通道0。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic116_u;

// define the union ntb_eep_port_logic117_u
// 端口逻辑寄存器
// 0xa70
typedef union tageepportlogic117
{
    // define the struct bits
    struct
    {
        unsigned int    cycle_bit             : 1   ; // [0] cycle bit (cb)
        unsigned int    toggle_cycle_bit      : 1   ; // [1] toggle cycle bit (tcb)
        unsigned int    load_link_pointer     : 1   ; // [2] load link pointer (llp)
        unsigned int    local_int_en          : 1   ; // [3] local interrupt enable (lie)0：禁用local interrupt;1：使能local interrupt。
        unsigned int    remote_int_en         : 1   ; // [4] remote interrupt enable (rie)0：禁用remote interrupt;1：使能remote interrupt。
        unsigned int    channel_status        : 2   ; // [6..5] channel status00：保留;01：running;10：halted;11：stopped。
        unsigned int    reserved_171          : 1   ; // [7] reserved
        unsigned int    consumer_cycle_state  : 1   ; // [8] consumer cycle state (ccs)
        unsigned int    linked_list_en        : 1   ; // [9] linked list enable (lle)0：禁用linked list;1：使能linked list。
        unsigned int    reserved_170          : 2   ; // [11..10] reserved
        unsigned int    func_num_dma          : 5   ; // [16..12] function number (fn) for generated mrd/mwr dma tlps
        unsigned int    reserved_169          : 7   ; // [23..17] reserved
        unsigned int    no_snoop              : 1   ; // [24] no snoop tlp header bit (ns)
        unsigned int    ro                    : 1   ; // [25] relaxed ordering tlp header bit (ro)
        unsigned int    td                    : 1   ; // [26] traffic digest tlp header bit (td)
        unsigned int    tc                    : 3   ; // [29..27] traffic class tlp header bit (tc)
        unsigned int    dma_at                : 2   ; // [31..30] address translation tlp header bit (at)
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic117_u;

// define the union ntb_eep_port_logic118_u
// 端口逻辑寄存器
// 0xa74
typedef union tageepportlogic118
{
    // define the struct bits
    struct
    {
        unsigned int    dma_vf_en             : 1   ; // [0]
        unsigned int    dma_vf                : 8   ; // [8..1]
        unsigned int    reserved_172          : 23  ; // [31..9]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic118_u;

// define the union ntb_eep_port_logic126_u
// 端口逻辑寄存器
// 0xb30
typedef union tageepportlogic126
{
    // define the struct bits
    struct
    {
        unsigned int    snoop_latency_value   : 10  ; // [9..0]
        unsigned int    snoop_latency_scale   : 3   ; // [12..10]
        unsigned int    reserved_174          : 2   ; // [14..13]
        unsigned int    snoop_latency_require  : 1   ; // [15]
        unsigned int    no_snoop_latency_value  : 10  ; // [25..16]
        unsigned int    no_snoop_latency_scale  : 3   ; // [28..26]
        unsigned int    reserved_173          : 2   ; // [30..29]
        unsigned int    no_snoop_latency_require  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic126_u;

// define the union ntb_eep_port_logic127_u
// 端口逻辑寄存器
// 0xb40
typedef union tageepportlogic127
{
    // define the struct bits
    struct
    {
        unsigned int    aux_clk_freq          : 10  ; // [9..0]
        unsigned int    reserved_176          : 22  ; // [31..10]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_eep_port_logic127_u;

/******************************************************************************/
/*                      PhosphorV660 NTB_eEP_MMIO 寄存器定义                  */
/******************************************************************************/
#define NTB_MEEP_SBAR23XLAT_LOWER_REG  (0x0)  /* SBAR23地址转换寄存器低32位 */
#define NTB_MEEP_SBAR23XLAT_UPPER_REG  (0x4)  /* SBAR23地址转换寄存器高32位 */
#define NTB_MEEP_SBAR45XLAT_LOWER_REG  (0x8)  /* SBAR45地址转换寄存器低32位 */
#define NTB_MEEP_SBAR45XLAT_UPPER_REG  (0xC)  /* SBAR45地址转换寄存器高32位 */
#define NTB_MEEP_SBAR23LMT_LOWER_REG  (0x10)  /* SBAR23的limit寄存器低32位 */
#define NTB_MEEP_SBAR23LMT_UPPER_REG  (0x14)  /* SBAR23的limit寄存器高32位 */
#define NTB_MEEP_SBAR45LMT_LOWER_REG  (0x18)  /* SBAR45的limit寄存器低32位 */
#define NTB_MEEP_SBAR45LMT_UPPER_REG  (0x1C)  /* SBAR45的limit寄存器高32位 */
#define NTB_MEEP_SDOORBELL_REG   (0x20)  /* Secondary侧的门铃寄存器 */
#define NTB_MEEP_SDOORBELL_MASK_REG  (0x24)  /* Secondary侧的门铃屏蔽寄存器 */
#define NTB_MEEP_NTB_CNTL_REG    (0x2C)  /* NTB控制寄存器 */
#define NTB_MEEP_CFG_HDR0_REG  (0x1000)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR1_REG  (0x1004)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR2_REG  (0x1008)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR3_REG  (0x100C)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR4_REG  (0x1010)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR5_REG  (0x1014)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR6_REG  (0x1018)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR7_REG  (0x101C)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR8_REG  (0x1020)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR9_REG  (0x1024)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR10_REG  (0x1028)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR11_REG  (0x102C)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR12_REG  (0x1030)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR13_REG  (0x1034)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR14_REG  (0x1038)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_CFG_HDR15_REG  (0x103C)  /* PCI兼容配置头空间寄存器 */
#define NTB_MEEP_PM_CAP0_REG  (0x1040)  /* PCI电源管理功能寄存器 */
#define NTB_MEEP_PM_CAP1_REG  (0x1044)  /* PCI电源管理功能寄存器 */
#define NTB_MEEP_MSI_CAP0_REG  (0x1050)  /* PCI MSI功能寄存器 */
#define NTB_MEEP_MSI_CAP1_REG  (0x1054)  /* PCI MSI功能寄存器 */
#define NTB_MEEP_MSI_CAP2_REG  (0x1058)  /* PCI MSI功能寄存器 */
#define NTB_MEEP_MSI_CAP3_REG  (0x105C)  /* PCI MSI功能寄存器 */
#define NTB_MEEP_MSI_CAP4_REG  (0x1060)  /* PCI MSI功能寄存器 */
#define NTB_MEEP_MSI_CAP5_REG  (0x1064)  /* PCI MSI功能寄存器 */
#define NTB_MEEP_CAP0_REG   (0x1070)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP1_REG   (0x1074)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP2_REG   (0x1078)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP3_REG   (0x107C)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP4_REG   (0x1080)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP9_REG   (0x1094)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP10_REG  (0x1098)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP11_REG  (0x109C)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP12_REG  (0x10A0)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP13_REG  (0x10B0)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP14_REG  (0x10B4)  /* PCI Express功能寄存器 */
#define NTB_MEEP_CAP15_REG  (0x10B8)  /* PCI Express功能寄存器 */
#define NTB_MEEP_AER_CAP0_REG    (0x1100)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP1_REG    (0x1104)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP2_REG    (0x1108)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP3_REG    (0x110C)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP4_REG    (0x1110)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP5_REG    (0x1114)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP6_REG    (0x1118)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP7_REG    (0x111C)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP8_REG    (0x1120)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP9_REG    (0x1124)  /* 高级错误报告寄存器 */
#define NTB_MEEP_AER_CAP10_REG   (0x1128)  /* 高级错误报告寄存器 */
#define NTB_MEEP_VC_CAP0_REG     (0x1148)  /* 虚拟通道功能寄存器 */
#define NTB_MEEP_VC_CAP1_REG     (0x114C)  /* 虚拟通道功能寄存器 */
#define NTB_MEEP_VC_CAP2_REG     (0x1150)  /* 虚拟通道功能寄存器 */
#define NTB_MEEP_VC_CAP3_REG     (0x1154)  /* 虚拟通道功能寄存器 */
#define NTB_MEEP_VC_CAP4_REG     (0x1158)  /* 虚拟通道功能寄存器 */
#define NTB_MEEP_VC_CAP5_REG     (0x115C)  /* 虚拟通道功能寄存器 */
#define NTB_MEEP_VC_CAP6_REG     (0x1160)  /* 虚拟通道功能寄存器 */
#define NTB_MEEP_ARI_CAP0_REG    (0x1168)  /* ARI功能寄存器 */
#define NTB_MEEP_ARI_CAP1_REG    (0x116C)  /* ARI功能寄存器 */
#define NTB_MEEP_SPCIE_CAP4_REG  (0x1188)  /* SPCIE功能寄存器 */
#define NTB_MEEP_PORT_LOGIC0_REG  (0x1700)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC1_REG  (0x1704)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC2_REG  (0x1708)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC3_REG  (0x170C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC4_REG  (0x1710)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC5_REG  (0x1714)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC6_REG  (0x1718)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC7_REG  (0x171C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC8_REG  (0x1720)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC9_REG  (0x1724)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC10_REG  (0x1728)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC11_REG  (0x172C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC12_REG  (0x1730)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC13_REG  (0x1734)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC14_REG  (0x1738)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC15_REG  (0x173C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC16_REG  (0x1748)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC17_REG  (0x174C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC18_REG  (0x9750)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC22_REG  (0x980C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC23_REG  (0x1810)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC24_REG  (0x1814)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC27_REG  (0x1820)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC28_REG  (0x1824)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC29_REG  (0x1828)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC30_REG  (0x182C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC31_REG  (0x1830)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC32_REG  (0x1834)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC33_REG  (0x1838)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC34_REG  (0x183C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC35_REG  (0x1840)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC36_REG  (0x1844)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC37_REG  (0x1848)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC38_REG  (0x184C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC39_REG  (0x1850)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC40_REG  (0x1854)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC41_REG  (0x1858)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC42_REG  (0x185C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC43_REG  (0x1860)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC44_REG  (0x1864)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC45_REG  (0x1868)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC46_REG  (0x186C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC47_REG  (0x1870)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC48_REG  (0x1874)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC49_REG  (0x1878)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC50_REG  (0x187C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC51_REG  (0x1880)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC52_REG  (0x1884)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC53_REG  (0x1888)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC54_REG  (0x1890)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC55_REG  (0x1894)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC56_REG  (0x1898)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC57_REG  (0x189C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC58_REG  (0x18A4)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC59_REG  (0x18A8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC60_REG  (0x18AC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC61_REG  (0x18B8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC62_REG  (0x18BC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC63_REG  (0x18D0)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC64_REG  (0x18D8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC65_REG  (0x18DC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC66_REG  (0x18E0)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC67_REG  (0x18E4)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC68_REG  (0x18E8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC69_REG  (0x18FC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC70_REG  (0x1900)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC71_REG  (0x1904)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC72_REG  (0x1908)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC73_REG  (0x190C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC74_REG  (0x1910)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC75_REG  (0x1914)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC76_REG  (0x1918)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC77_REG  (0x191C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC78_REG  (0x1920)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC79_REG  (0x1978)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC80_REG  (0x197C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC81_REG  (0x1980)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC82_REG  (0x1988)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC83_REG  (0x198C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC84_REG  (0x1998)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC85_REG  (0x199C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC86_REG  (0x19A0)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC87_REG  (0x19A8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC88_REG  (0x19AC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC89_REG  (0x19BC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC90_REG  (0x19C4)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC91_REG  (0x19C8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC92_REG  (0x19CC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC93_REG  (0x19D0)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC94_REG  (0x19D4)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC95_REG  (0x19D8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC96_REG  (0x19DC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC97_REG  (0x19E0)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC98_REG  (0x9E4)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC99_REG  (0x9E8)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC100_REG  (0x9EC)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC101_REG  (0x1A00)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC102_REG  (0x1A10)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC103_REG  (0x1A18)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC104_REG  (0x1A1C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC105_REG  (0x1A24)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC106_REG  (0x1A28)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC107_REG  (0x1A34)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC108_REG  (0x1A3C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC109_REG  (0x1A40)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC110_REG  (0x1A44)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC111_REG  (0x1A48)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC112_REG  (0x1A4C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC113_REG  (0x1A50)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC114_REG  (0x1A54)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC115_REG  (0x1A58)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC116_REG  (0x1A6C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC117_REG  (0x1A70)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC118_REG  (0x1A74)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC119_REG  (0x1A78)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC120_REG  (0x1A7C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC121_REG  (0x1A80)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC122_REG  (0x1A84)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC123_REG  (0x1A88)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC124_REG  (0x1A8C)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC125_REG  (0x1A90)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC126_REG  (0x1B30)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PORT_LOGIC127_REG  (0x1B40)  /* 端口逻辑寄存器 */
#define NTB_MEEP_PBAR23XLAT_LOWER_REG  (0x8000)  /* PBAR23地址转换寄存器低32位 */
#define NTB_MEEP_PBAR23XLAT_UPPER_REG  (0x8004)  /* PBAR23地址转换寄存器高32位 */
#define NTB_MEEP_PBAR45XLAT_LOWER_REG  (0x8008)  /* PBAR45地址转换寄存器低32位 */
#define NTB_MEEP_PBAR45XLAT_UPPER_REG  (0x800C)  /* PBAR45地址转换寄存器高32位 */
#define NTB_MEEP_PBAR23LMT_LOWER_REG  (0x8010)  /* PBAR23的limit寄存器低32位 */
#define NTB_MEEP_PBAR23LMT_UPPER_REG  (0x8014)  /* PBAR23的limit寄存器高32位 */
#define NTB_MEEP_PBAR45LMT_LOWER_REG  (0x8018)  /* PBAR45的limit寄存器低32位 */
#define NTB_MEEP_PBAR45LMT_UPPER_REG  (0x801C)  /* PBAR45的limit寄存器高32位 */
#define NTB_MEEP_PDOORBELL_REG   (0x8020)  /* Primary侧的门铃寄存器 */
#define NTB_MEEP_PDOORBELL_MASK_REG  (0x8024)  /* Primary侧的门铃屏蔽寄存器 */
#define NTB_MEEP_B2B_BAR01XLAT_LOWER_REG  (0x8028)  /* B2B模式PBAR01地址转换寄存器低32位 */
#define NTB_MEEP_B2B_BAR01XLAT_UPPER_REG  (0x802C)  /* B2B模式PBAR01地址转换寄存器高32位 */
#define NTB_MEEP_B2B_DOORBELL_REG  (0x8030)  /* B2B模式下的DOORBELL寄存器 */
#define NTB_MEEP_SPAD0_REG       (0x8038)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD1_REG       (0x803C)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD2_REG       (0x8040)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD3_REG       (0x8044)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD4_REG       (0x8048)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD5_REG       (0x804C)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD6_REG       (0x8050)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD7_REG       (0x8054)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD8_REG       (0x8058)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD9_REG       (0x805C)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD10_REG      (0x8060)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD11_REG      (0x8064)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD12_REG      (0x8068)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD13_REG      (0x806C)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD14_REG      (0x8070)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD15_REG      (0x8074)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD16_REG      (0x8078)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD17_REG      (0x807C)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD18_REG      (0x8080)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD19_REG      (0x8084)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD20_REG      (0x8088)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD21_REG      (0x808C)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD22_REG      (0x8090)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD23_REG      (0x8094)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD24_REG      (0x8098)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD25_REG      (0x809C)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD26_REG      (0x80A0)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD27_REG      (0x80A4)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD28_REG      (0x80A8)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD29_REG      (0x80AC)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD30_REG      (0x80B0)  /* 便签本寄存器 */
#define NTB_MEEP_SPAD31_REG      (0x80B4)  /* 便签本寄存器 */
#define NTB_MEEP_PPD_REG         (0x8138)  /* 端口定义寄存器 */
#define NTB_MEEP_DEVICE_VENDOR_ID_REG  (0x9000)  /* 设备ID和厂商ID */
#define NTB_MEEP_PCISTS_PCICMD_REG  (0x9004)  /* 控制和状况寄存器 */
#define NTB_MEEP_CCR_RID_REG     (0x9008)  /* 类代码和修订版ID */
#define NTB_MEEP_PBAR01_BASE_LOWER_REG  (0x9010)  /* 基地址寄存器01低32位 */
#define NTB_MEEP_PBAR01_BASE_UPPER_REG  (0x9014)  /* 基地址寄存器01高32位 */
#define NTB_MEEP_PBAR23_BASE_LOWER_REG  (0x9018)  /* 基地址寄存器23低32位 */
#define NTB_MEEP_PBAR23_BASE_UPPER_REG  (0x901C)  /* 基地址寄存器23低32位 */
#define NTB_MEEP_PBAR45_BASE_LOWER_REG  (0x9020)  /* 基地址寄存器45高32位 */
#define NTB_MEEP_PBAR45_BASE_UPPER_REG  (0x9024)  /* 基地址寄存器45高32位 */
#define NTB_MEEP_CARDBUSCISPTR_REG  (0x9028)  /* Card Bus CIS指针 */
#define NTB_MEEP_SUBSYSTEMID_REG  (0x902C)  /* 子系统Vendor ID */
#define NTB_MEEP_EXPANSIONROM_BASE_ADDR_REG  (0x9030)  /* 扩展ROM基地址 */
#define NTB_MEEP_CAPPTR_REG      (0x9034)  /* 功能指针 */
#define NTB_MEEP_INTERRUPT_REG   (0x903C)  /* 中断引脚，中断线 */
#define NTB_MEEP_MSI_CAPABILITY_REGISTER_REG  (0x9050)  /* MSI功能寄存器 */
#define NTB_MEEP_MSI_LOWER32_BITADDRESS_REG  (0x9054)  /* MSI低32位地址寄存器 */
#define NTB_MEEP_MSI_UPPER32_BIT_ADDRESS_REG  (0x9058)  /* MSI高32位地址寄存器 */
#define NTB_MEEP_MSI_DATA_REG    (0x905C)  /* MSI数据 */
#define NTB_MEEP_MSI_MASK_REG    (0x9060)  /* MSI屏蔽寄存器 */
#define NTB_MEEP_MSI_PENDING_REG  (0x9064)  /* MSI状态寄存器 */
#define NTB_MEEP_CAPABILITY_REGISTER_REG  (0x9070)  /* PCIe功能寄存器组 */
#define NTB_MEEP_DEVICE_CAPABILITIES_REGISTER_REG  (0x9074)  /* 设备功能寄存器 */
#define NTB_MEEP_DEVICE_STATUS_REGISTER_REG  (0x9078)  /* 设备状况和控制寄存器 */
#define NTB_MEEP_LINK_CAPABILITY_REG  (0x907C)  /* 链路功能寄存器 */
#define NTB_MEEP_LINK_CONTROL_STATUS_REG  (0x9080)  /* 链路控制和状况寄存器 */
#define NTB_MEEP_AER_CAP_HEADER_REG  (0x9100)  /* AER功能寄存器头 */
#define NTB_MEEP_UC_ERROR_STATUS_REG  (0x9104)  /* 不可修正错误状况寄存器 */
#define NTB_MEEP_UC_ERROR_MASK_REG  (0x9108)  /* 不可修正错误屏蔽寄存器 */
#define NTB_MEEP_UC_ERROR_SEVERITY_REG  (0x910C)  /* 不可修正错误严重程度寄存器 */
#define NTB_MEEP_C_ERROR_STATUS_REG  (0x9110)  /* 可修正错误状况寄存器 */
#define NTB_MEEP_C_ERROR_MASK_REG  (0x9114)  /* 可修正错误屏蔽寄存器 */
#define NTB_MEEP_ADVANCED_ERROR_CAPABILITIES_AND_CONTROL_REG  (0x9118)  /* AER 功能和控制寄存器 */
#define NTB_MEEP_HEADER_LOG_REGISTERS_1_REG  (0x911C)  /* 头日志寄存器1 */
#define NTB_MEEP_HEADER_LOG_REGISTERS_2_REG  (0x9120)  /* 头日志寄存器2 */
#define NTB_MEEP_HEADER_LOG_REGISTERS_3_REG  (0x9124)  /* 头日志寄存器3 */
#define NTB_MEEP_HEADER_LOG_REGISTERS_4_REG  (0x9128)  /* 头日志寄存器4 */
#define NTB_MEEP_TLP_PREFIX_LOGREGISTERS_1_REG  (0x9130)  /* TLP前缀日志寄存器1 */
#define NTB_MEEP_TLP_PREFIX_LOGREGISTERS_2_REG  (0x9134)  /* TLP前缀日志寄存器2 */
#define NTB_MEEP_TLP_PREFIX_LOGREGISTERS_3_REG  (0x9138)  /* TLP前缀日志寄存器3 */
#define NTB_MEEP_TLP_PREFIX_LOGREGISTERS_4_REG  (0x913C)  /* TLP前缀日志寄存器4 */
#define NTB_MEEP_NTB_IEP_CONFIG_SPACE_LOWER_REG  (0x9700)  /* iEP配置空间低32位地址 */
#define NTB_MEEP_NTB_IEP_CONFIG_SPACE_UPPER_REG  (0x9704)  /* iEP配置空间低32位地址 */
#define NTB_MEEP_NTB_IEP_BAR01_CTRL_REG  (0x9708)  /* 映射到BAR01空间的TLP头控制寄存器 */
#define NTB_MEEP_NTB_IEP_BAR23_CTRL_REG  (0x970C)  /* 映射到BAR23空间的TLP头控制寄存器 */
#define NTB_MEEP_NTB_IEP_BAR45_CTRL_REG  (0x9710)  /* 映射到BAR45空间的TLP头控制寄存器 */
#define NTB_MEEP_MSI_CTRL_ADDRESS_LOWER_REG  (0x9714)  /* MSI控制器低32位地址 */
#define NTB_MEEP_MSI_CTRL_ADDRESS_UPPER_REG  (0x9718)  /* MSI控制器低32位地址 */
#define NTB_MEEP_MSI_CTRL_INT_EN_REG  (0x971C)  /* MSI Interrupt使能信号 */
#define NTB_MEEP_MSI_CTRL_INT0_MASK_REG  (0x9720)  /* MSI Interrupt屏蔽信号 */
#define NTB_MEEP_MSI_CTRL_INT_STATUS_REG  (0x9724)  /* MSI Interrupt状态标志 */
#define NTB_MEEP_DBI_RO_WR_EN_REG  (0x9728)  /* 写Read-Only控制寄存器 */
#define NTB_MEEP_AXI_ERR_RESPONSE_REG  (0x972C)  /* AXI总线ErrorResponse控制寄存器 */
#define NTB_MEEP_NTB_OUTBOUND_FLOW_REG  (0x971C)  /* NTB Outbound流量统计状态寄存器 */
#define NTB_MEEP_NTB_HDR_CTRL_STATUS_REG  (0x9720)  /* NTB Header Ctrl Status */
#define NTB_MEEP_DEV_TYPE_SWITCH_REG  (0x9734)  /* 设备类型切换寄存器 */
// define the union ntb_meep_sbar23xlat_lower_u
// sbar23地址转换寄存器低32位
// 0x0
typedef union tagmeepsbar23xlatlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_0            : 16  ; // [15..0] 保留
        unsigned int    sbar23xlat_lower      : 16  ; // [31..16] sbar23地址转换寄存器低32位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_sbar23xlat_lower_u;

// define the union ntb_meep_sbar45xlat_lower_u
// sbar45地址转换寄存器低32位
// 0x8
typedef union tagmeepsbar45xlatlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_1            : 16  ; // [15..0] 保留
        unsigned int    sbar45xlat_lower      : 16  ; // [31..16] sbar45地址转换寄存器低32位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_sbar45xlat_lower_u;

// define the union ntb_meep_sbar23lmt_lower_u
// sbar23的limit寄存器低32位
// 0x10
typedef union tagmeepsbar23lmtlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_2            : 16  ; // [15..0] 保留
        unsigned int    sbar23limit_lower     : 16  ; // [31..16] sbar23 limit寄存器的低32位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_sbar23lmt_lower_u;

// define the union ntb_meep_sbar45lmt_lower_u
// sbar45的limit寄存器低32位
// 0x18
typedef union tagmeepsbar45lmtlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_3            : 16  ; // [15..0] 保留
        unsigned int    sbar45limit_lower     : 16  ; // [31..16] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_sbar45lmt_lower_u;

// define the union ntb_meep_sbar45lmt_upper_u
// sbar45的limit寄存器高32位
// 0x1c
typedef union tagmeepsbar45lmtupper
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_4            : 16  ; // [15..0] 保留
        unsigned int    sbar45limit_upper     : 16  ; // [31..16] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_sbar45lmt_upper_u;

// define the union ntb_meep_ntb_cntl_u
// ntb控制寄存器
// 0x2c
typedef union tagmeepntbcntl
{
    // define the struct bits
    struct
    {
        unsigned int    s_link_disable        : 1   ; // [0] 在ntb-to-rp模式下，只有当该位置起时，remote cpu才可以访问seconadry侧的配置空间，该位对于local cpu是rw的，对于remote cpu来说是ro的。
        unsigned int    reserved_6            : 1   ; // [1] 保留位
        unsigned int    eep_shadow_en         : 1   ; // [2] 访问eep的shadow寄存器，例如eep的bar mask寄存器，访问之前需要将该位写为1，访问结束以后，需要将该位写为0。
        unsigned int    reserved_5            : 29  ; // [31..3] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ntb_cntl_u;

// define the union ntb_meep_pci_cfg_hdr0_u
// pci兼容配置头空间寄存器
// 0x1000
typedef union tagmeeppcicfghdr0
{
    // define the struct bits
    struct
    {
        unsigned int    vendor_id             : 16  ; // [15..0] 厂商id号
        unsigned int    device_id             : 16  ; // [31..16] 设备id号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr0_u;

// define the union ntb_meep_pci_cfg_hdr1_u
// pci兼容配置头空间寄存器
// 0x1004
typedef union tagmeeppcicfghdr1
{
    // define the struct bits
    struct
    {
        unsigned int    io_space_enable       : 1   ; // [0] i/o sapace enable0：该设备不能响应i/o请求;1：该设备能够响应i/o请求。
        unsigned int    memory_space_enable   : 1   ; // [1] memory space enable0：该设备不能响应存储器请求;1：该设备能够响应存储器请求。
        unsigned int    bus_master_enable     : 1   ; // [2] bus master enable0：该设备不能作为主设备;1：该设备能够作为主设备。
        unsigned int    specialcycleenable    : 1   ; // [3] special cycle enalbe不适用于pcie，硬连线为0
        unsigned int    memory_write_and_invalidate  : 1   ; // [4] memory write and invalidata不适用于pcie，硬连线为0
        unsigned int    vga_palette_snoop_enable  : 1   ; // [5] vga palette snoop不适用于pcie，硬连线为0
        unsigned int    parity_error_response  : 1   ; // [6] parity error response0：对奇偶校验错误不作出响应;1：对奇偶校验错误作出响应。
        unsigned int    idsel_stepping_waitcycle_control  : 1   ; // [7] idsel stepping/wait cycle control不适用于pcie，硬连线为0
        unsigned int    serr_enable           : 1   ; // [8] serr#信号使能0：可以使用serr#信号;
        unsigned int    fastback_to_backenable  : 1   ; // [9] faster back-to-back enaable不适用于pcie，硬连线为0
        unsigned int    interrupt_disable     : 1   ; // [10] intx assertion disable0：允许使用intx方式提交中断;1：禁用intx方式提交中断。
        unsigned int    reserved_11           : 5   ; // [15..11] reserved
        unsigned int    reserved_10           : 3   ; // [18..16] reserved
        unsigned int    intx_status           : 1   ; // [19] intx status0：设备未使用intx方式向处理器提交了中断请求;1：设备使用intx方式向处理器提交了中断请求。
        unsigned int    capabilitieslist      : 1   ; // [20] capabilities list指示capability pointer寄存器中的值有效，硬连线为1
        unsigned int    pcibus66mhzcapable    : 1   ; // [21] 66mhz capable不适用于pcie，硬连线为0
        unsigned int    reserved_9            : 1   ; // [22] reserved
        unsigned int    fastback_to_back      : 1   ; // [23] faster back-to-back capable不适用于pcie，硬连线为0
        unsigned int    masterdataparityerror  : 1   ; // [24] master data parity error0：除置一条件满足之外的其他情况;1：perr#信号有效，或者总线出现数据传输错误时，或者command寄存器的parity error response位为1时。
        unsigned int    devsel_timing         : 2   ; // [26..25] devsel timing不适用于pcie，硬连线为0
        unsigned int    signaled_target_abort  : 1   ; // [27] signaled target abort由pci目标设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_target_abort  : 1   ; // [28] received target abort由pci主设备设置0：未发生目标设备夭折时序;1：发生目标设备夭折时序。
        unsigned int    received_master_abort  : 1   ; // [29] received master abort由pci主设备设置0：未发生主设备夭折时序;1：发生主设备夭折时序。
        unsigned int    signaled_system_error  : 1   ; // [30] signaled system error0：serr#信号无效;1：serr#信号有效。
        unsigned int    detected_parity_error  : 1   ; // [31] detected parity error0：未检测到奇偶校验错误;1：检测到奇偶校验错误。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr1_u;

// define the union ntb_meep_pci_cfg_hdr2_u
// pci兼容配置头空间寄存器
// 0x1008
typedef union tagmeeppcicfghdr2
{
    // define the struct bits
    struct
    {
        unsigned int    revision_identification  : 8   ; // [7..0] revision idpcie设备的版本号
        unsigned int    reserved_12           : 8   ; // [15..8] programming interface
        unsigned int    sub_class             : 8   ; // [23..16] subclass code
        unsigned int    baseclass             : 8   ; // [31..24] base class code
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr2_u;

// define the union ntb_meep_pci_cfg_hdr3_u
// pci兼容配置头空间寄存器
// 0x100c
typedef union tagmeeppcicfghdr3
{
    // define the struct bits
    struct
    {
        unsigned int    cache_line_size       : 8   ; // [7..0] cache line size不适用于pcie设备，对此寄存器执行写操作不会影响pcie core的功能
        unsigned int    mstr_lat_tmr          : 8   ; // [15..8] master latency timer不适用于pcie设备，硬连线为0
        unsigned int    hdr_type              : 7   ; // [22..16] configuration header format0：type0配置头空间;1：type1配置头空间。
        unsigned int    multi_function_device  : 1   ; // [23] multi function device0：单功能设备;1：多功能设备。
        unsigned int    bist                  : 8   ; // [31..24] bist register该版本ip不支持该功能，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr3_u;

// define the union ntb_meep_pci_cfg_hdr4_u
// pci兼容配置头空间寄存器
// 0x1010
typedef union tagmeeppcicfghdr4
{
    // define the struct bits
    struct
    {
        unsigned int    sbar01_space_inicator  : 1   ; // [0] 指示bar类型0：memory bar;1：i/o bar。
        unsigned int    sbar01_type           : 2   ; // [2..1] 指示memory bar类型00：32-bit bar;10：64-bit bar;01：保留;11：保留。
        unsigned int    sbar01_prefetchable   : 1   ; // [3] 指示memory bar是否可预取0：不可预取;1：可预取。
        unsigned int    sbar01_lower          : 28  ; // [31..4] 64位bar0地址的[31:4]位若dbi_cs2有效，则为bar0_mask的[31:4]位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr4_u;

// define the union ntb_meep_pci_cfg_hdr6_u
// pci兼容配置头空间寄存器
// 0x1018
typedef union tagmeeppcicfghdr6
{
    // define the struct bits
    struct
    {
        unsigned int    sbar23_space_inicator  : 1   ; // [0] 0 =bar23 is a memory bar1 =bar23 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    sbar23_type           : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    sbar23_prefetchable   : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_13           : 8   ; // [11..4] 保留位
        unsigned int    sbar23_lower          : 20  ; // [31..12] 64位bar23地址的[31:12]位若dbi_cs2有效，则为bar0_mask的[31:12]位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr6_u;

// define the union ntb_meep_pci_cfg_hdr8_u
// pci兼容配置头空间寄存器
// 0x1020
typedef union tagmeeppcicfghdr8
{
    // define the struct bits
    struct
    {
        unsigned int    sbar45_space_inicator  : 1   ; // [0] 0 =bar01 is a memory bar1 =bar01 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    sbar45_type           : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    sbar45_prefetchable   : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_14           : 8   ; // [11..4] 保留位
        unsigned int    sbar45_lower          : 20  ; // [31..12] 64位bar45地址的[31:4]位若dbi_cs2有效，则为bar0_mask的[31:4]位。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr8_u;

// define the union ntb_meep_pci_cfg_hdr11_u
// pci兼容配置头空间寄存器
// 0x102c
typedef union tagmeeppcicfghdr11
{
    // define the struct bits
    struct
    {
        unsigned int    subsystem_vendor_id   : 16  ; // [15..0] 子系统厂商id
        unsigned int    subsystemid           : 16  ; // [31..16] 子系统id
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr11_u;

// define the union ntb_meep_pci_cfg_hdr13_u
// pci兼容配置头空间寄存器
// 0x1034
typedef union tagmeeppcicfghdr13
{
    // define the struct bits
    struct
    {
        unsigned int    cap_ptr               : 8   ; // [7..0] first capability pointer
        unsigned int    reserved_16           : 24  ; // [31..8] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr13_u;

// define the union ntb_meep_pci_cfg_hdr15_u
// pci兼容配置头空间寄存器
// 0x103c
typedef union tagmeeppcicfghdr15
{
    // define the struct bits
    struct
    {
        unsigned int    int_line              : 8   ; // [7..0] interrupt line
        unsigned int    int_pin               : 8   ; // [15..8] interrupt pin00：不使用intx类型上报中断;01：使用inta;02：使用intb;03：使用intc;04：使用intd。
        unsigned int    min_grant             : 8   ; // [23..16] 不适用于pcie，硬连线为0
        unsigned int    max_latency           : 8   ; // [31..24] 不适用于pcie，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_cfg_hdr15_u;

// define the union ntb_meep_pci_msi_cap0_u
// pci msi功能寄存器
// 0x1050
typedef union tagmeeppcimsicap0
{
    // define the struct bits
    struct
    {
        unsigned int    msi_cap_id            : 8   ; // [7..0] msi capability id
        unsigned int    next_capability_pointer  : 8   ; // [15..8] next capability pointer
        unsigned int    msi_enabled           : 1   ; // [16] msi enabled0：禁用msi;1：使能msi。
        unsigned int    multiple_message_capable  : 3   ; // [19..17] multiple message capable000：pcie设备可以使用1个中断向量;001：pcie设备可以使用2个中断向量;010：pcie设备可以使用4个中断向量;011：pcie设备可以使用8个中断向量;100：pcie设备可以使用16个中断向量;101：pcie设备可以使用32个中断向量;110：保留;111：保留。
        unsigned int    multiple_message_enabled  : 3   ; // [22..20] multiple message enabled表示分配给当前pcie设备的中断向量数目000：pcie设备被分配给1个中断向量;001：pcie设备被分配给2个中断向量;010：pcie设备被分配给4个中断向量;011：pcie设备被分配给8个中断向量;100：pcie设备被分配给16个中断向量;101：pcie设备被分配给32个中断向量;110：保留;111：保留。
        unsigned int    msi_64_en             : 1   ; // [23] 64-bit address capable0：不支持64-bit地址;
        unsigned int    pvm                   : 1   ; // [24] msi per vector masking (pvm) supported0：不支持msi pvm;1：支持msi pvm。
        unsigned int    reserved_20           : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_msi_cap0_u;

// define the union ntb_meep_pci_msi_cap1_u
// pci msi功能寄存器
// 0x1054
typedef union tagmeeppcimsicap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_22           : 2   ; // [1..0] reserved
        unsigned int    msi_addr_low          : 30  ; // [31..2] msi的低32bit地址的[31:2]位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_msi_cap1_u;

// define the union ntb_meep_pci_msi_cap3_u
// pci msi功能寄存器
// 0x105c
typedef union tagmeeppcimsicap3
{
    // define the struct bits
    struct
    {
        unsigned int    msi_data              : 16  ; // [15..0] msi数据
        unsigned int    reserved_23           : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pci_msi_cap3_u;

// define the union ntb_meep_pcie_cap0_u
// pci express功能寄存器
// 0x1070
typedef union tagmeeppciecap0
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_cap_id           : 8   ; // [7..0] pci express capability id
        unsigned int    pcie_next_ptr         : 8   ; // [15..8] next capability pointer
        unsigned int    pcie_capability_version  : 4   ; // [19..16] pci express capability version
        unsigned int    device_port_type      : 4   ; // [23..20] device/port type0100：pcie rc;
        unsigned int    slot_implemented      : 1   ; // [24] slot implemented
        unsigned int    interrupt_message_number  : 5   ; // [29..25] interrupt message number
        unsigned int    reserved_24           : 2   ; // [31..30] ro
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap0_u;

// define the union ntb_meep_pcie_cap1_u
// pci express功能寄存器
// 0x1074
typedef union tagmeeppciecap1
{
    // define the struct bits
    struct
    {
        unsigned int    max_payload_size_supported  : 3   ; // [2..0] max_payload_size supported000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    phantom_function_supported  : 2   ; // [4..3]
        unsigned int    extended_tagfield_supported  : 1   ; // [5] phantom function supported，该版本ip不支持。
        unsigned int    endpoint_l0sacceptable_latency  : 3   ; // [8..6] extended tag field supported0：不支持扩展tag字段;1：支持扩展tag字段。
        unsigned int    endpoint_l1acceptable_latency  : 3   ; // [11..9] endpoint l0s acceptable latency对于非endpoint必须为000
        unsigned int    undefined             : 3   ; // [14..12] endpoint l1 acceptable latency对于非endpoint必须为000
        unsigned int    role_based_err_rpt    : 1   ; // [15] reserved
        unsigned int    reserved_27           : 2   ; // [17..16] reserved
        unsigned int    captured_slot_power_limit_value  : 8   ; // [25..18] 捕获的插槽功率极限值，硬连线0x0，只读
        unsigned int    captured_slot_power_limit_scale  : 2   ; // [27..26] 捕获的插槽功率极限因子，硬连线0x0，只读
        unsigned int    function_level_reset_cap  : 1   ; // [28] function级的复位，ntb不支持该功能
        unsigned int    reserved_26           : 3   ; // [31..29] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap1_u;

// define the union ntb_meep_pcie_cap2_u
// pci express功能寄存器
// 0x1078
typedef union tagmeeppciecap2
{
    // define the struct bits
    struct
    {
        unsigned int    correctable_error_reporting_enable  : 1   ; // [0] correctable error reporting enable0：不支持发送“可纠正错误”消息;1：支持发送“可纠正错误”消息。
        unsigned int    non_fatal_error_reporting_enable  : 1   ; // [1] non-fatal error reporting enable0：不支持发送“非致命错误”消息;1：支持发送“非致命错误”消息。
        unsigned int    fatal_error_reporting_enable  : 1   ; // [2] fatal error reporting enable0：不支持发送“致命错误”消息;1：支持发送“致命错误”消息。
        unsigned int    urenable              : 1   ; // [3] unsupported request reporting enable0：不支持发送“不被支持请求”消息;1：支持发送“不被支持请求”消息。
        unsigned int    enable_relaxed_ordering  : 1   ; // [4] enable relaxed ordering0：不支持灵活事务顺序;1：支持灵活事务顺序。
        unsigned int    max_payload_size      : 3   ; // [7..5] max_payload_size000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    extended_tagfieldenable  : 1   ; // [8] extended tag field enable0：禁用扩展tag字段;1：使能扩展tag字段。
        unsigned int    phantom_function_enable  : 1   ; // [9] phantom function enable0：禁用phantom function;1：使能phantom function。
        unsigned int    auxpowerpmenable      : 1   ; // [10] aux power pm enable0：禁用附加电源;1：使能附加电源。
        unsigned int    enablenosnoop         : 1   ; // [11] enable no snoop0：禁用no snoop特性;1：使能no snoop特性。
        unsigned int    max_read_request_size  : 3   ; // [14..12] max_read_request_size000：128byte;001：256byte;010：512byte;011：1024byte;100：2048byte;101：4096byte;110：保留;111：保留。
        unsigned int    reserved_29           : 1   ; // [15] reserved
        unsigned int    correctableerrordetected  : 1   ; // [16] correctable error detected0：没有检测到可纠正错误;1：检测到可纠正错误。
        unsigned int    non_fatalerrordetected  : 1   ; // [17] non-fatal error detected0：没有检测到非致命错误;1：检测到非致命错误。
        unsigned int    fatalerrordetected    : 1   ; // [18] fatal error detected0：没有检测到致命错误;1：检测到致命错误。
        unsigned int    unsupportedrequestdetected  : 1   ; // [19] unsupported request detected0：没有收到不被支持的请求;1：收到不被支持的请求。
        unsigned int    auxpowerdetected      : 1   ; // [20] aux power detected0：没有检测到辅助电源;1：检测到辅助电源。
        unsigned int    transactionpending    : 1   ; // [21] transaction pending
        unsigned int    reserved_28           : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap2_u;

// define the union ntb_meep_pcie_cap3_u
// pci express功能寄存器
// 0x107c
typedef union tagmeeppciecap3
{
    // define the struct bits
    struct
    {
        unsigned int    max_link_speed        : 4   ; // [3..0] 支持的最大链接速度4'b0001 : 2.5gt/s4'b0010 : 5gt/s4'b0011 : 8gt/s其它值不支持
        unsigned int    max_link_width        : 6   ; // [9..4] 支持最大链路宽度，支持最大x8 lane
        unsigned int    active_state_power_management  : 2   ; // [11..10] 活动状态电源管理，ntb不支持
        unsigned int    l0s_exitlatency       : 3   ; // [14..12] 保留，ntb不支持
        unsigned int    l1_exit_latency       : 3   ; // [17..15] 保留，ntb不支持
        unsigned int    clock_power_management  : 1   ; // [18] 保留，ntb不支持
        unsigned int    surprise_down_error_report_cap  : 1   ; // [19] 保留,ntb不支持
        unsigned int    data_link_layer_active_report_cap  : 1   ; // [20] 保留,ntb不支持
        unsigned int    link_bandwidth_noti_cap  : 1   ; // [21] 保留,ntb不支持
        unsigned int    aspm_option_compliance  : 1   ; // [22] 根据pcie spec，固定为1
        unsigned int    reserved_30           : 1   ; // [23] 保留位
        unsigned int    port_number           : 8   ; // [31..24] ntb端口数量
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap3_u;

// define the union ntb_meep_pcie_cap4_u
// pci express功能寄存器
// 0x1080
typedef union tagmeeppciecap4
{
    // define the struct bits
    struct
    {
        unsigned int    active_state_power_management  : 2   ; // [1..0]
        unsigned int    reserved_33           : 1   ; // [2] 保留
        unsigned int    rcb                   : 1   ; // [3] 0表示能返回64b边界的完成报文
        unsigned int    link_disable          : 1   ; // [4]
        unsigned int    retrain_link          : 1   ; // [5]
        unsigned int    common_clock_config   : 1   ; // [6]
        unsigned int    extended_sync         : 1   ; // [7]
        unsigned int    enable_clock_pwr_management  : 1   ; // [8]
        unsigned int    hw_auto_width_disable  : 1   ; // [9]
        unsigned int    link_bandwidth_management_int_en  : 1   ; // [10]
        unsigned int    link_auto_bandwidth_int_en  : 1   ; // [11]
        unsigned int    reserved_32           : 4   ; // [15..12] 保留
        unsigned int    current_link_speed    : 4   ; // [19..16] 4'b0001 : 2.5gbps4'b0010 : 5gbps4'b0011 : 8gbps其它值:保留当链路没有建立的时候，该无意义
        unsigned int    negotiated_link_width  : 6   ; // [25..20] 协商的链路宽度，可能值为x1/x2/x4/x8
        unsigned int    reserved_31           : 1   ; // [26] 保留位
        unsigned int    link_training         : 1   ; // [27] 链路协商正在进行的状态
        unsigned int    slot_clock_configration  : 1   ; // [28] 表示设备是否使用连接器上提供的参考物理时钟
        unsigned int    data_link_layer_active  : 1   ; // [29] 链路层的活动状态
        unsigned int    link_bandwidth_management_status  : 1   ; // [30]
        unsigned int    link_auto_bandwidth_status  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap4_u;

// define the union ntb_meep_pcie_cap9_u
// pci express功能寄存器
// 0x1094
typedef union tagmeeppciecap9
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutrangessupported  : 4   ; // [3..0] completion timeout ranges supportedrange a: 50us to 10ms;range b: 10ms to 250ms;range c: 250ms to 4s;range d: 4s to 64s。
        unsigned int    completiontimeoutdisablesupported  : 1   ; // [4] completion timeout disable supported0：不支持禁用completion timeout;1：支持禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoproutingsupported  : 1   ; // [6] atomicop routing supported，不适用于endpoint。
        unsigned int    _2_bitatomicopcompletersupported  : 1   ; // [7] 32-bit atomicop completer supported0：不支持32-bit atomicop completer ;1：支持32-bit atomicop completer 。
        unsigned int    _4_bitatomicopcompletersupported  : 1   ; // [8] 64-bit atomicop completer supported0：不支持64-bit atomicop completer;1：支持64-bit atomicop completer。
        unsigned int    _28_bitcascompletersupported  : 1   ; // [9] 128-bit cas completer supported0：不支持128-bit cas completer;1：支持128-bit cas completer。
        unsigned int    noro_enabledpr_prpassing  : 1   ; // [10] no ro-enabled pr-pr passing0：no ro-enabled pr-pr passing;1：ro-enabled pr-pr passing。
        unsigned int    reserved_34           : 1   ; // [11] reserved
        unsigned int    tphcompletersupported  : 2   ; // [13..12] tph completer supported00：接收端不支持tph和扩展tph报文;01：接收端仅支持tph报文;10：保留;11：接收端支持tph和扩展tph报文。
        unsigned int    dev_cap2              : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap9_u;

// define the union ntb_meep_pcie_cap10_u
// pci express功能寄存器
// 0x1098
typedef union tagmeeppciecap10
{
    // define the struct bits
    struct
    {
        unsigned int    completiontimeoutvalue  : 4   ; // [3..0] completion timeout value0000b：default range: 50us to 50ms;0001b：50us to 100us;0010b：1ms to 10ms;0101b：16ms to 55ms;0110b：65ms to 210ms;1001b：260ms to 900ms;1010b：1s to 3.5s;1101b：4s to 13s;1110b：17s to 64s;其他值：保留。
        unsigned int    completiontimeoutdisable  : 1   ; // [4] completion timeout disable0：不禁用completion timeout;1：禁用completion timeout。
        unsigned int    ariforwardingsupported  : 1   ; // [5] ari forwarding supported0：不支持ari forwarding;1：支持ari forwarding。
        unsigned int    atomicoprequesterenable  : 1   ; // [6] atomicop requester enable0：禁用atomicop requester;1：使能atomicop requester。
        unsigned int    atomicopegressblocking  : 1   ; // [7] atomicop egress blocking对于endpoint不使用，reserved
        unsigned int    idorequestenable      : 1   ; // [8] ido request enable0：禁用ido request enable;1：使能ido request enable。
        unsigned int    idocompletionenable   : 1   ; // [9] ido completion enable0：禁用ido completion enable;1：使能ido completion enable。
        unsigned int    dev_ctrl2             : 22  ; // [31..10] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap10_u;

// define the union ntb_meep_pcie_cap11_u
// pci express功能寄存器
// 0x109c
typedef union tagmeeppciecap11
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_37           : 1   ; // [0] reserved
        unsigned int    gen1_suport           : 1   ; // [1] gen1链路速度支持0：不支持2.5gt/s;1：支持2.5gt/s。
        unsigned int    gen2_suport           : 1   ; // [2] gen2链路速度支持0：不支持5.0gt/s;1：支持5.0gt/s。
        unsigned int    gen3_suport           : 1   ; // [3] gen3链路速度支持0：不支持8.0gt/s;1：支持8.0gt/s。
        unsigned int    reserved_36           : 4   ; // [7..4] reserved
        unsigned int    croslink_supported    : 1   ; // [8] croslink supported
        unsigned int    link_cap2             : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap11_u;

// define the union ntb_meep_pcie_cap12_u
// pci express功能寄存器
// 0x10a0
typedef union tagmeeppciecap12
{
    // define the struct bits
    struct
    {
        unsigned int    targetlinkspeed       : 4   ; // [3..0] target link speed
        unsigned int    entercompliance       : 1   ; // [4] enter compliance0：不令链路进入compliance模式;1：令链路进入compliance模式。
        unsigned int    hardwareautonomousspeeddisa  : 1   ; // [5] hardware autonomous speed disable0：不禁用hardware autonomous speed;1：禁用hardware autonomous speed。
        unsigned int    selectablede_empha    : 1   ; // [6] selectable de-emphasis0：-6db;1：-3.5db。
        unsigned int    transmitmargin        : 3   ; // [9..7] transmit margin
        unsigned int    entermodifiedcompliance  : 1   ; // [10] enter modified compliance0：如果ltssm进入polling.compliance状态，不发送modified compliance pattern;1：如果ltssm进入polling.compliance状态，发送一个modified compliance pattern。
        unsigned int    compliancesos         : 1   ; // [11] compliance sos0：在发送compliance pattern或modified pattern时不在中间插入skp有序集;1：在发送compliance pattern或modified pattern时在中间插入skp有序集。
        unsigned int    de_emphasislevel      : 4   ; // [15..12] de-emphasis level0001：-3.5db;0000：-6db其他值：保留。
        unsigned int    currentde_emphasislevel  : 1   ; // [16] current de-emphasis level0：-6db;1：-3.5db。
        unsigned int    equalizationcomplete  : 1   ; // [17] equalization complete0：equalization未完成;1：equalization完成。
        unsigned int    equalizationphase1successful  : 1   ; // [18] equalization phase 1 successful0：equalization phase 1不成功;1：equalization phase 1成功。
        unsigned int    equalizationphase2successful  : 1   ; // [19] equalization phase 2 successful0：equalization phase 2不成功;1：equalization phase 2成功。
        unsigned int    equalizationphase3successful  : 1   ; // [20] equalization phase 3 successful0：equalization phase 3不成功;1：equalization phase 3成功。
        unsigned int    linkequalizationrequest  : 1   ; // [21] link equalization request0：没有请求link equalization;1：请求link equalization 。
        unsigned int    link_ctrl2_status2    : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap12_u;

// define the union ntb_meep_pcie_cap13_u
// pci express功能寄存器
// 0x10b0
typedef union tagmeeppciecap13
{
    // define the struct bits
    struct
    {
        unsigned int    pci_msix_cap_id       : 8   ; // [7..0]
        unsigned int    pci_msix_cap_nxt_offset  : 8   ; // [15..8]
        unsigned int    pci_msix_table_size   : 11  ; // [26..16]
        unsigned int    reserved_38           : 3   ; // [29..27]
        unsigned int    pci_msix_func_mask    : 1   ; // [30]
        unsigned int    pci_msix_enable       : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap13_u;

// define the union ntb_meep_pcie_cap14_u
// pci express功能寄存器
// 0x10b4
typedef union tagmeeppciecap14
{
    // define the struct bits
    struct
    {
        unsigned int    pci_msix_bir          : 3   ; // [2..0]
        unsigned int    pci_msix_table_offset  : 29  ; // [31..3]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap14_u;

// define the union ntb_meep_pcie_cap15_u
// pci express功能寄存器
// 0x10b8
typedef union tagmeeppciecap15
{
    // define the struct bits
    struct
    {
        unsigned int    pci_msix_pba          : 3   ; // [2..0]
        unsigned int    pci_msix_pba_offset   : 29  ; // [31..3]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_cap15_u;

// define the union ntb_meep_aer_cap0_u
// 高级错误报告寄存器
// 0x1100
typedef union tagmeepaercap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    aer_cap_hdr           : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap0_u;

// define the union ntb_meep_aer_cap1_u
// 高级错误报告寄存器
// 0x1104
typedef union tagmeepaercap1
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_44           : 1   ; // [0] 未定义
        unsigned int    reserved_43           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsta  : 1   ; // [4] data link protocol error status0：未检测到data link protocol error;1：检测到data link protocol error。
        unsigned int    surprisedownerrorstatus  : 1   ; // [5] surprise down error status，该版本ip不支持。
        unsigned int    reserved_42           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpstatu      : 1   ; // [12] poisoned tlp status0：未检测到poisoned tlp;1：检测到poisoned tlp。
        unsigned int    flowcontrolprotocolerrorst  : 1   ; // [13] flow control protocol error status0：未检测到flow control protocol error;1：检测到flow control protocol error。
        unsigned int    completiontimeouts    : 1   ; // [14] completion timeout status0：未检测到completion timeout;
        unsigned int    completerabortstatus  : 1   ; // [15] completer abort status0：未检测到completer abort;1：检测到completer abort。
        unsigned int    receiveroverflowstatus  : 1   ; // [16] unexpected completion status0：未检测到unexpected completion;1：检测到unexpected completion。
        unsigned int    malformedtlpstatus    : 1   ; // [17] receiver overflow status0：未检测到receiver overflow;1：检测到receiver overflow。
        unsigned int    ecrcerrorstatus       : 1   ; // [18] malformed tlp status0：未检测到malformed tlp;1：检测到malformed tlp。
        unsigned int    ecrcerrorstat         : 1   ; // [19] ecrc error status0：未检测到ecrc error;1：检测到ecrc error。
        unsigned int    unsupportedrequesterrorstatus  : 1   ; // [20] unsupported request error status0：未检测到unsupported request error;1：检测到unsupported request error;。
        unsigned int    reserved_41           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedstatus  : 1   ; // [24] atomicop egress blocked status0：atomicop egress is not blocked;1：atomicop egress is blocked。
        unsigned int    uncorr_err_status     : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap1_u;

// define the union ntb_meep_aer_cap2_u
// 高级错误报告寄存器
// 0x1108
typedef union tagmeepaercap2
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_48           : 1   ; // [0] 未定义
        unsigned int    reserved_47           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrormask  : 1   ; // [4] data link protocol error mask0：data link protocol error is not masked;1：data link protocol error is masked。
        unsigned int    surprisedownerrormask  : 1   ; // [5] surprise down error mask，该版本ip不支持。
        unsigned int    reserved_46           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpmask       : 1   ; // [12] poisoned tlp mask0：poisoned tlp is not masked;1：poisoned tlp is masked。
        unsigned int    flowcontrolprotocolerrormask  : 1   ; // [13] flow control protocol error mask0：flow control protocol error is not masked;1：flow control protocol error is masked。
        unsigned int    completiontimeoutmask  : 1   ; // [14] completion timeout mask0：completion timeout is not masked;1：completion timeout is masked。
        unsigned int    completerabortmask    : 1   ; // [15] completer abort mask0：completer abort is not masked;1：completer abort is masked。
        unsigned int    unexpectedcompletionmask  : 1   ; // [16] unexpected completion mask0：unexpected completion is not masked;1：unexpected completion is masked。
        unsigned int    receiveroverflowmask  : 1   ; // [17] receiver overflow mask0：receiver overflow is not masked;1：receiver overflow is masked。
        unsigned int    malformedtlpmask      : 1   ; // [18] malformed tlp mask0：malformed tlp is not masked;1：malformed tlp is masked。
        unsigned int    ecrcerrormask         : 1   ; // [19] ecrc error mask0：ecrc error is not masked;1：ecrc error is masked。
        unsigned int    unsupportedrequesterrormask  : 1   ; // [20] unsupported request error mask0：unsupported request error is not masked;1：unsupported request error is masked。
        unsigned int    reserved_45           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedmask  : 1   ; // [24] atomicop egress blocked mask0：atomicop egress blocked is not masked;1：atomicop egress blocked is masked。
        unsigned int    uncorr_err_mask       : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap2_u;

// define the union ntb_meep_aer_cap3_u
// 高级错误报告寄存器
// 0x110c
typedef union tagmeepaercap3
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_52           : 1   ; // [0] 未定义
        unsigned int    reserved_51           : 3   ; // [3..1] reserved
        unsigned int    datalinkprotocolerrorsever  : 1   ; // [4] data link protocol error severity0：non-fatal;1：fatal。
        unsigned int    surprisedownerrorseverity  : 1   ; // [5] surprise down error severity，该版本ip不支持
        unsigned int    reserved_50           : 6   ; // [11..6] reserved
        unsigned int    poisonedtlpseverity   : 1   ; // [12] poisoned tlp severity0：non-fatal;1：fatal。
        unsigned int    flowcontrolprotocolerrorseveri  : 1   ; // [13] flow control protocol error severity0：non-fatal;1：fatal。
        unsigned int    completiontimeoutseverity  : 1   ; // [14] completion timeout severity0：non-fatal;1：fatal。
        unsigned int    completerabortseverity  : 1   ; // [15] completer abort severity0：non-fatal;1：fatal。
        unsigned int    unexpectedcompletionseverity  : 1   ; // [16] unexpected completion severity0：non-fatal;1：fatal。
        unsigned int    receiveroverflowseverity  : 1   ; // [17] receiver overflow severity0：non-fatal;1：fatal。
        unsigned int    malformedtlpseverity  : 1   ; // [18] malformed tlp severity0：non-fatal;1：fatal。
        unsigned int    ecrcerrorseverity     : 1   ; // [19] ecrc error severity0：non-fatal;1：fatal。
        unsigned int    unsupportedrequesterrorseverity  : 1   ; // [20] unsupported request error severity0：non-fatal;1：fatal。
        unsigned int    reserved_49           : 3   ; // [23..21] reserved
        unsigned int    atomicopegressblockedseverity  : 1   ; // [24] atomicop egress blocked severity0：non-fatal;1：fatal。
        unsigned int    uncorr_err_ser        : 7   ; // [31..25] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap3_u;

// define the union ntb_meep_aer_cap4_u
// 高级错误报告寄存器
// 0x1110
typedef union tagmeepaercap4
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrorstatus   : 1   ; // [0] receiver error status0：未检测到receiver error;1：检测到receiver error。
        unsigned int    reserved_54           : 5   ; // [5..1] reserved
        unsigned int    badtlpstatus          : 1   ; // [6] bad tlp status0：未检测到bad tlp;1：检测到bad tlp。
        unsigned int    baddllpstatus         : 1   ; // [7] bad dllp status0：未检测到bad dllp;1：检测到bad dllp。
        unsigned int    replay_numrolloverstatus  : 1   ; // [8] replay_num rollover status0：未检测到replay_num rollover;1：检测到replay_num rollover。
        unsigned int    reserved_53           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutstatus  : 1   ; // [12] reply timer timeout status0：未检测到reply timer timeout;1：检测到reply timer timeout。
        unsigned int    advisorynon_fatalerrorstatus  : 1   ; // [13] advisory non-fatal error status0：未检测到advisory non-fatal error;1：检测到advisory non-fatal error。
        unsigned int    corr_err_status       : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap4_u;

// define the union ntb_meep_aer_cap5_u
// 高级错误报告寄存器
// 0x1114
typedef union tagmeepaercap5
{
    // define the struct bits
    struct
    {
        unsigned int    receivererrormask     : 1   ; // [0] receiver error mask0：receiver error is not masked;1：receiver error is masked。
        unsigned int    reserved_56           : 5   ; // [5..1] reserved
        unsigned int    badtlpmask            : 1   ; // [6] bad tlp mask0：bad tlp is not masked;1：bad tlp is masked。
        unsigned int    baddllpmask           : 1   ; // [7] bad dllp mask0：bad dllp is not masked;1：bad dllp is masked。
        unsigned int    replay_numrollovermask  : 1   ; // [8] replay_num rollover mask0：replay_num rollover is not masked;1：replay_num rollover is masked。
        unsigned int    reserved_55           : 3   ; // [11..9] reserved
        unsigned int    replytimertimeoutmask  : 1   ; // [12] reply timer timeout mask0：reply timer timeout is not masked;1：reply timer timeout is masked。
        unsigned int    advisorynon_fatalerrormask  : 1   ; // [13] advisory non-fatal error mask0：advisory non-fatal error is not maskd;1：advisory non-fatal error is masked。
        unsigned int    corr_err_mask         : 18  ; // [31..14] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap5_u;

// define the union ntb_meep_aer_cap6_u
// 高级错误报告寄存器
// 0x1118
typedef union tagmeepaercap6
{
    // define the struct bits
    struct
    {
        unsigned int    firsterrorpointer     : 5   ; // [4..0] first error pointer
        unsigned int    ecrcgenerationcapability  : 1   ; // [5] ecrc generation capability0：no capability;1：has capability。
        unsigned int    ecrcgenerationenable  : 1   ; // [6] ecrc generation enable0：disable;1：enable。
        unsigned int    ecrccheckcapable      : 1   ; // [7] ecrc check capable0：no capability;1：has capability。
        unsigned int    ecrccheckenable       : 1   ; // [8] ecrc check enable0：diable;1：enable。
        unsigned int    adv_cap_ctrl          : 23  ; // [31..9] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap6_u;

// define the union ntb_meep_vc_cap0_u
// 虚拟通道功能寄存器
// 0x1148
typedef union tagmeepvccap0
{
    // define the struct bits
    struct
    {
        unsigned int    pciexpressextendedcapabilityid  : 16  ; // [15..0] pci express extended capability id
        unsigned int    capabilityversion     : 4   ; // [19..16] capability version
        unsigned int    vc_cap_hdr            : 12  ; // [31..20] next capability offset
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_vc_cap0_u;

// define the union ntb_meep_vc_cap1_u
// 虚拟通道功能寄存器
// 0x114c
typedef union tagmeepvccap1
{
    // define the struct bits
    struct
    {
        unsigned int    extendedvccount       : 3   ; // [2..0] extended vc count
        unsigned int    reserved_59           : 1   ; // [3] reserved
        unsigned int    lowpriorityextendedvccount  : 3   ; // [6..4] low priority extended vc count
        unsigned int    reserved_58           : 1   ; // [7] reserved
        unsigned int    referenceclock        : 2   ; // [9..8] reference clock，不适用于endpoint，硬连线为0
        unsigned int    portarbitrationtableentrysize  : 2   ; // [11..10] port arbitration table entry size，不适用于endpoint，硬连线为0
        unsigned int    vc_cap1               : 20  ; // [31..12] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_vc_cap1_u;

// define the union ntb_meep_vc_cap2_u
// 虚拟通道功能寄存器
// 0x1150
typedef union tagmeepvccap2
{
    // define the struct bits
    struct
    {
        unsigned int    vcarbitrationcapability  : 8   ; // [7..0] vc arbitration capability
        unsigned int    reserved_60           : 16  ; // [23..8] reserved
        unsigned int    vc_cap2               : 8   ; // [31..24] vc arbitration table offset，该版本ip不支持
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_vc_cap2_u;

// define the union ntb_meep_vc_cap3_u
// 虚拟通道功能寄存器
// 0x1154
typedef union tagmeepvccap3
{
    // define the struct bits
    struct
    {
        unsigned int    loadvcarbitrationtable  : 1   ; // [0] load vc arbitration table
        unsigned int    vcarbitrationselect   : 3   ; // [3..1] vc arbitration select
        unsigned int    reserved_62           : 12  ; // [15..4] reserved
        unsigned int    arbitrationtablestatus  : 1   ; // [16] arbitration table status
        unsigned int    reserved_61           : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_vc_cap3_u;

// define the union ntb_meep_vc_cap4_u
// 虚拟通道功能寄存器
// 0x1158
typedef union tagmeepvccap4
{
    // define the struct bits
    struct
    {
        unsigned int    portarbitrationcapability  : 8   ; // [7..0] port arbitration capability
        unsigned int    reserved_65           : 6   ; // [13..8] reserved
        unsigned int    reserved_64           : 1   ; // [14] 未定义
        unsigned int    rejectsnooptransactions  : 1   ; // [15] reject snoop transactions，不适用于endpoint，硬连线为0
        unsigned int    maximumtimeslots      : 7   ; // [22..16] maximum time slots，不适用于endpoint
        unsigned int    reserved_63           : 1   ; // [23] reserved
        unsigned int    vc_res_cap            : 8   ; // [31..24] port arbitration table offset，不适用于endpoint，硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_vc_cap4_u;

// define the union ntb_meep_vc_cap5_u
// 虚拟通道功能寄存器
// 0x115c
typedef union tagmeepvccap5
{
    // define the struct bits
    struct
    {
        unsigned int    tc_vcmap              : 8   ; // [7..0] tc/vc map
        unsigned int    reserved_68           : 8   ; // [15..8] reserved
        unsigned int    loadportarbitrationtable  : 1   ; // [16] load port arbitration table，不适用于endpoint
        unsigned int    portarbitrationselec  : 3   ; // [19..17] port arbitration select，对于endpoint硬连线为0
        unsigned int    reserved_67           : 4   ; // [23..20] reserved
        unsigned int    vcid                  : 3   ; // [26..24] vc id，硬连线为0
        unsigned int    reserved_66           : 4   ; // [30..27] reserved
        unsigned int    vc_res_ctrl           : 1   ; // [31] vc enable，硬连线为1
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_vc_cap5_u;

// define the union ntb_meep_vc_cap6_u
// 虚拟通道功能寄存器
// 0x1160
typedef union tagmeepvccap6
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_69           : 16  ; // [15..0] reserved
        unsigned int    portarbitrationtablestatus  : 1   ; // [16] port arbitration table status
        unsigned int    vcnegotiationpending  : 1   ; // [17] vc negotiation pending
        unsigned int    vc_res_status         : 14  ; // [31..18] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_vc_cap6_u;

// define the union ntb_meep_ari_cap0_u
// ari功能寄存器
// 0x1168
typedef union tagmeeparicap0
{
    // define the struct bits
    struct
    {
        unsigned int    ari_pcie_extended_cap_id  : 16  ; // [15..0]
        unsigned int    ari_cap_version       : 4   ; // [19..16]
        unsigned int    ari_next_offset       : 12  ; // [31..20]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ari_cap0_u;

// define the union ntb_meep_ari_cap1_u
// ari功能寄存器
// 0x116c
typedef union tagmeeparicap1
{
    // define the struct bits
    struct
    {
        unsigned int    ari_mfvc_fun_grp_cap  : 1   ; // [0]
        unsigned int    ari_acs_fun_grp_cap   : 1   ; // [1]
        unsigned int    reserved_73           : 6   ; // [7..2]
        unsigned int    ari_next_func_num     : 8   ; // [15..8]
        unsigned int    ari_mfvc_fun_grp_en   : 1   ; // [16]
        unsigned int    ari_acs_fun_grp_en    : 1   ; // [17]
        unsigned int    reserved_72           : 2   ; // [19..18]
        unsigned int    ari_fun_grp           : 3   ; // [22..20]
        unsigned int    reserved_71           : 9   ; // [31..23]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ari_cap1_u;

// define the union ntb_meep_spcie_cap4_u
// spcie功能寄存器
// 0x1188
typedef union tagmeepspciecap4
{
    // define the struct bits
    struct
    {
        unsigned int    dsp_tx_preset2        : 4   ; // [3..0]
        unsigned int    dsp_rx_preset_hint2   : 3   ; // [6..4]
        unsigned int    reserved_77           : 1   ; // [7]
        unsigned int    usp_tx_preset2        : 4   ; // [11..8]
        unsigned int    usp_rx_preset_hint2   : 3   ; // [14..12]
        unsigned int    reserved_76           : 1   ; // [15]
        unsigned int    dsp_tx_preset3        : 4   ; // [19..16]
        unsigned int    dsp_rx_preset_hint3   : 3   ; // [22..20]
        unsigned int    reserved_75           : 1   ; // [23]
        unsigned int    usp_tx_preset3        : 4   ; // [27..24]
        unsigned int    usp_rx_preset_hint3   : 3   ; // [30..28]
        unsigned int    reserved_74           : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_spcie_cap4_u;

// define the union ntb_meep_port_logic0_u
// 端口逻辑寄存器
// 0x1700
typedef union tagmeepportlogic0
{
    // define the struct bits
    struct
    {
        unsigned int    ack_lat_timer         : 16  ; // [15..0] round trip latency time limit
        unsigned int    replay_timer          : 16  ; // [31..16] replay time limit
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic0_u;

// define the union ntb_meep_port_logic2_u
// 端口逻辑寄存器
// 0x1708
typedef union tagmeepportlogic2
{
    // define the struct bits
    struct
    {
        unsigned int    linknumber            : 8   ; // [7..0] link number，不适用于endpoint
        unsigned int    reserved_81           : 7   ; // [14..8] reserved
        unsigned int    forcelink             : 1   ; // [15] force link
        unsigned int    linkstate             : 6   ; // [21..16] link state
        unsigned int    reserved_80           : 2   ; // [23..22] reserved
        unsigned int    port_force_link       : 8   ; // [31..24] low power entrance count
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic2_u;

// define the union ntb_meep_port_logic3_u
// 端口逻辑寄存器
// 0x170c
typedef union tagmeepportlogic3
{
    // define the struct bits
    struct
    {
        unsigned int    ackfrequency          : 8   ; // [7..0] ack frequency
        unsigned int    n_fts                 : 8   ; // [15..8] n_fts
        unsigned int    commonclockn_fts      : 8   ; // [23..16] common clock n_fts
        unsigned int    l0sentrancelatency    : 3   ; // [26..24] l0s entrance latency000：1us;001：2us;010：3us;011：4us;100：5us;101：6us;110：7us;111：7us。
        unsigned int    l1entrancelatency     : 3   ; // [29..27] l1 entrance latency000：1us;001：2us;010：4us;011：8us;100：16us;101：32us;110：64us;111：64us。
        unsigned int    enteraspml1withoutreceiveinl0s  : 1   ; // [30] enter aspm l1 without receive in l0s0：发送接收端都处于l0s一段空闲时间后，core才能进入l1状态;
        unsigned int    ack_aspm              : 1   ; // [31] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic3_u;

// define the union ntb_meep_port_logic4_u
// 端口逻辑寄存器
// 0x1710
typedef union tagmeepportlogic4
{
    // define the struct bits
    struct
    {
        unsigned int    vendorspecificdllprequest  : 1   ; // [0] vendor specific dllp request0：不发送vendor specific dllp register定义的dllp;1：发送vendor specific dllp register定义的dllp。
        unsigned int    scrambledisable       : 1   ; // [1] scramble disable0：禁用加扰;1：使能加扰。
        unsigned int    loopbackenable        : 1   ; // [2] loopback enable0：禁用loopback;1：使能loopback。
        unsigned int    resetassert           : 1   ; // [3] reset assert，不适用于ep0：不触发recovery状态;
        unsigned int    reserved_85           : 1   ; // [4] reserved
        unsigned int    dlllinkenable         : 1   ; // [5] dll link enable0：禁用initfc dllp发送以及建立链路;1：使能initfc dllp发送以及建立链路。
        unsigned int    reserved_84           : 1   ; // [6] reserved
        unsigned int    fastlinkmode          : 1   ; // [7] fast link mode0：禁用fast link mode;1：使能fast link mode。
        unsigned int    link_rate             : 4   ; // [11..8]
        unsigned int    reserved_83           : 4   ; // [15..12] reserved
        unsigned int    linkmodeenable        : 6   ; // [21..16] link mode enable000001：x1;
        unsigned int    croslinkenable        : 1   ; // [22] croslink enable0：禁用croslink;1：使能croslink。
        unsigned int    croslinkactive        : 1   ; // [23] croslink active0：未发生croslink;1：发生croslink。
        unsigned int    reserved_82           : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic4_u;

// define the union ntb_meep_port_logic5_u
// 端口逻辑寄存器
// 0x1714
typedef union tagmeepportlogic5
{
    // define the struct bits
    struct
    {
        unsigned int    insertlaneskewfortransmit  : 24  ; // [23..0] insert lane skew for transmit
        unsigned int    flowcontroldisable    : 1   ; // [24] flow control disable0：不禁用core发送fc dllp;1：禁用core发送fc dllp。
        unsigned int    ack_nakdisable        : 1   ; // [25] ack/nak disable0：不禁用core发送ack/nak dllp;1：禁用core发送ack/nak dllp。
        unsigned int    reserved_86           : 5   ; // [30..26] reserved
        unsigned int    lane_skew             : 1   ; // [31] disable lane-to-lane deskew0：不禁用lane-to-lane deskew;1：禁用lane-to-lane deskew。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic5_u;

// define the union ntb_meep_port_logic6_u
// 端口逻辑寄存器
// 0x1718
typedef union tagmeepportlogic6
{
    // define the struct bits
    struct
    {
        unsigned int    max_func_num          : 8   ; // [7..0]
        unsigned int    reserved_88           : 6   ; // [13..8]
        unsigned int    timer_mod_replay_timer  : 5   ; // [18..14]
        unsigned int    timer_mod_ack_nak     : 5   ; // [23..19]
        unsigned int    update_freq_timer     : 5   ; // [28..24]
        unsigned int    reserved_87           : 3   ; // [31..29]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic6_u;

// define the union ntb_meep_port_logic7_u
// 端口逻辑寄存器
// 0x171c
typedef union tagmeepportlogic7
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddataqueuedepth  : 11  ; // [10..0] skp interval value
        unsigned int    reserved_89           : 4   ; // [14..11] reserved
        unsigned int    sym_timer             : 1   ; // [15] disable fc watchdog timer0：不禁用fc watchdog timer;1：禁用fc watchdog timer。
        unsigned int    maskfunctionmismatchfilteringfo  : 1   ; // [16] mask function mismatch filtering for incoming requests0：不使用mask;1：使用mask。
        unsigned int    maskpoisonedtlpfiltering  : 1   ; // [17] mask poisoned tlp filtering0：不使用mask;1：使用mask。
        unsigned int    maskbarmatchfiltering  : 1   ; // [18] mask bar match filtering0：不使用mask;1：使用mask。
        unsigned int    masktype1configurationrequestfiltering  : 1   ; // [19] mask type 1 configuration request filtering0：不使用mask;1：使用mask。
        unsigned int    masklockedrequestfiltering  : 1   ; // [20] mask locked request filtering0：不使用mask;1：使用mask。
        unsigned int    masktagerrorrulesforreceivedcompletions  : 1   ; // [21] mask tag error rules for received completions0：不使用mask;1：使用mask。
        unsigned int    maskrequesteridmismatcherrorforreceivedcompletions  : 1   ; // [22] mask requester id mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maskfunctionmismatcherrorforreceivedcompletions  : 1   ; // [23] mask function mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_traffic_classmis_match_error_forreceived_completions  : 1   ; // [24] mask traffic class mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_attributesmismatcherrorforreceivedcompletions  : 1   ; // [25] mask attributes mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    mask_length_mismatch_error_forreceive_dcompletions  : 1   ; // [26] mask length mismatch error for received completions0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering  : 1   ; // [27] mask ecrc error filtering0：不使用mask;1：使用mask。
        unsigned int    maske_crcerror_filtering_forcompletions  : 1   ; // [28] mask ecrc error filtering for completions0：不使用mask;1：使用mask。
        unsigned int    message_control       : 1   ; // [29] 0：send decoded message on the sii,then drop the message tlps;
        unsigned int    maskfilteringofreceived  : 1   ; // [30] mask filtering of received i/o requests (rc mode only)0：不使用mask;1：使用mask。
        unsigned int    flt_mask1             : 1   ; // [31] mask filtering of received configuration requests (rc mode only)0：不使用mask;1：使用mask。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic7_u;

// define the union ntb_meep_port_logic8_u
// 端口逻辑寄存器
// 0x1720
typedef union tagmeepportlogic8
{
    // define the struct bits
    struct
    {
        unsigned int    cx_flt_mask_venmsg0_drop  : 1   ; // [0] cx_flt_mask_venmsg0_drop0：丢弃vendor msg type 0并报告ur错误;1：不丢弃vendor msg type 0。
        unsigned int    cx_flt_mask_venmsg1_drop  : 1   ; // [1] cx_flt_mask_venmsg1_drop0：丢弃vendor msg type 1;1：不丢弃vendor msg type 1。
        unsigned int    cx_flt_mask_dabort_4ucpl  : 1   ; // [2] cx_flt_mask_dabort_4ucpl0：对于unexpected cpl使能dllp abort;1：对于unexpected cpl禁用dllp abort。
        unsigned int    cx_flt_mask_handle_flush  : 1   ; // [3] cx_flt_mask_handle_flush0：禁用core filter处理flush请求;1：使能core filter处理flush请求。
        unsigned int    flt_mask2             : 28  ; // [31..4] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic8_u;

// define the union ntb_meep_port_logic9_u
// 端口逻辑寄存器
// 0x1724
typedef union tagmeepportlogic9
{
    // define the struct bits
    struct
    {
        unsigned int    amba_multi_outbound_decomp_np  : 1   ; // [0] enable amba multiple outbound decomposed np sub-request0：禁用;1：使能。
        unsigned int    amba_obnp_ctrl        : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic9_u;

// define the union ntb_meep_port_logic12_u
// 端口逻辑寄存器
// 0x1730
typedef union tagmeepportlogic12
{
    // define the struct bits
    struct
    {
        unsigned int    transmitposteddatafccredits  : 12  ; // [11..0] transmit posted data fc credits
        unsigned int    transmitpostedheaderfccredits  : 8   ; // [19..12] transmit posted header fc credits
        unsigned int    tx_pfc_status         : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic12_u;

// define the union ntb_meep_port_logic13_u
// 端口逻辑寄存器
// 0x1734
typedef union tagmeepportlogic13
{
    // define the struct bits
    struct
    {
        unsigned int    transmitnon_posteddatafccredits  : 12  ; // [11..0] transmit non-posted data fc credits
        unsigned int    transmitnon_postedheaderfccredits  : 8   ; // [19..12] transmit non-posted header fc credits
        unsigned int    tx_npfc_status        : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic13_u;

// define the union ntb_meep_port_logic14_u
// 端口逻辑寄存器
// 0x1738
typedef union tagmeepportlogic14
{
    // define the struct bits
    struct
    {
        unsigned int    transmitcompletiondatafccredits  : 12  ; // [11..0] transmit completion data fc credits
        unsigned int    transmitcompletionheaderfccredits  : 8   ; // [19..12] transmit completion header fc credits
        unsigned int    tx_cplfc_status       : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic14_u;

// define the union ntb_meep_port_logic15_u
// 端口逻辑寄存器
// 0x173c
typedef union tagmeepportlogic15
{
    // define the struct bits
    struct
    {
        unsigned int    rx_tlp_fc_credit_not_retured  : 1   ; // [0]
        unsigned int    tx_retry_buf_not_empty  : 1   ; // [1]
        unsigned int    rx_queue_not_empty    : 1   ; // [2]
        unsigned int    reserved_91           : 13  ; // [15..3] received tlp fc credits not returned0：received tlp fc credits returned;1：received tlp fc credits not returned。
        unsigned int    fc_latency_timer_override_value  : 13  ; // [28..16] transmit retry buffer not empty0：transmit retry buffer empty;1：transmit retry buffer not empty。
        unsigned int    reserved_90           : 2   ; // [30..29] received queue not empty0：received queue empty;1：received queue not empty。
        unsigned int    fc_latency_timer_override_en  : 1   ; // [31] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic15_u;

// define the union ntb_meep_port_logic16_u
// 端口逻辑寄存器
// 0x1748
typedef union tagmeepportlogic16
{
    // define the struct bits
    struct
    {
        unsigned int    vc0posteddatacredits  : 12  ; // [11..0] vc0 posted data credits
        unsigned int    vc0postedheadercredits  : 8   ; // [19..12] vc0 posted header credits
        unsigned int    reserved_93           : 1   ; // [20] reserved
        unsigned int    vc0_p_tlp_q_mode      : 3   ; // [23..21] vc0 posted tlp queue mode0：未选择store-and-forword;1：选择store-and-forword。
        unsigned int    reserved_92           : 6   ; // [29..24] reserved
        unsigned int    tlptypeorderingforvc0  : 1   ; // [30] tlp type ordering for vc00：strict ordering;1：ordering follows the rules in pcie 3.0。
        unsigned int    vc_ordering_rx_q      : 1   ; // [31] vc ordering for receive queues0：round robin;
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic16_u;

// define the union ntb_meep_port_logic17_u
// 端口逻辑寄存器
// 0x174c
typedef union tagmeepportlogic17
{
    // define the struct bits
    struct
    {
        unsigned int    vc0non_posteddatacredits  : 12  ; // [11..0] vc0 non-posted data credits
        unsigned int    vc0non_postedheadercredits  : 8   ; // [19..12] vc0 non-posted header credits
        unsigned int    reserved_96           : 1   ; // [20]
        unsigned int    vc0_np_tlp_q_mode     : 3   ; // [23..21]
        unsigned int    reserved_95           : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic17_u;

// define the union ntb_meep_port_logic18_u
// 端口逻辑寄存器
// 0x9750
typedef union tagmeepportlogic18
{
    // define the struct bits
    struct
    {
        unsigned int    vco_comp_data_credits  : 12  ; // [11..0] vc0 completion data credits
        unsigned int    vc0_cpl_header_credt  : 8   ; // [19..12] vc0 completion header credits
        unsigned int    reserved_98           : 1   ; // [20]
        unsigned int    vc0_cpl_tlp_q_mode    : 3   ; // [23..21]
        unsigned int    reserved_97           : 8   ; // [31..24] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic18_u;

// define the union ntb_meep_port_logic22_u
// 端口逻辑寄存器
// 0x980c
typedef union tagmeepportlogic22
{
    // define the struct bits
    struct
    {
        unsigned int    n_fts                 : 8   ; // [7..0] sets the number of fast training sequences (n_fts) that the core advertises as its n_fts during gen2 or gen3 link training
        unsigned int    num_of_lanes          : 5   ; // [12..8] predetermined number of lanes1：1 lane;
        unsigned int    pre_det_lane          : 3   ; // [15..13] directed speed change0：指示ltssm在链路初始化完成后不改变到gen2速率;1：指示ltssm在链路初始化完成后改变到gen2速率。
        unsigned int    auto_lane_flip_ctrl_en  : 1   ; // [16]
        unsigned int    direct_speed_change   : 1   ; // [17]
        unsigned int    config_phy_tx_change  : 1   ; // [18] config phy tx swing0：low swing;1：full swing。
        unsigned int    config_tx_comp_rx     : 1   ; // [19] config tx compliance receive bit0：不指示ltssm发送含有声明compliance接受比特的ts有序集;1：指示ltssm发送含有声明compliance接受比特的ts有序集。
        unsigned int    set_emp_level         : 1   ; // [20] used to set the de-emphasis level for upstream ports0：-6db;1：-3.5db。
        unsigned int    gen1_ei_interface     : 1   ; // [21]
        unsigned int    reserved_100          : 10  ; // [31..22] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic22_u;

// define the union ntb_meep_port_logic54_u
// 端口逻辑寄存器
// 0x1890
typedef union tagmeepportlogic54
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_zrxdc_noncompl   : 1   ; // [0]
        unsigned int    reserved_106          : 7   ; // [7..1]
        unsigned int    disable_scrambler_gen3  : 1   ; // [8]
        unsigned int    eq_phase_2_3          : 1   ; // [9]
        unsigned int    eq_eieos_cnt          : 1   ; // [10]
        unsigned int    eq_redo               : 1   ; // [11]
        unsigned int    rxeq_ph01_en          : 1   ; // [12]
        unsigned int    reserved_105          : 3   ; // [15..13]
        unsigned int    gen3_eq_disable       : 1   ; // [16]
        unsigned int    gen3_dllp_xmt_delay_disable  : 1   ; // [17]
        unsigned int    gen3_dc_balance_disable  : 1   ; // [18]
        unsigned int    reserved_104          : 13  ; // [31..19]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic54_u;

// define the union ntb_meep_port_logic55_u
// 端口逻辑寄存器
// 0x1894
typedef union tagmeepportlogic55
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_local_lf      : 6   ; // [5..0]
        unsigned int    gen3_eq_local_fs      : 6   ; // [11..6]
        unsigned int    reserved_108          : 20  ; // [31..12]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic55_u;

// define the union ntb_meep_port_logic56_u
// 端口逻辑寄存器
// 0x1898
typedef union tagmeepportlogic56
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_pre_cursor_pset  : 6   ; // [5..0]
        unsigned int    gen3_eq_cursor_pset   : 6   ; // [11..6]
        unsigned int    gen3_eq_post_cursor_pset  : 6   ; // [17..12]
        unsigned int    reserved_109          : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic56_u;

// define the union ntb_meep_port_logic57_u
// 端口逻辑寄存器
// 0x189c
typedef union tagmeepportlogic57
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_pset_index    : 4   ; // [3..0]
        unsigned int    reserved_110          : 28  ; // [31..4]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic57_u;

// define the union ntb_meep_port_logic58_u
// 端口逻辑寄存器
// 0x18a4
typedef union tagmeepportlogic58
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_vio_coef_rules  : 1   ; // [0]
        unsigned int    reserved_111          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic58_u;

// define the union ntb_meep_port_logic59_u
// 端口逻辑寄存器
// 0x18a8
typedef union tagmeepportlogic59
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_fb_mode       : 4   ; // [3..0]
        unsigned int    gen3_eq_phase23_exit_mode  : 1   ; // [4]
        unsigned int    gen3_eq_eval_2ms_disable  : 1   ; // [5]
        unsigned int    reserved_114          : 2   ; // [7..6]
        unsigned int    gen3_eq_pset_req_vec  : 16  ; // [23..8]
        unsigned int    gen3_eq_fom_inc_ini_eval  : 1   ; // [24]
        unsigned int    gen3_eq_pset_req_as_coef  : 1   ; // [25]
        unsigned int    reserved_113          : 6   ; // [31..26]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic59_u;

// define the union ntb_meep_port_logic60_u
// 端口逻辑寄存器
// 0x18ac
typedef union tagmeepportlogic60
{
    // define the struct bits
    struct
    {
        unsigned int    gen3_eq_fmdc_t_min_phase23  : 5   ; // [4..0]
        unsigned int    gen3_eq_fmdc_n_evals  : 5   ; // [9..5]
        unsigned int    gen3_eq_fmdc_max_pre_cursor_delta  : 4   ; // [13..10]
        unsigned int    gen3_eq_fmdc_max_post_cursor_delta  : 4   ; // [17..14]
        unsigned int    reserved_115          : 14  ; // [31..18]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic60_u;

// define the union ntb_meep_port_logic61_u
// 端口逻辑寄存器
// 0x18b8
typedef union tagmeepportlogic61
{
    // define the struct bits
    struct
    {
        unsigned int    lpbk_rxvalid          : 16  ; // [15..0]
        unsigned int    rxstatus_lane         : 6   ; // [21..16]
        unsigned int    reserved_117          : 2   ; // [23..22]
        unsigned int    rxstatus_value        : 3   ; // [26..24]
        unsigned int    reserved_116          : 4   ; // [30..27]
        unsigned int    pipe_lpbk             : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic61_u;

// define the union ntb_meep_port_logic62_u
// 端口逻辑寄存器
// 0x18bc
typedef union tagmeepportlogic62
{
    // define the struct bits
    struct
    {
        unsigned int    dbi_ro_wr_en          : 1   ; // [0]
        unsigned int    reserved_119          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic62_u;

// define the union ntb_meep_port_logic63_u
// 端口逻辑寄存器
// 0x18d0
typedef union tagmeepportlogic63
{
    // define the struct bits
    struct
    {
        unsigned int    amba_err_resp_glb     : 1   ; // [0]
        unsigned int    reserved_121          : 1   ; // [1]
        unsigned int    amba_err_resp_vendorid  : 1   ; // [2]
        unsigned int    amba_err_resp_flush   : 1   ; // [3]
        unsigned int    reserved_120          : 28  ; // [31..4]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic63_u;

// define the union ntb_meep_port_logic64_u
// 端口逻辑寄存器
// 0x18d8
typedef union tagmeepportlogic64
{
    // define the struct bits
    struct
    {
        unsigned int    ax_mstr_np_pass_p     : 1   ; // [0]
        unsigned int    reserved_123          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic64_u;

// define the union ntb_meep_port_logic65_u
// 端口逻辑寄存器
// 0x18dc
typedef union tagmeepportlogic65
{
    // define the struct bits
    struct
    {
        unsigned int    amba_ordrmgr_wdog     : 16  ; // [15..0]
        unsigned int    reserved_125          : 15  ; // [30..16]
        unsigned int    amba_ordrmgr_wdog_en  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic65_u;

// define the union ntb_meep_port_logic66_u
// 端口逻辑寄存器
// 0x18e0
typedef union tagmeepportlogic66
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_memtype_value     : 1   ; // [0]
        unsigned int    reserved_126          : 1   ; // [1]
        unsigned int    cfg_memtype_boundary_low_addr  : 30  ; // [31..2]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic66_u;

// define the union ntb_meep_port_logic68_u
// 端口逻辑寄存器
// 0x18e8
typedef union tagmeepportlogic68
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_mstr_ardomain_mode  : 2   ; // [1..0]
        unsigned int    reserved_134          : 1   ; // [2]
        unsigned int    cfg_mstr_arcache_mode  : 4   ; // [6..3]
        unsigned int    reserved_133          : 1   ; // [7]
        unsigned int    cfg_mstr_awdomain_mode  : 2   ; // [9..8]
        unsigned int    reserved_132          : 1   ; // [10]
        unsigned int    cfg_mstr_awchache_mode  : 4   ; // [14..11]
        unsigned int    reserved_131          : 1   ; // [15]
        unsigned int    cfg_mstr_ardomain_value  : 2   ; // [17..16]
        unsigned int    reserved_130          : 1   ; // [18]
        unsigned int    cfg_mstr_arcache_value  : 4   ; // [22..19]
        unsigned int    reserved_129          : 1   ; // [23]
        unsigned int    cfg_mstr_awdomain_value  : 2   ; // [25..24]
        unsigned int    reserved_128          : 1   ; // [26]
        unsigned int    cfg_mstr_awcache_value  : 4   ; // [30..27]
        unsigned int    reserved_127          : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic68_u;

// define the union ntb_meep_port_logic69_u
// 端口逻辑寄存器
// 0x18fc
typedef union tagmeepportlogic69
{
    // define the struct bits
    struct
    {
        unsigned int    pl_last               : 1   ; // [0]
        unsigned int    reserved_135          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic69_u;

// define the union ntb_meep_port_logic71_u
// 端口逻辑寄存器
// 0x1904
typedef union tagmeepportlogic71
{
    // define the struct bits
    struct
    {
        unsigned int    iatu1_type            : 5   ; // [4..0] 出站tlp的地址在该区域内则该tlp的type字段用该值替换;入站tlp的type字段如果等于该值则执行地址转换。
        unsigned int    iatu1_tc              : 3   ; // [7..5] 出站tlp的地址在该区域内则该tlp的tc字段用该值替换;入站tlp的tc字段如果等于该值则执行地址转换。
        unsigned int    iatu1_td              : 1   ; // [8] 出站tlp的地址在该区域内则该tlp的td字段用该值替换;入站tlp的td字段如果等于该值则执行地址转换。
        unsigned int    iatu1_attr            : 2   ; // [10..9] 出站tlp的地址在该区域内则该tlp的attr字段用该值替换;入站tlp的attr字段如果等于该值则执行地址转换。
        unsigned int    reserved_139          : 5   ; // [15..11] reserved
        unsigned int    iatu1_at              : 2   ; // [17..16] 出站tlp的地址在该区域内则该tlp的at字段用该值替换;入站tlp的at字段如果等于该值则执行地址转换。
        unsigned int    reserved_138          : 2   ; // [19..18] reserved
        unsigned int    iatu1_id              : 3   ; // [22..20] 出站tlp的地址在该区域内则该tlp的requester id的功能号字段用该值替换;对于入站mem/io，如果与该功能号的bar匹配，则执行地址转换;对于入站cfg，如果功能号字段等于该值则执行地址转换。
        unsigned int    reserved_137          : 9   ; // [31..23] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic71_u;

// define the union ntb_meep_port_logic72_u
// 端口逻辑寄存器
// 0x1908
typedef union tagmeepportlogic72
{
    // define the struct bits
    struct
    {
        unsigned int    iatu2_type            : 8   ; // [7..0] 出站tlp的地址在该区域内，并且转换的tlp的type字段为消息，那么该tlp的message code字段用该值替换;
        unsigned int    iatu2_bar_num         : 3   ; // [10..8] bar number对于outbound不适用。
        unsigned int    reserved_143          : 3   ; // [13..11] reserved
        unsigned int    iatu2_tc_match_en     : 1   ; // [14] tc match enable对于outbound不适用。
        unsigned int    iatu2_td_match_en     : 1   ; // [15] td match enable对于outbound不适用。
        unsigned int    iatu2_attr_match_en   : 1   ; // [16] attr match enable对于outbound不适用。
        unsigned int    reserved_142          : 1   ; // [17] reserved
        unsigned int    iatu2_at_match_en     : 1   ; // [18] at match enable对于outbound不适用。
        unsigned int    iatu2_func_num_match_en  : 1   ; // [19] function number match enable对于outbound不适用。
        unsigned int    iatu2_virtual_func_num_match_en  : 1   ; // [20] virtual function number match enable对于outbound不适用。
        unsigned int    message_code_match_en  : 1   ; // [21] message code match enable对于outbound不适用。
        unsigned int    reserved_141          : 2   ; // [23..22] reserved
        unsigned int    iatu2_response_code   : 2   ; // [25..24] response code对于outbound不适用。
        unsigned int    reserved_140          : 1   ; // [26] reserved
        unsigned int    iatu2_fuzzy_type_match_mode  : 1   ; // [27] fuzzy type match mode对于outbound不适用。
        unsigned int    iatu2_cfg_shift_mode  : 1   ; // [28] cfg shift mode0：不使用cfg shift mode;1：使用cfg shift mode。
        unsigned int    iatu2_ivert_mode      : 1   ; // [29] invert mode0：不使用invert mode;1：使用invert mode。
        unsigned int    iatu2_match_mode      : 1   ; // [30] match mode对于outbound不适用。
        unsigned int    iatu2_region_en       : 1   ; // [31] region enable0：禁用该区域地址转换;1：使能该区域地址转换。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic72_u;

// define the union ntb_meep_port_logic73_u
// 端口逻辑寄存器
// 0x190c
typedef union tagmeepportlogic73
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_start_low        : 12  ; // [11..0] forms bits [11:0] of the start address of the address region to be translated.
        unsigned int    iatu_start_high       : 20  ; // [31..12] forms bits [31:12] of the start address of the address region to be translated.
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic73_u;

// define the union ntb_meep_port_logic75_u
// 端口逻辑寄存器
// 0x1914
typedef union tagmeepportlogic75
{
    // define the struct bits
    struct
    {
        unsigned int    iatu_limit_low        : 12  ; // [11..0] forms bits [11:0] of the end address of the address region to be translated
        unsigned int    iatu_limit_high       : 20  ; // [31..12] forms bits [31:12] of the end address of the address region to be translated
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic75_u;

// define the union ntb_meep_port_logic76_u
// 端口逻辑寄存器
// 0x1918
typedef union tagmeepportlogic76
{
    // define the struct bits
    struct
    {
        unsigned int    xlated_addr_high      : 12  ; // [11..0] forms bits [11:0] of the start address of the new address of the translated region
        unsigned int    xlated_addr_low       : 20  ; // [31..12] forms bits [31:12] of the of the new address of the translated region
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic76_u;

// define the union ntb_meep_port_logic78_u
// 端口逻辑寄存器
// 0x1920
typedef union tagmeepportlogic78
{
    // define the struct bits
    struct
    {
        unsigned int    vf_number             : 1   ; // [0] virtual function number
        unsigned int    reserved_144          : 30  ; // [30..1]
        unsigned int    vf_active             : 1   ; // [31] virtual function active
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic78_u;

// define the union ntb_meep_port_logic79_u
// 端口逻辑寄存器
// 0x1978
typedef union tagmeepportlogic79
{
    // define the struct bits
    struct
    {
        unsigned int    num_dma_wr_chan       : 4   ; // [3..0] number of write channels.
        unsigned int    reserved_146          : 12  ; // [15..4] reserved
        unsigned int    num_dma_rd_chan       : 4   ; // [19..16] number of read channels
        unsigned int    reserved_145          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic79_u;

// define the union ntb_meep_port_logic80_u
// 端口逻辑寄存器
// 0x197c
typedef union tagmeepportlogic80
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_eng_en         : 1   ; // [0] dma write engine enable0：禁用dma write engine;1：使能dma write engine。
        unsigned int    dma_wr_ena            : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic80_u;

// define the union ntb_meep_port_logic81_u
// 端口逻辑寄存器
// 0x1980
typedef union tagmeepportlogic81
{
    // define the struct bits
    struct
    {
        unsigned int    wr_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma写操作，目前仅支持单通道。
        unsigned int    reserved_148          : 28  ; // [30..3] reserved
        unsigned int    dma_wr_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic81_u;

// define the union ntb_meep_port_logic82_u
// 端口逻辑寄存器
// 0x1988
typedef union tagmeepportlogic82
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel0_weight    : 5   ; // [4..0] channel0 weight
        unsigned int    wr_channel1_weight    : 5   ; // [9..5] channel1 weight
        unsigned int    wr_channel2_weight    : 5   ; // [14..10] channel2 weight
        unsigned int    wr_channel3_weight    : 5   ; // [19..15] channel3 weight
        unsigned int    reserved_149          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic82_u;

// define the union ntb_meep_port_logic83_u
// 端口逻辑寄存器
// 0x198c
typedef union tagmeepportlogic83
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel4_weight    : 5   ; // [4..0]
        unsigned int    wr_channel5_weight    : 5   ; // [9..5]
        unsigned int    wr_channel6_weight    : 5   ; // [14..10]
        unsigned int    wr_channel7_weight    : 5   ; // [19..15]
        unsigned int    reserved_151          : 12  ; // [31..20]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic83_u;

// define the union ntb_meep_port_logic84_u
// 端口逻辑寄存器
// 0x1998
typedef union tagmeepportlogic84
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_p_timer_lmt    : 12  ; // [11..0] dma tx posted request deadlock timeout value.0 : 2us1 : 4us...4095 : 8192us
        unsigned int    reserved_153          : 3   ; // [14..12]
        unsigned int    dma_wr_p_timer_disable  : 1   ; // [15]
        unsigned int    reserved_152          : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic84_u;

// define the union ntb_meep_port_logic85_u
// 端口逻辑寄存器
// 0x199c
typedef union tagmeepportlogic85
{
    // define the struct bits
    struct
    {
        unsigned int    dma_read_eng_en       : 1   ; // [0] dma read engine enable0：禁用dma read engine;1：使能dma read engine。
        unsigned int    dma_rd_ena            : 31  ; // [31..1] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic85_u;

// define the union ntb_meep_port_logic86_u
// 端口逻辑寄存器
// 0x19a0
typedef union tagmeepportlogic86
{
    // define the struct bits
    struct
    {
        unsigned int    rd_doorbell_num       : 3   ; // [2..0] doorbell number必须写入0x0来启动dma读操作，目前仅支持单通道。
        unsigned int    reserved_155          : 28  ; // [30..3] reserved
        unsigned int    dma_rd_dbell_stop     : 1   ; // [31] stop0：不停止产生请求;1：停止产生请求。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic86_u;

// define the union ntb_meep_port_logic87_u
// 端口逻辑寄存器
// 0x19a8
typedef union tagmeepportlogic87
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel0_weight    : 5   ; // [4..0]
        unsigned int    rd_channel1_weight    : 5   ; // [9..5]
        unsigned int    rd_channel2_weight    : 5   ; // [14..10]
        unsigned int    rd_channel3_weight    : 5   ; // [19..15]
        unsigned int    reserved_156          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic87_u;

// define the union ntb_meep_port_logic88_u
// 端口逻辑寄存器
// 0x19ac
typedef union tagmeepportlogic88
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel4_weight    : 5   ; // [4..0]
        unsigned int    rd_channel5_weight    : 5   ; // [9..5]
        unsigned int    rd_channel6_weight    : 5   ; // [14..10]
        unsigned int    rd_channel7_weight    : 5   ; // [19..15]
        unsigned int    reserved_158          : 12  ; // [31..20] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic88_u;

// define the union ntb_meep_port_logic89_u
// 端口逻辑寄存器
// 0x19bc
typedef union tagmeepportlogic89
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 1   ; // [0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_160          : 15  ; // [15..1] reserved
        unsigned int    abort_int_status      : 1   ; // [16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_159          : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic89_u;

// define the union ntb_meep_port_logic90_u
// 端口逻辑寄存器
// 0x19c4
typedef union tagmeepportlogic90
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 1   ; // [0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_163          : 15  ; // [15..1] reserved
        unsigned int    abort_int_mask        : 1   ; // [16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    reserved_162          : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic90_u;

// define the union ntb_meep_port_logic91_u
// 端口逻辑寄存器
// 0x19c8
typedef union tagmeepportlogic91
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 1   ; // [0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_166          : 15  ; // [15..1] reserved
        unsigned int    abort_int_clr         : 1   ; // [16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    reserved_165          : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic91_u;

// define the union ntb_meep_port_logic92_u
// 端口逻辑寄存器
// 0x19cc
typedef union tagmeepportlogic92
{
    // define the struct bits
    struct
    {
        unsigned int    app_rd_err_det        : 1   ; // [0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_168          : 15  ; // [15..1] reserved
        unsigned int    ll_element_fetch_err_det  : 1   ; // [16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    reserved_167          : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic92_u;

// define the union ntb_meep_port_logic97_u
// 端口逻辑寄存器
// 0x19e0
typedef union tagmeepportlogic97
{
    // define the struct bits
    struct
    {
        unsigned int    dma_wr_c0_imwr_data   : 16  ; // [15..0] the dma uses this field to generate the data field for the done or abort imwr tlps it generates for write channel 0
        unsigned int    dma_wr_c1_imwr_data   : 16  ; // [31..16] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic97_u;

// define the union ntb_meep_port_logic98_u
// 端口逻辑寄存器
// 0x9e4
typedef union tagmeepportlogic98
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel_2_data     : 16  ; // [15..0]
        unsigned int    wr_channel_3_data     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic98_u;

// define the union ntb_meep_port_logic99_u
// 端口逻辑寄存器
// 0x9e8
typedef union tagmeepportlogic99
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel_4_data     : 16  ; // [15..0]
        unsigned int    wr_channel_5_data     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic99_u;

// define the union ntb_meep_port_logic100_u
// 端口逻辑寄存器
// 0x9ec
typedef union tagmeepportlogic100
{
    // define the struct bits
    struct
    {
        unsigned int    wr_channel_6_data     : 16  ; // [15..0]
        unsigned int    wr_channel_7_data     : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic100_u;

// define the union ntb_meep_port_logic101_u
// 端口逻辑寄存器
// 0x1a00
typedef union tagmeepportlogic101
{
    // define the struct bits
    struct
    {
        unsigned int    wr_ch_ll_remote_abort_int_en  : 1   ; // [0] write channel ll remote abort interrupt enable (llraie)0：禁用write channel ll remote abort interrupt;1：使能write channel ll remote abort interrupt。
        unsigned int    reserved_171          : 15  ; // [15..1] reserved
        unsigned int    wr_ch_ll_local_abort_int_en  : 1   ; // [16] write channel ll local abort interrupt enable (lllaie)0：禁用write channel ll local abort interrupt;1：使能write channel ll local abort interrupt。
        unsigned int    reserved_170          : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic101_u;

// define the union ntb_meep_port_logic102_u
// 端口逻辑寄存器
// 0x1a10
typedef union tagmeepportlogic102
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_status       : 1   ; // [0] done interrupt status0：未产生完成中断;1：产生完成中断。
        unsigned int    reserved_174          : 15  ; // [15..1] reserved
        unsigned int    abort_int_status      : 1   ; // [16] abort interrupt status0：未丢弃出错传输;1：丢弃出错传输。
        unsigned int    reserved_173          : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic102_u;

// define the union ntb_meep_port_logic103_u
// 端口逻辑寄存器
// 0x1a18
typedef union tagmeepportlogic103
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_mask         : 1   ; // [0] done interrupt mask0：不使用done interrupt mask;1：使用done interrupt mask。
        unsigned int    reserved_176          : 15  ; // [15..1] reserved
        unsigned int    abort_int_mask        : 1   ; // [16] abort interrupt mask0：不使用abort interrupt mask;
        unsigned int    dma_rd_int_mask       : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic103_u;

// define the union ntb_meep_port_logic104_u
// 端口逻辑寄存器
// 0x1a1c
typedef union tagmeepportlogic104
{
    // define the struct bits
    struct
    {
        unsigned int    done_int_clr          : 1   ; // [0] done interrupt clear0：不清除done interrupt status字段;1：清除done interrupt status字段。
        unsigned int    reserved_178          : 15  ; // [15..1] reserved
        unsigned int    abort_int_clr         : 1   ; // [16] abort interrupt clear0：不清除abort interrupt status字段;1：清除abort interrupt status字段。
        unsigned int    dma_rd_int_clr        : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic104_u;

// define the union ntb_meep_port_logic105_u
// 端口逻辑寄存器
// 0x1a24
typedef union tagmeepportlogic105
{
    // define the struct bits
    struct
    {
        unsigned int    app_wr_err_det        : 1   ; // [0] application read error detected0：未检测到application read error ;1：检测到application read error。
        unsigned int    reserved_179          : 15  ; // [15..1] reserved
        unsigned int    link_list_fetch_err_det  : 1   ; // [16] linked list element fetch error detected0：未检测到linked list element fetch error;1：检测到linked list element fetch error。
        unsigned int    dma_rd_err_low        : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic105_u;

// define the union ntb_meep_port_logic106_u
// 端口逻辑寄存器
// 0x1a28
typedef union tagmeepportlogic106
{
    // define the struct bits
    struct
    {
        unsigned int    unspt_request         : 8   ; // [7..0] unsupported request0：未检测到unsupported request;1：检测到unsupported request。
        unsigned int    completer_abort       : 8   ; // [15..8] completer abort0：未检测到completer abort;1：检测到completer abort。
        unsigned int    cpl_time_out          : 8   ; // [23..16] completion time out
        unsigned int    data_poison           : 8   ; // [31..24] data poisoning0：未检测到data poisoning;1：检测到data poisoning。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic106_u;

// define the union ntb_meep_port_logic107_u
// 端口逻辑寄存器
// 0x1a34
typedef union tagmeepportlogic107
{
    // define the struct bits
    struct
    {
        unsigned int    remote_abort_int_en   : 1   ; // [0] read channel ll remote abort interrupt enable (llraie)0：禁用read channel ll remote abort interrupt;1：使能read channel ll remote abort interrupt。
        unsigned int    reserved_181          : 15  ; // [15..1] reserved
        unsigned int    local_abort_int_en    : 1   ; // [16] read channel ll local abort interrupt enable (lllaie)0：禁用read channel ll local abort interrupt;1：使能read channel ll local abort interrupt。
        unsigned int    dma_rd_ll_err_ena     : 15  ; // [31..17] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic107_u;

// define the union ntb_meep_port_logic112_u
// 端口逻辑寄存器
// 0x1a4c
typedef union tagmeepportlogic112
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel0_data      : 16  ; // [15..0]
        unsigned int    rd_channel1_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic112_u;

// define the union ntb_meep_port_logic113_u
// 端口逻辑寄存器
// 0x1a50
typedef union tagmeepportlogic113
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel2_data      : 16  ; // [15..0]
        unsigned int    rd_channel3_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic113_u;

// define the union ntb_meep_port_logic114_u
// 端口逻辑寄存器
// 0x1a54
typedef union tagmeepportlogic114
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel4_data      : 16  ; // [15..0]
        unsigned int    rd_channel5_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic114_u;

// define the union ntb_meep_port_logic115_u
// 端口逻辑寄存器
// 0x1a58
typedef union tagmeepportlogic115
{
    // define the struct bits
    struct
    {
        unsigned int    rd_channel6_data      : 16  ; // [15..0]
        unsigned int    rd_channel7_data      : 16  ; // [31..16]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic115_u;

// define the union ntb_meep_port_logic116_u
// 端口逻辑寄存器
// 0x1a6c
typedef union tagmeepportlogic116
{
    // define the struct bits
    struct
    {
        unsigned int    channel_dir           : 3   ; // [2..0] reserved
        unsigned int    reserved_184          : 28  ; // [30..3] reserved
        unsigned int    dma_ch_con_idx        : 1   ; // [31] channel direction0：写通道0;1：读通道0。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic116_u;

// define the union ntb_meep_port_logic117_u
// 端口逻辑寄存器
// 0x1a70
typedef union tagmeepportlogic117
{
    // define the struct bits
    struct
    {
        unsigned int    cycle_bit             : 1   ; // [0] cycle bit (cb)
        unsigned int    toggle_cycle_bit      : 1   ; // [1] toggle cycle bit (tcb)
        unsigned int    load_link_pointer     : 1   ; // [2] load link pointer (llp)
        unsigned int    local_int_en          : 1   ; // [3] local interrupt enable (lie)0：禁用local interrupt;1：使能local interrupt。
        unsigned int    remote_int_en         : 1   ; // [4] remote interrupt enable (rie)0：禁用remote interrupt;1：使能remote interrupt。
        unsigned int    channel_status        : 2   ; // [6..5] channel status00：保留;01：running;10：halted;11：stopped。
        unsigned int    reserved_188          : 1   ; // [7] reserved
        unsigned int    consumer_cycle_state  : 1   ; // [8] consumer cycle state (ccs)
        unsigned int    linked_list_en        : 1   ; // [9] linked list enable (lle)0：禁用linked list;1：使能linked list。
        unsigned int    reserved_187          : 2   ; // [11..10] reserved
        unsigned int    func_num_dma          : 5   ; // [16..12] function number (fn) for generated mrd/mwr dma tlps
        unsigned int    reserved_186          : 7   ; // [23..17] reserved
        unsigned int    no_snoop              : 1   ; // [24] no snoop tlp header bit (ns)
        unsigned int    ro                    : 1   ; // [25] relaxed ordering tlp header bit (ro)
        unsigned int    td                    : 1   ; // [26] traffic digest tlp header bit (td)
        unsigned int    tc                    : 3   ; // [29..27] traffic class tlp header bit (tc)
        unsigned int    dma_ch_ctrl           : 2   ; // [31..30] address translation tlp header bit (at)
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic117_u;

// define the union ntb_meep_port_logic118_u
// 端口逻辑寄存器
// 0x1a74
typedef union tagmeepportlogic118
{
    // define the struct bits
    struct
    {
        unsigned int    dma_vf_en             : 1   ; // [0]
        unsigned int    dma_vf                : 8   ; // [8..1]
        unsigned int    reserved_189          : 23  ; // [31..9]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic118_u;

// define the union ntb_meep_port_logic124_u
// 端口逻辑寄存器
// 0x1a8c
typedef union tagmeepportlogic124
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_190          : 2   ; // [1..0] reserved
        unsigned int    dma_ll_ptr_low        : 30  ; // [31..2] lower bits of the address of the linked list transfer list in local memory
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic124_u;

// define the union ntb_meep_port_logic126_u
// 端口逻辑寄存器
// 0x1b30
typedef union tagmeepportlogic126
{
    // define the struct bits
    struct
    {
        unsigned int    snoop_latency_value   : 10  ; // [9..0]
        unsigned int    snoop_latency_scale   : 3   ; // [12..10]
        unsigned int    reserved_192          : 2   ; // [14..13]
        unsigned int    snoop_latency_require  : 1   ; // [15]
        unsigned int    no_snoop_latency_value  : 10  ; // [25..16]
        unsigned int    no_snoop_latency_scale  : 3   ; // [28..26]
        unsigned int    reserved_191          : 2   ; // [30..29]
        unsigned int    no_snoop_latency_require  : 1   ; // [31]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic126_u;

// define the union ntb_meep_port_logic127_u
// 端口逻辑寄存器
// 0x1b40
typedef union tagmeepportlogic127
{
    // define the struct bits
    struct
    {
        unsigned int    aux_clk_freq          : 10  ; // [9..0]
        unsigned int    reserved_194          : 22  ; // [31..10]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_port_logic127_u;

// define the union ntb_meep_pbar23xlat_lower_u
// pbar23地址转换寄存器低32位
// 0x8000
typedef union tagmeeppbar23xlatlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_196          : 12  ; // [11..0] 保留
        unsigned int    pbar23_xlat_lower     : 20  ; // [31..12] pbar23地址转换寄存器低32位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar23xlat_lower_u;

// define the union ntb_meep_pbar45xlat_lower_u
// pbar45地址转换寄存器低32位
// 0x8008
typedef union tagmeeppbar45xlatlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_198          : 12  ; // [11..0] 保留
        unsigned int    pbar45_xlat_lower     : 20  ; // [31..12] pbar45地址转换寄存器低32位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar45xlat_lower_u;

// define the union ntb_meep_pbar23lmt_lower_u
// pbar23的limit寄存器低32位
// 0x8010
typedef union tagmeeppbar23lmtlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_199          : 12  ; // [11..0] 保留
        unsigned int    pbar23_limit_lower    : 20  ; // [31..12] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar23lmt_lower_u;

// define the union ntb_meep_pbar45lmt_lower_u
// pbar45的limit寄存器低32位
// 0x8018
typedef union tagmeeppbar45lmtlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_200          : 12  ; // [11..0] 保留
        unsigned int    pbar45_limit_lower    : 20  ; // [31..12] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar45lmt_lower_u;

// define the union ntb_meep_pbar45lmt_upper_u
// pbar45的limit寄存器高32位
// 0x801c
typedef union tagmeeppbar45lmtupper
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_201          : 12  ; // [11..0] 保留
        unsigned int    pbar45_limit_upper    : 20  ; // [31..12] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar45lmt_upper_u;

// define the union ntb_meep_b2b_bar01xlat_lower_u
// b2b模式pbar01地址转换寄存器低32位
// 0x8028
typedef union tagmeepb2bbar01xlatlower
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_202          : 17  ; // [16..0] 保留位
        unsigned int    b2b_pbar01_xlat_lower  : 15  ; // [31..17] b2b模式下，pbar01的地址转换寄存器低位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_b2b_bar01xlat_lower_u;

// define the union ntb_meep_ppd_u
// 端口定义寄存器
// 0x8138
typedef union tagmeepppd
{
    // define the struct bits
    struct
    {
        unsigned int    port_def              : 1   ; // [0] ntb连接方式定义1'b0 : ntb-to-ntb模式1'b1 : ntb-to-rp模式
        unsigned int    reserved_204          : 31  ; // [31..1] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ppd_u;

// define the union ntb_meep_device_vendor_id_u
// 设备id和厂商id
// 0x9000
typedef union tagmeepdevicevendorid
{
    // define the struct bits
    struct
    {
        unsigned int    vendor_id             : 16  ; // [15..0] 厂商id
        unsigned int    device_id             : 16  ; // [31..16] 设备id
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_device_vendor_id_u;

// define the union ntb_meep_pcists_pcicmd_u
// 控制和状况寄存器
// 0x9004
typedef union tagmeeppcistspcicmd
{
    // define the struct bits
    struct
    {
        unsigned int    cfg_io_space_en       : 1   ; // [0] i/o sapace enable0：该设备不能响应i/o请求;1：该设备能够响应i/o请求。
        unsigned int    cfg_mem_space_en      : 1   ; // [1] memory space enable0：该设备不能响应存储器请求;1：该设备能够响应存储器请求。
        unsigned int    cfg_bus_master_en     : 1   ; // [2] bus master enable0：该设备不能作为主设备;1：该设备能够作为主设备。
        unsigned int    special_cycle_en      : 1   ; // [3] special cycle enalbe不适用于pcie，硬连线为0
        unsigned int    mem_wr_and_invalid    : 1   ; // [4] memory write and invalidata不适用于pcie，硬连线为0
        unsigned int    vga_palette_snoop     : 1   ; // [5] parity error response0：对奇偶校验错误不作出响应;1：对奇偶校验错误作出响应。
        unsigned int    parity_error_response  : 1   ; // [6] 奇偶校验错误响应，用于控制将master的数据奇偶校验错误记录在status寄存器，当该bit为0时，status寄存器不会记录该错误。
        unsigned int    idsel_stepping_wait_cycle_ctrl  : 1   ; // [7] pcie不支持，硬连线为0
        unsigned int    cfg_reg_seren         : 1   ; // [8] 用于控制设备将non-fatal和fatal错误报告给rc
        unsigned int    fast_back_to_back_trans_en  : 1   ; // [9]
        unsigned int    cfg_int_disable       : 1   ; // [10] 中断禁用，控制pcie设备产生intx中断消息的能力
        unsigned int    reserved_209          : 8   ; // [18..11] 保留
        unsigned int    int_msg_pending       : 1   ; // [19] 中断状况，表示该功能有个未完成的中断请求
        unsigned int    cap_list              : 1   ; // [20] 功能列表.该比特为1表示存在扩展功能列表。
        unsigned int    pci_bus_66mhz_cap     : 1   ; // [21] pcie不支持，保留
        unsigned int    reserved_208          : 1   ; // [22] pcie不支持，保留
        unsigned int    fast_back_to_back_trans_cap  : 1   ; // [23] pcie不支持，保留
        unsigned int    master_data_perr      : 1   ; // [24] 主控数据奇偶错误，如果在命令寄存器中设置了奇偶错误允许比特时，如果收到错误的完成或者写请求中毒时，设置该比特
        unsigned int    reserved_207          : 2   ; // [26..25] pcie不支持，保留
        unsigned int    signaled_target_abort  : 1   ; // [27] 已发送目标异常中断，当充当完成者的功能通过发送完成者异常中断完成状况到请求者要求终止请求时，该比特置为1
        unsigned int    rcvd_target_abt       : 1   ; // [28] 已接收目标异常中断，当请求者接收到一个带完成者异常中断完成状况的完成时，设置该比特
        unsigned int    rcvd_master_abt       : 1   ; // [29] 已接收控制器异常中断，当请求者接收到一个带未受支持的的请求完成状况时，设置该比特。
        unsigned int    rcvd_serr             : 1   ; // [30] 已发信号系统错误，当功能发送err_fatal或者err_nonfatal消息，并且命令寄存器中的seer允许比特为1时，设置该比特
        unsigned int    detected_perr         : 1   ; // [31] 已发现奇偶错误，不论功能的命令寄存器中的奇偶错误启用比特的状态如何，只要该功能受到一个中毒tlp，就设置该比特。
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcists_pcicmd_u;

// define the union ntb_meep_ccr_rid_u
// 类代码和修订版id
// 0x9008
typedef union tagmeepccrrid
{
    // define the struct bits
    struct
    {
        unsigned int    revision_identification  : 8   ; // [7..0] 修订版id
        unsigned int    reserved_210          : 8   ; // [15..8] 保留
        unsigned int    sub_class             : 8   ; // [23..16] 子类代码，在ntb模式下，该寄存器的值硬连线到0x80h表示“其它类型桥设备”
        unsigned int    baseclass             : 8   ; // [31..24] 类代码，桥设备，硬连线到0x06
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ccr_rid_u;

// define the union ntb_meep_pbar01_base_lower_u
// 基地址寄存器01低32位
// 0x9010
typedef union tagmeeppbar01baselower
{
    // define the struct bits
    struct
    {
        unsigned int    bar01_space_inicator  : 1   ; // [0] 0 =bar0 is a memory bar1 =bar0 is an i/o barntb只支持memory空间，不支持io空间
        unsigned int    bar01_type            : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    bar01_prefetchable    : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_211          : 12  ; // [15..4] 保留位
        unsigned int    base_address_register_01_lower  : 16  ; // [31..16] bar01基地址低位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar01_base_lower_u;

// define the union ntb_meep_pbar23_base_lower_u
// 基地址寄存器23低32位
// 0x9018
typedef union tagmeeppbar23baselower
{
    // define the struct bits
    struct
    {
        unsigned int    bar23_space_inicator  : 1   ; // [0] 0 =bar0 is a memory bar1 =bar0 is an i/o bar
        unsigned int    bar23_type            : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    bar23_prefetchable    : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_213          : 8   ; // [11..4] 保留位
        unsigned int    base_address_register_23_lower  : 20  ; // [31..12] bar23基地址低位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar23_base_lower_u;

// define the union ntb_meep_pbar45_base_lower_u
// 基地址寄存器45高32位
// 0x9020
typedef union tagmeeppbar45baselower
{
    // define the struct bits
    struct
    {
        unsigned int    bar45_space_inicator  : 1   ; // [0] 0 =bar0 is a memory bar1 =bar0 is an i/o bar
        unsigned int    bar45_type            : 2   ; // [2..1] 00 =32-bit bar10 =64-bit bar
        unsigned int    bar45_prefetchable    : 1   ; // [3] 是否可预取0 =non-prefetchable          1 =prefetchable
        unsigned int    reserved_214          : 8   ; // [11..4] 保留位
        unsigned int    base_address_register_45_lower  : 20  ; // [31..12] bar45基地址低位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pbar45_base_lower_u;

// define the union ntb_meep_subsystemid_u
// 子系统vendor id
// 0x902c
typedef union tagmeepsubsystemid
{
    // define the struct bits
    struct
    {
        unsigned int    subsystemid           : 16  ; // [15..0] 子系统id
        unsigned int    subsystemvendorid     : 16  ; // [31..16] 子系统vendor id
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_subsystemid_u;

// define the union ntb_meep_capptr_u
// 功能指针
// 0x9034
typedef union tagmeepcapptr
{
    // define the struct bits
    struct
    {
        unsigned int    capptr                : 8   ; // [7..0] 功能指针，指向功能msi
        unsigned int    reserved_217          : 24  ; // [31..8] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_capptr_u;

// define the union ntb_meep_interrupt_u
// 中断引脚，中断线
// 0x903c
typedef union tagmeepinterrupt
{
    // define the struct bits
    struct
    {
        unsigned int    int_line_reg          : 8   ; // [7..0] 中断线寄存器，该寄存器保留仅仅是为了荷pci兼容
        unsigned int    cfg_int_pin           : 8   ; // [15..8] 中断引脚寄存器，ntb primary侧不支持对rc发送intx中断
        unsigned int    min_gnt               : 8   ; // [23..16] 硬连线为0
        unsigned int    max_lat               : 8   ; // [31..24] 硬连线为0
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_interrupt_u;

// define the union ntb_meep_msi_capability_register_u
// msi功能寄存器
// 0x9050
typedef union tagmeepmsicapabilityregister
{
    // define the struct bits
    struct
    {
        unsigned int    capabilityid          : 8   ; // [7..0] 功能id，对于msi，硬连线0x05，只读
        unsigned int    next_capability_pointer  : 8   ; // [15..8] 下一个功能指针
        unsigned int    msi_enabled           : 1   ; // [16] msi使能
        unsigned int    multiple_message_capable  : 3   ; // [19..17] 多种message功能使能3'b001表示ntb primary侧能产生1个msi中断向量，在ntb的应用中，msi仅仅用于doorbell发送中断
        unsigned int    multiple_message_enabled  : 3   ; // [22..20] 多种message功能使能
        unsigned int    msi_64_en             : 1   ; // [23] 支持64位地址功能
        unsigned int    pvm_en                : 1   ; // [24] 设备是否支持per vector masking功能1'b0: 不支持1'b1: 支持
        unsigned int    message_control_register  : 7   ; // [31..25] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_capability_register_u;

// define the union ntb_meep_msi_lower32_bitaddress_u
// msi低32位地址寄存器
// 0x9054
typedef union tagmeepmsilower32bitaddress
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_220          : 2   ; // [1..0] 保留
        unsigned int    lower32_bitaddress    : 30  ; // [31..2] msi低32位地址
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_lower32_bitaddress_u;

// define the union ntb_meep_msi_data_u
// msi数据
// 0x905c
typedef union tagmeepmsidata
{
    // define the struct bits
    struct
    {
        unsigned int    msi_data              : 16  ; // [15..0] msi数据
        unsigned int    reserved_221          : 16  ; // [31..16] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_data_u;

// define the union ntb_meep_msi_mask_u
// msi屏蔽寄存器
// 0x9060
typedef union tagmeepmsimask
{
    // define the struct bits
    struct
    {
        unsigned int    msimask               : 1   ; // [0] 屏蔽msi中断
        unsigned int    reserved_222          : 31  ; // [31..1] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_mask_u;

// define the union ntb_meep_msi_pending_u
// msi状态寄存器
// 0x9064
typedef union tagmeepmsipending
{
    // define the struct bits
    struct
    {
        unsigned int    msipending            : 1   ; // [0] msi中断状态标志位
        unsigned int    reserved_223          : 31  ; // [31..1] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_pending_u;

// define the union ntb_meep_pcie_capability_register_u
// pcie功能寄存器组
// 0x9070
typedef union tagmeeppciecapabilityregister
{
    // define the struct bits
    struct
    {
        unsigned int    capability_id         : 8   ; // [7..0] 功能id，硬连线0x10，表示pci express功能，只读
        unsigned int    next_capability_pointer  : 8   ; // [15..8] 下一个功能指针
        unsigned int    pcie_capability_version  : 4   ; // [19..16] 功能版本
        unsigned int    device_port_type      : 4   ; // [23..20] 设备端口类型，0000传统的pcie ep
        unsigned int    slot_implemented      : 1   ; // [24] 插槽实现，设置时标志该根端口将连接到附加卡插槽上，不支持，硬连线为0
        unsigned int    interrupt_message_number  : 5   ; // [29..25] 中断消息数目，msi只支持一个中断向量，所以该值为0
        unsigned int    reserved_224          : 2   ; // [31..30] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_pcie_capability_register_u;

// define the union ntb_meep_device_capabilities_register_u
// 设备功能寄存器
// 0x9074
typedef union tagmeepdevicecapabilitiesregister
{
    // define the struct bits
    struct
    {
        unsigned int    max_payload_size_supported  : 3   ; // [2..0] 支持最大payload 为512byte
        unsigned int    phantom_function_supported  : 2   ; // [4..3] 仿真器功能支持，硬连线0
        unsigned int    extended_tagfield_supported  : 1   ; // [5] 拓展标记字段支持，支持最大outstanding的深度为32
        unsigned int    endpoint_l0sacceptable_latency  : 3   ; // [8..6] 端点l0可接受的延时，不支持，硬连线为0
        unsigned int    endpoint_l1acceptable_latency  : 3   ; // [11..9] 端点l1可接受的延时，不支持，硬连线为0
        unsigned int    undefined             : 3   ; // [14..12] 保留
        unsigned int    reserved_227          : 3   ; // [17..15] 保留
        unsigned int    captured_slot_power_limit_value  : 8   ; // [25..18] 捕获的插槽功率极限值，硬连线0x0，只读
        unsigned int    captured_slot_power_limit_scale  : 2   ; // [27..26] 捕获的插槽功率极限因子，硬连线0x0，只读
        unsigned int    function_level_reset  : 1   ; // [28] function级的复位，ntb不支持该功能
        unsigned int    reserved_226          : 3   ; // [31..29] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_device_capabilities_register_u;

// define the union ntb_meep_device_status_register_u
// 设备状况和控制寄存器
// 0x9078
typedef union tagmeepdevicestatusregister
{
    // define the struct bits
    struct
    {
        unsigned int    correctable_error_reporting_enable  : 1   ; // [0] 可修正错误报告启用
        unsigned int    non_fatal_error_reporting_enable  : 1   ; // [1] 非致命错误报告启用
        unsigned int    fatal_error_reporting_enable  : 1   ; // [2] 致命错误报告启用
        unsigned int    urenable              : 1   ; // [3] ur错误报告启用
        unsigned int    enable_relaxed_ordering  : 1   ; // [4] 启用灵活的顺序，不支持，硬连线为0
        unsigned int    max_payload_size      : 3   ; // [7..5] 最大有效载荷
        unsigned int    extended_tagfieldenable  : 1   ; // [8] 拓展标记字段允许，不支持，硬连线为0
        unsigned int    phantom_function_enable  : 1   ; // [9] 仿真功能允许，不支持，硬连线为0
        unsigned int    auxpowerpmenable      : 1   ; // [10] 辅助电源使能，不支持，硬连线为0
        unsigned int    enablenosnoop         : 1   ; // [11] 启用无侦测，不支持，硬连线为0
        unsigned int    max_read_request_size  : 3   ; // [14..12] 最大读请求大小，ntb不支持
        unsigned int    reserved_229          : 1   ; // [15] 保留
        unsigned int    correctableerrordetected  : 1   ; // [16] 可修正错误检测
        unsigned int    non_fatalerrordetected  : 1   ; // [17] 非致命错误检测
        unsigned int    fatalerrordetected    : 1   ; // [18] 致命错误检测
        unsigned int    unsupportedrequestdetected  : 1   ; // [19] ur检测
        unsigned int    auxpowerdetected      : 1   ; // [20] 辅助电源检测，不支持，硬连线为0
        unsigned int    transactionpending    : 1   ; // [21] 事务待决，不支持，硬连线为0
        unsigned int    reserved_228          : 10  ; // [31..22] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_device_status_register_u;

// define the union ntb_meep_link_capability_u
// 链路功能寄存器
// 0x907c
typedef union tagmeeplinkcapability
{
    // define the struct bits
    struct
    {
        unsigned int    max_link_speed        : 4   ; // [3..0] 支持的最大链接速度4'b0001 : 2.5gt/s4'b0010 : 5gt/s4'b0011 : 8gt/s其它值不支持
        unsigned int    max_link_width        : 6   ; // [9..4] 支持最大链路宽度，支持最大x8 lane
        unsigned int    active_state_power_management  : 2   ; // [11..10] 活动状态电源管理，ntb不支持
        unsigned int    l0s_exitlatency       : 3   ; // [14..12] 保留，ntb不支持
        unsigned int    l1_exit_latency       : 3   ; // [17..15] 保留，ntb不支持
        unsigned int    clock_power_management  : 1   ; // [18] 保留，ntb不支持
        unsigned int    surprise_down_error_report_cap  : 1   ; // [19] 保留,ntb不支持
        unsigned int    data_link_layer_active_report_cap  : 1   ; // [20] 保留,ntb不支持
        unsigned int    link_bandwidth_noti_cap  : 1   ; // [21] 保留,ntb不支持
        unsigned int    aspm_option_compliance  : 1   ; // [22] 根据pcie spec，固定为1
        unsigned int    reserved_230          : 1   ; // [23] 固定为1
        unsigned int    port_number           : 8   ; // [31..24] ntb端口号
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_link_capability_u;

// define the union ntb_meep_link_control_status_u
// 链路控制和状况寄存器
// 0x9080
typedef union tagmeeplinkcontrolstatus
{
    // define the struct bits
    struct
    {
        unsigned int    active_state_power_management  : 2   ; // [1..0] 保留
        unsigned int    reserved_233          : 1   ; // [2] 0表示能返回64b边界的完成报文
        unsigned int    rcb                   : 1   ; // [3] ntb模式下不支持，硬连线到0
        unsigned int    link_disable          : 1   ; // [4] ntb模式下不支持，硬连线到0
        unsigned int    retrain_link          : 1   ; // [5] ntb模式下不支持，硬连线到0
        unsigned int    common_clock_config   : 1   ; // [6] ntb模式下不支持，硬连线到0
        unsigned int    extended_sync         : 1   ; // [7] ntb模式下不支持，硬连线到0
        unsigned int    enable_clock_pwr_management  : 1   ; // [8] ntb模式下不支持，硬连线到0
        unsigned int    hw_auto_width_disable  : 1   ; // [9] ntb模式下不支持，硬连线到0
        unsigned int    link_bandwidth_management_int_en  : 1   ; // [10] ntb模式下不支持，硬连线到0
        unsigned int    link_auto_bandwidth_int_en  : 1   ; // [11] 保留
        unsigned int    reserved_232          : 4   ; // [15..12] 4'b0001 : 2.5gbps4'b0010 : 5gbps4'b0011 : 8gbps其它值:保留当链路没有建立的时候，该无意义
        unsigned int    current_link_speed    : 4   ; // [19..16] 协商的链路宽度，可能值为x1/x2/x4/x8
        unsigned int    negotiated_link_width  : 6   ; // [25..20] 保留位
        unsigned int    reserved_231          : 1   ; // [26] 链路协商正在进行的状态
        unsigned int    link_training         : 1   ; // [27] 表示设备是否使用连接器上提供的参考物理时钟
        unsigned int    slot_clock_configration  : 1   ; // [28] 链路层的活动状态
        unsigned int    data_link_layer_active  : 1   ; // [29] ntb模式下不支持，硬连线到0
        unsigned int    link_bandwidth_management_status  : 1   ; // [30] ntb模式下不支持，硬连线到0
        unsigned int    link_auto_bandwidth_status  : 1   ; // [31] reserved
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_link_control_status_u;

// define the union ntb_meep_aer_cap_header_u
// aer功能寄存器头
// 0x9100
typedef union tagmeepaercapheader
{
    // define the struct bits
    struct
    {
        unsigned int    pcie_extended_capability_id  : 16  ; // [15..0] pcie功能id
        unsigned int    capability_version    : 4   ; // [19..16] 功能版本号
        unsigned int    next_capability_offset  : 12  ; // [31..20] 下一个功能地址偏移
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_aer_cap_header_u;

// define the union ntb_meep_uc_error_status_u
// 不可修正错误状况寄存器
// 0x9104
typedef union tagmeepucerrorstatus
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_238          : 1   ; // [0] 保留
        unsigned int    reserved_237          : 3   ; // [3..1] 保留
        unsigned int    datalinkprotocolerrorstatus  : 1   ; // [4] 数据链路层协议错误状况，不支持，硬连线为0
        unsigned int    surprisedownerrorstatus  : 1   ; // [5] 意外链路断开错误状况，不支持，硬连线为0
        unsigned int    reserved_236          : 6   ; // [11..6] 保留
        unsigned int    poisonedtlpstatus     : 1   ; // [12] 中毒tlp错误状况
        unsigned int    flowcontrolprotocolerrorstatus  : 1   ; // [13] 不支持，硬连线为0
        unsigned int    completiontimeoutstatus  : 1   ; // [14] 完成超时错误状况，不支持，硬连线为0
        unsigned int    completerabortstatus  : 1   ; // [15] 完成者异常结束错误状况，不支持，硬连线为0
        unsigned int    unexpectedcompletionstatus  : 1   ; // [16] 非预期的完成错误状况，不支持，硬连线为0
        unsigned int    receiveroverflowstatus  : 1   ; // [17] 接收器溢出错误状况，不支持，硬连线为0
        unsigned int    malformedtlpstatus    : 1   ; // [18] 畸形tlp错误状况
        unsigned int    ecrcerrorstatus       : 1   ; // [19] ecrc错误状况，不支持，硬连线为0
        unsigned int    unsupportedrequesterrorstatus  : 1   ; // [20] 不支持请求错误状况
        unsigned int    reserved_235          : 11  ; // [31..21] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_uc_error_status_u;

// define the union ntb_meep_uc_error_mask_u
// 不可修正错误屏蔽寄存器
// 0x9108
typedef union tagmeepucerrormask
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_242          : 1   ; // [0] 保留
        unsigned int    reserved_241          : 3   ; // [3..1] 保留
        unsigned int    datalinkprotocolerrormask  : 1   ; // [4] 数据链路层协议错误，不支持，硬连线为0
        unsigned int    surprisedownerrormask  : 1   ; // [5] 意外链路断开错误屏蔽，不支持，硬连线为0
        unsigned int    reserved_240          : 6   ; // [11..6] 保留
        unsigned int    poisonedtlpmask       : 1   ; // [12] 中毒tlp错误屏蔽
        unsigned int    flowcontrolprotocolerrormask  : 1   ; // [13] 不支持，硬连线为0
        unsigned int    completiontimeoutmask  : 1   ; // [14] 完成超时错误屏蔽，不支持，硬连线为0
        unsigned int    completerabortmask    : 1   ; // [15] 完成者异常结束错误屏蔽，不支持，硬连线为0
        unsigned int    unexpectedcompletionmask  : 1   ; // [16] 非预期的完成错误屏蔽，不支持，硬连线为0
        unsigned int    receiveroverflowmask  : 1   ; // [17] 接收器溢出错误屏蔽，不支持，硬连线为0
        unsigned int    malformedtlpmask      : 1   ; // [18] 畸形tlp错误屏蔽
        unsigned int    ecrcerrormask         : 1   ; // [19] ecrc错误屏蔽，不支持，硬连线为0
        unsigned int    unsupportedrequesterrormask  : 1   ; // [20] 不支持请求错误屏蔽
        unsigned int    reserved_239          : 11  ; // [31..21] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_uc_error_mask_u;

// define the union ntb_meep_uc_error_severity_u
// 不可修正错误严重程度寄存器
// 0x910c
typedef union tagmeepucerrorseverity
{
    // define the struct bits
    struct
    {
        unsigned int    reserved_246          : 1   ; // [0] 保留
        unsigned int    reserved_245          : 3   ; // [3..1] 保留
        unsigned int    datalinkprotocolerrorseverity  : 1   ; // [4] 数据链路层协议错误严重程度，不支持
        unsigned int    surprisedownerrorseverity  : 1   ; // [5] 意外链路断开错误严重程度，不支持，硬连线为0
        unsigned int    reserved_244          : 6   ; // [11..6] 保留
        unsigned int    poisonedtlpseverity   : 1   ; // [12] 中毒tlp的严重程度
        unsigned int    flowcontrolprotocolerrorseverity  : 1   ; // [13] 不支持
        unsigned int    completiontimeoutseverity  : 1   ; // [14] 完成超时严重程度，不支持
        unsigned int    completerabortseverity  : 1   ; // [15] 完成者异常结束严重程度，不支持，硬连线为0
        unsigned int    unexpectedcompletionseverity  : 1   ; // [16] 非预期的完成严重程度，不支持，硬连线为0
        unsigned int    receiveroverflowseverity  : 1   ; // [17] 接收器溢出严重程度，不支持，硬连线为0
        unsigned int    malformedtlpseverity  : 1   ; // [18] 畸形tlp的严重程度
        unsigned int    ecrcerrorseverity     : 1   ; // [19] ecrc错误的严重程度，不支持，硬连线为0
        unsigned int    unsupportedrequesterrorseverity  : 1   ; // [20] 不支持请求错误的严重程度
        unsigned int    reserved_243          : 11  ; // [31..21] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_uc_error_severity_u;

// define the union ntb_meep_c_error_status_u
// 可修正错误状况寄存器
// 0x9110
typedef union tagmeepcerrorstatus
{
    // define the struct bits
    struct
    {
        unsigned int    receiver_error_status  : 1   ; // [0] 接收器错误状态，不支持，硬连线为0
        unsigned int    reserved_249          : 5   ; // [5..1] 保留
        unsigned int    bad_tlp_status        : 1   ; // [6] 坏的tlp状况
        unsigned int    bad_dllp_status       : 1   ; // [7] 不支持，硬连线为0
        unsigned int    replay_num_rollover_status  : 1   ; // [8] replay_num反转情况,不支持，硬连线为0
        unsigned int    reserved_248          : 3   ; // [11..9] 保留
        unsigned int    replay_timer_timeout_status  : 1   ; // [12] 重放定时器超时状况,不支持，为0
        unsigned int    advisory_non_fatal_error_status  : 1   ; // [13]
        unsigned int    reserved_247          : 18  ; // [31..14] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_c_error_status_u;

// define the union ntb_meep_c_error_mask_u
// 可修正错误屏蔽寄存器
// 0x9114
typedef union tagmeepcerrormask
{
    // define the struct bits
    struct
    {
        unsigned int    receiver_error_mask   : 1   ; // [0] 接收器错误状态屏蔽，不支持，硬连线为0
        unsigned int    reserved_252          : 5   ; // [5..1] 保留
        unsigned int    bad_tlp_mask          : 1   ; // [6] 坏的tlp状况屏蔽
        unsigned int    bad_dllp_mask         : 1   ; // [7] 不支持，硬连线为0
        unsigned int    replay_numrollover_mask  : 1   ; // [8] replay_num反转情况屏蔽，不支持，硬连线为0
        unsigned int    reserved_251          : 3   ; // [11..9] 保留
        unsigned int    replay_timer_timeout_mask  : 1   ; // [12] 重放定时器超时状况屏蔽，不支持，硬连线为0
        unsigned int    advisory_non_fatal_error_mask  : 1   ; // [13]
        unsigned int    corr_internal_err_mask  : 1   ; // [14] 可纠正内部错误屏蔽
        unsigned int    reserved_250          : 17  ; // [31..15] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_c_error_mask_u;

// define the union ntb_meep_advanced_error_capabilities_and_control_u
// aer 功能和控制寄存器
// 0x9118
typedef union tagmeepadvancederrorcapabilitiesandcontrol
{
    // define the struct bits
    struct
    {
        unsigned int    first_error_pointer   : 5   ; // [4..0] 第一个错误的指针
        unsigned int    ecrc_generation_capability  : 1   ; // [5] 产生ecrc的功能，不支持，硬连线为0
        unsigned int    ecrc_generation_enable  : 1   ; // [6] 产生ecrc的功能使能，不支持，硬连线为0
        unsigned int    ecrc_check_capable    : 1   ; // [7] ecrc校验的功能，不支持，硬连线为0
        unsigned int    ecrc_check_enable     : 1   ; // [8] ecrc校验的功能，不支持，硬连线为0
        unsigned int    reserved_254          : 2   ; // [10..9] 保留
        unsigned int    tlp_prefix_log_present  : 1   ; // [11] 存在tlp_prefix_log
        unsigned int    reserved_253          : 20  ; // [31..12] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_advanced_error_capabilities_and_control_u;

// define the union ntb_meep_ntb_iep_bar01_ctrl_u
// 映射到bar01空间的tlp头控制寄存器
// 0x9708
typedef union tagmeepntbiepbar01ctrl
{
    // define the struct bits
    struct
    {
        unsigned int    bar01_type            : 5   ; // [4..0] 当地址与bar01的基地址匹配时，tlp头的type字段将使用该字段
        unsigned int    bar01_tc              : 3   ; // [7..5] 当地址与bar01的基地址匹配时，tlp头的tc字段将使用该字段
        unsigned int    bar01_td              : 1   ; // [8] 当地址与bar01的基地址匹配时，tlp头的td字段将使用该字段
        unsigned int    bar01_attr            : 2   ; // [10..9] 当地址与bar01的基地址匹配时，tlp头的attr字段将使用该字段
        unsigned int    reserved_258          : 7   ; // [17..11] 保留位
        unsigned int    bar01_match_en        : 1   ; // [18] 当该比特置1时，local cpu发出去的与bar01基地址匹配的tlp头的相应字段将使用本寄存器定义的字段
        unsigned int    reserved_257          : 13  ; // [31..19] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ntb_iep_bar01_ctrl_u;

// define the union ntb_meep_ntb_iep_bar23_ctrl_u
// 映射到bar23空间的tlp头控制寄存器
// 0x970c
typedef union tagmeepntbiepbar23ctrl
{
    // define the struct bits
    struct
    {
        unsigned int    bar23_type            : 5   ; // [4..0] 当地址与bar23的基地址匹配时，tlp头的type字段将使用该字段
        unsigned int    bar23_tc              : 3   ; // [7..5] 当地址与bar23的基地址匹配时，tlp头的tc字段将使用该字段
        unsigned int    bar23_td              : 1   ; // [8] 当地址与bar23的基地址匹配时，tlp头的td字段将使用该字段
        unsigned int    bar23_attr            : 2   ; // [10..9] 当地址与bar23的基地址匹配时，tlp头的attr字段将使用该字段
        unsigned int    reserved_260          : 7   ; // [17..11] 保留位
        unsigned int    bar23_match_en        : 1   ; // [18] 当该比特置1时，local cpu发出去的与bar23基地址匹配的tlp头的相应字段将使用本寄存器定义的字段
        unsigned int    reserved_259          : 13  ; // [31..19] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ntb_iep_bar23_ctrl_u;

// define the union ntb_meep_ntb_iep_bar45_ctrl_u
// 映射到bar45空间的tlp头控制寄存器
// 0x9710
typedef union tagmeepntbiepbar45ctrl
{
    // define the struct bits
    struct
    {
        unsigned int    bar45_type            : 5   ; // [4..0] 当地址与bar45的基地址匹配时，tlp头的type字段将使用该字段
        unsigned int    bar45_tc              : 3   ; // [7..5] 当地址与bar45的基地址匹配时，tlp头的tc字段将使用该字段
        unsigned int    bar45_td              : 1   ; // [8] 当地址与bar45的基地址匹配时，tlp头的td字段将使用该字段
        unsigned int    bar45_attr            : 2   ; // [10..9] 当地址与bar45的基地址匹配时，tlp头的attr字段将使用该字段
        unsigned int    reserved_262          : 7   ; // [17..11] 保留位
        unsigned int    bar45_match_en        : 1   ; // [18] 当该比特置1时，local cpu发出去的与bar45基地址匹配的tlp头的相应字段将使用本寄存器定义的字段
        unsigned int    reserved_261          : 13  ; // [31..19] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ntb_iep_bar45_ctrl_u;

// define the union ntb_meep_msi_ctrl_int_en_u
// msi interrupt使能信号
// 0x971c
typedef union tagmeepmsictrlinten
{
    // define the struct bits
    struct
    {
        unsigned int    msi_int_en            : 1   ; // [0] msi中断使能控制信号
        unsigned int    reserved_263          : 31  ; // [31..1] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_ctrl_int_en_u;

// define the union ntb_meep_msi_ctrl_int0_mask_u
// msi interrupt屏蔽信号
// 0x9720
typedef union tagmeepmsictrlint0mask
{
    // define the struct bits
    struct
    {
        unsigned int    msi_int_mask          : 1   ; // [0] msi中断屏蔽信号
        unsigned int    reserved_264          : 31  ; // [31..1] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_ctrl_int0_mask_u;

// define the union ntb_meep_msi_ctrl_int_status_u
// msi interrupt状态标志
// 0x9724
typedef union tagmeepmsictrlintstatus
{
    // define the struct bits
    struct
    {
        unsigned int    msi_int               : 1   ; // [0] 中断状态标志位
        unsigned int    reserved_265          : 31  ; // [31..1] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_msi_ctrl_int_status_u;

// define the union ntb_meep_dbi_ro_wr_en_u
// 写read-only控制寄存器
// 0x9728
typedef union tagmeepdbirowren
{
    // define the struct bits
    struct
    {
        unsigned int    dbi_ro_wr_en          : 1   ; // [0] 写read-only寄存器使能控制信号
        unsigned int    reserved_266          : 31  ; // [31..1] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_dbi_ro_wr_en_u;

// define the union ntb_meep_axi_err_response_u
// axi总线errorresponse控制寄存器
// 0x972c
typedef union tagmeepaxierrresponse
{
    // define the struct bits
    struct
    {
        unsigned int    err_resp_mode         : 4   ; // [3..0] axi总线错误response控制信号
        unsigned int    reserved_267          : 28  ; // [31..4] 保留位
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_axi_err_response_u;

// define the union ntb_meep_ntb_outbound_flow_u
// ntb outbound流量统计状态寄存器
// 0x971c
typedef union tagmeepntboutboundflow
{
    // define the struct bits
    struct
    {
        unsigned int    xali0_flow_cnt        : 16  ; // [15..0] 统计周期内，xali0口上的流量(单位为字节)
        unsigned int    xali1_flow_cnt        : 16  ; // [31..16] 统计周期内，xali1口上的流量(单位为字节)
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ntb_outbound_flow_u;

// define the union ntb_meep_ntb_hdr_ctrl_status_u
// ntb header ctrl status
// 0x9720
typedef union tagmeepntbhdrctrlstatus
{
    // define the struct bits
    struct
    {
        unsigned int    client0_tlp_hv        : 1   ; // [0]
        unsigned int    client0_tlp_dv        : 1   ; // [1]
        unsigned int    client0_tlp_eot       : 1   ; // [2]
        unsigned int    ntb_xali0_halt        : 1   ; // [3] axi桥xali0上接口控制信号
        unsigned int    client0_tlp_hv_out    : 1   ; // [4]
        unsigned int    client0_tlp_dv_out    : 1   ; // [5]
        unsigned int    client0_tlp_eot_out   : 1   ; // [6]
        unsigned int    xadm_xali0_halt       : 1   ; // [7] xadm的xali0上接口控制信号
        unsigned int    client1_tlp_hv        : 1   ; // [8]
        unsigned int    client1_tlp_dv        : 1   ; // [9]
        unsigned int    client1_tlp_eot       : 1   ; // [10]
        unsigned int    ntb_xali1_halt        : 1   ; // [11] axi桥xali1上接口控制信号
        unsigned int    client1_tlp_hv_out    : 1   ; // [12]
        unsigned int    client1_tlp_dv_out    : 1   ; // [13]
        unsigned int    client1_tlp_eot_out   : 1   ; // [14]
        unsigned int    xadm_xali1_halt       : 1   ; // [15] xadm的xali0上接口控制信号
        unsigned int    ntb_hdr_ctrl          : 2   ; // [17..16] 选择寄存器0x0724~0x0730输出的头字段2'b00 : 输出axi桥xali0上头字段2'b01 : 输出xadm的xali0上的头字段2'b10 ：输出axi桥xali1上头字段2'b11 ：xadm的xali0上头字段
        unsigned int    reserved_269          : 14  ; // [31..18] 保留
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_ntb_hdr_ctrl_status_u;

// define the union ntb_meep_dev_type_switch_u
// 设备类型切换寄存器
// 0x9734
typedef union tagmeepdevtypeswitch
{
    // define the struct bits
    struct
    {
        unsigned int    dev_type_sw           : 1   ; // [0] 在ntb/ntb模式下，通过写该寄存器，是的在training过程中切换到rc的device重新切换成ep
        unsigned int    reserved_270          : 31  ; // [31..1]
    } bits;

    // define an unsigned member
    unsigned int    u32;

} ntb_meep_dev_type_switch_u;

/* SAS1_PCIE_CFG Base address of Module's Register */
#define PCIE_SUBCTRL_BASE                       (0x0)

/******************************************************************************/
/*                      PHOSPHORV660 SAS1_PCIE_CFG Registers' Definitions                            */
/******************************************************************************/

#define PCIE_SUBCTRL_SC_PCIE0_CLK_EN_REG                   (PCIE_SUBCTRL_BASE + 0x300)  /* PCIE0时钟使能寄存器 */
#define PCIE_SUBCTRL_SC_PCIE0_CLK_DIS_REG                  (PCIE_SUBCTRL_BASE + 0x304)  /* PCIE0时钟禁止寄存器 */
#define PCIE_SUBCTRL_SC_PCIE1_CLK_EN_REG                   (PCIE_SUBCTRL_BASE + 0x308)  /* PCIE1时钟使能寄存器 */
#define PCIE_SUBCTRL_SC_PCIE1_CLK_DIS_REG                  (PCIE_SUBCTRL_BASE + 0x30C)  /* PCIE1时钟禁止寄存器 */
#define PCIE_SUBCTRL_SC_PCIE2_CLK_EN_REG                   (PCIE_SUBCTRL_BASE + 0x310)  /* PCIE2时钟使能寄存器 */
#define PCIE_SUBCTRL_SC_PCIE2_CLK_DIS_REG                  (PCIE_SUBCTRL_BASE + 0x314)  /* PCIE2时钟禁止寄存器 */
#define PCIE_SUBCTRL_SC_SAS_CLK_EN_REG                     (PCIE_SUBCTRL_BASE + 0x318)  /* SAS时钟门控信号 */
#define PCIE_SUBCTRL_SC_SAS_CLK_DIS_REG                    (PCIE_SUBCTRL_BASE + 0x31C)  /* SAS时钟门控信号 */
#define PCIE_SUBCTRL_SC_PCIE3_CLK_EN_REG                   (PCIE_SUBCTRL_BASE + 0x320)  /* PCIE3时钟使能寄存器 */
#define PCIE_SUBCTRL_SC_PCIE3_CLK_DIS_REG                  (PCIE_SUBCTRL_BASE + 0x324)  /* PCIE3时钟禁止寄存器 */
#define PCIE_SUBCTRL_SC_ITS_CLK_EN_REG                     (PCIE_SUBCTRL_BASE + 0x328)  /* ITS时钟使能寄存器 */
#define PCIE_SUBCTRL_SC_ITS_CLK_DIS_REG                    (PCIE_SUBCTRL_BASE + 0x32C)  /* ITS时钟禁止寄存器 */
#define PCIE_SUBCTRL_SC_SLLC_CLK_EN_REG                    (PCIE_SUBCTRL_BASE + 0x360)  /* SLLC0时钟使能寄存器 */
#define PCIE_SUBCTRL_SC_SLLC_CLK_DIS_REG                   (PCIE_SUBCTRL_BASE + 0x364)  /* SLLC0时钟禁止寄存器 */
#define PCIE_SUBCTRL_SC_PCIE0_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA00)  /* PCIE0软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE0_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA04)  /* PCIE0软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE1_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA08)  /* PCIE1软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE1_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA0C)  /* PCIE1软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE2_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA10)  /* PCIE2软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE2_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA14)  /* PCIE2软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_SAS_RESET_REQ_REG                  (PCIE_SUBCTRL_BASE + 0xA18)  /* SAS软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_SAS_RESET_DREQ_REG                 (PCIE_SUBCTRL_BASE + 0xA1C)  /* SAS软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_MCTP0_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA20)  /* MCTP0软复位请求控制寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_MCTP0_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA24)  /* MCTP0软复位去请求控制寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_MCTP1_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA28)  /* MCTP1软复位请求控制寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_MCTP1_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA2C)  /* MCTP1软复位去请求控制寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_MCTP2_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA30)  /* MCTP2软复位请求控制寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_MCTP2_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA34)  /* MCTP2软复位去请求控制寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_SLLC_TSVRX_RESET_REQ_REG           (PCIE_SUBCTRL_BASE + 0xA58)  /* SLLC TSVRX通道软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_SLLC_TSVRX_RESET_DREQ_REG          (PCIE_SUBCTRL_BASE + 0xA5C)  /* SLLC TSVRX通道软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE_HILINK_PCS_RESET_REQ_REG      (PCIE_SUBCTRL_BASE + 0xA60)  /* PCIE HILINK PCS软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE_HILINK_PCS_RESET_DREQ_REG     (PCIE_SUBCTRL_BASE + 0xA64)  /* PCIE HILINK PCS软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE3_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA68)  /* PCIE3软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE3_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA6C)  /* PCIE3软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_MCTP3_RESET_REQ_REG                (PCIE_SUBCTRL_BASE + 0xA70)  /* MCTP3软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_MCTP3_RESET_DREQ_REG               (PCIE_SUBCTRL_BASE + 0xA74)  /* MCTP3软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_ITS_RESET_REQ_REG                  (PCIE_SUBCTRL_BASE + 0xA80)  /* ITS软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_ITS_RESET_DREQ_REG                 (PCIE_SUBCTRL_BASE + 0xA84)  /* ITS软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_SLLC_RESET_REQ_REG                 (PCIE_SUBCTRL_BASE + 0xAA0)  /* SLLC0软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_SLLC_RESET_DREQ_REG                (PCIE_SUBCTRL_BASE + 0xAA4)  /* SLLC0软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCS_LOCAL_RESET_REQ_REG            (PCIE_SUBCTRL_BASE + 0xAC0)  /* PCS LOCAL软复位请求控制寄存器 */
#define PCIE_SUBCTRL_SC_PCS_LOCAL_RESET_DREQ_REG           (PCIE_SUBCTRL_BASE + 0xAC4)  /* PCS LOCAL软复位去请求控制寄存器 */
#define PCIE_SUBCTRL_SC_DISP_DAW_EN_REG                    (PCIE_SUBCTRL_BASE + 0x1000) /* dispatch daw en配置 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY0_REG            (PCIE_SUBCTRL_BASE + 0x1004) /* dispatch daw配置阵列0 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY1_REG            (PCIE_SUBCTRL_BASE + 0x1008) /* dispatch daw配置阵列1 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY2_REG            (PCIE_SUBCTRL_BASE + 0x100C) /* dispatch daw配置阵列2 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY3_REG            (PCIE_SUBCTRL_BASE + 0x1010) /* dispatch daw配置阵列3 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY4_REG            (PCIE_SUBCTRL_BASE + 0x1014) /* dispatch daw配置阵列4 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY5_REG            (PCIE_SUBCTRL_BASE + 0x1018) /* dispatch daw配置阵列5 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY6_REG            (PCIE_SUBCTRL_BASE + 0x101C) /* dispatch daw配置阵列6 */
#define PCIE_SUBCTRL_SC_DISPATCH_DAW_ARRAY7_REG            (PCIE_SUBCTRL_BASE + 0x1020) /* dispatch daw配置阵列7 */
#define PCIE_SUBCTRL_SC_DISPATCH_RETRY_CONTROL_REG         (PCIE_SUBCTRL_BASE + 0x1030) /* dispatch retry控制寄存器 */
#define PCIE_SUBCTRL_SC_DISPATCH_INTMASK_REG               (PCIE_SUBCTRL_BASE + 0x1100) /* dispatch的中断屏蔽寄存器 */
#define PCIE_SUBCTRL_SC_DISPATCH_RAWINT_REG                (PCIE_SUBCTRL_BASE + 0x1104) /* dispatch的原始中断状态寄存器 */
#define PCIE_SUBCTRL_SC_DISPATCH_INTSTAT_REG               (PCIE_SUBCTRL_BASE + 0x1108) /* dispatch的屏蔽后的中断状态寄存器 */
#define PCIE_SUBCTRL_SC_DISPATCH_INTCLR_REG                (PCIE_SUBCTRL_BASE + 0x110C) /* dispatch的中断清除寄存器 */
#define PCIE_SUBCTRL_SC_DISPATCH_ERRSTAT_REG               (PCIE_SUBCTRL_BASE + 0x1110) /* dispatch的ERR状态寄存器 */
#define PCIE_SUBCTRL_SC_REMAP_CTRL_REG                     (PCIE_SUBCTRL_BASE + 0x1200) /* subsys的启动Remap寄存器 */
#define PCIE_SUBCTRL_SC_FTE_MUX_CTRL_REG                   (PCIE_SUBCTRL_BASE + 0x2200)
#define PCIE_SUBCTRL_SC_HILINK0_MUX_CTRL_REG               (PCIE_SUBCTRL_BASE + 0x2300) /* HILINK复用选择 */
#define PCIE_SUBCTRL_SC_HILINK1_MUX_CTRL_REG               (PCIE_SUBCTRL_BASE + 0x2304) /* HILINK复用选择 */
#define PCIE_SUBCTRL_SC_HILINK2_MUX_CTRL_REG               (PCIE_SUBCTRL_BASE + 0x2308) /* HILINK复用选择 */
#define PCIE_SUBCTRL_SC_HILINK5_MUX_CTRL_REG               (PCIE_SUBCTRL_BASE + 0x2314) /* HILINK复用选择 */
#define PCIE_SUBCTRL_SC_HILINK1_AHB_MUX_CTRL_REG           (PCIE_SUBCTRL_BASE + 0x2324) /* HILINK AHB复用选择 */
#define PCIE_SUBCTRL_SC_HILINK2_AHB_MUX_CTRL_REG           (PCIE_SUBCTRL_BASE + 0x2328) /* HILINK AHB复用选择 */
#define PCIE_SUBCTRL_SC_HILINK5_AHB_MUX_CTRL_REG           (PCIE_SUBCTRL_BASE + 0x2334) /* HILINK AHB复用选择 */
#define PCIE_SUBCTRL_SC_HILINK5_LRSTB_MUX_CTRL_REG         (PCIE_SUBCTRL_BASE + 0x2340) /* HILINK5 lrstb[3:0]的MUX选择控制 */
#define PCIE_SUBCTRL_SC_HILINK6_LRSTB_MUX_CTRL_REG         (PCIE_SUBCTRL_BASE + 0x2344) /* HILINK6 lrstb[3:0]的MUX选择控制 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_SS_REFCLK_REG        (PCIE_SUBCTRL_BASE + 0x2400) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_CS_REFCLK_DIRSEL_REG (PCIE_SUBCTRL_BASE + 0x2404) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_LIFECLK2DIG_SEL_REG  (PCIE_SUBCTRL_BASE + 0x2408) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_CORE_CLK_SELEXT_REG  (PCIE_SUBCTRL_BASE + 0x240C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_CORE_CLK_SEL_REG     (PCIE_SUBCTRL_BASE + 0x2410) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_CTRL_BUS_MODE_REG    (PCIE_SUBCTRL_BASE + 0x2414) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_MACROPWRDB_REG       (PCIE_SUBCTRL_BASE + 0x2418) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_GRSTB_REG            (PCIE_SUBCTRL_BASE + 0x241C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_BIT_SLIP_REG         (PCIE_SUBCTRL_BASE + 0x2420) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_LRSTB_REG            (PCIE_SUBCTRL_BASE + 0x2424) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_SS_REFCLK_REG        (PCIE_SUBCTRL_BASE + 0x2500) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_CS_REFCLK_DIRSEL_REG (PCIE_SUBCTRL_BASE + 0x2504) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_LIFECLK2DIG_SEL_REG  (PCIE_SUBCTRL_BASE + 0x2508) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_CORE_CLK_SELEXT_REG  (PCIE_SUBCTRL_BASE + 0x250C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_CORE_CLK_SEL_REG     (PCIE_SUBCTRL_BASE + 0x2510) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_CTRL_BUS_MODE_REG    (PCIE_SUBCTRL_BASE + 0x2514) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_MACROPWRDB_REG       (PCIE_SUBCTRL_BASE + 0x2518) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_GRSTB_REG            (PCIE_SUBCTRL_BASE + 0x251C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_BIT_SLIP_REG         (PCIE_SUBCTRL_BASE + 0x2520) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_LRSTB_REG            (PCIE_SUBCTRL_BASE + 0x2524) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_SS_REFCLK_REG        (PCIE_SUBCTRL_BASE + 0x2600) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_CS_REFCLK_DIRSEL_REG (PCIE_SUBCTRL_BASE + 0x2604) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_LIFECLK2DIG_SEL_REG  (PCIE_SUBCTRL_BASE + 0x2608) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_CORE_CLK_SELEXT_REG  (PCIE_SUBCTRL_BASE + 0x260C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_CORE_CLK_SEL_REG     (PCIE_SUBCTRL_BASE + 0x2610) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_CTRL_BUS_MODE_REG    (PCIE_SUBCTRL_BASE + 0x2614) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_MACROPWRDB_REG       (PCIE_SUBCTRL_BASE + 0x2618) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_GRSTB_REG            (PCIE_SUBCTRL_BASE + 0x261C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_BIT_SLIP_REG         (PCIE_SUBCTRL_BASE + 0x2620) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_LRSTB_REG            (PCIE_SUBCTRL_BASE + 0x2624) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_SS_REFCLK_REG        (PCIE_SUBCTRL_BASE + 0x2700) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_CS_REFCLK_DIRSEL_REG (PCIE_SUBCTRL_BASE + 0x2704) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_LIFECLK2DIG_SEL_REG  (PCIE_SUBCTRL_BASE + 0x2708) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_CORE_CLK_SELEXT_REG  (PCIE_SUBCTRL_BASE + 0x270C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_CORE_CLK_SEL_REG     (PCIE_SUBCTRL_BASE + 0x2710) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_CTRL_BUS_MODE_REG    (PCIE_SUBCTRL_BASE + 0x2714) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_MACROPWRDB_REG       (PCIE_SUBCTRL_BASE + 0x2718) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_GRSTB_REG            (PCIE_SUBCTRL_BASE + 0x271C) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_BIT_SLIP_REG         (PCIE_SUBCTRL_BASE + 0x2720) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_LRSTB_REG            (PCIE_SUBCTRL_BASE + 0x2724) /* HILINK配置寄存器 */
#define PCIE_SUBCTRL_SC_PCIE0_CLKREQ_REG                   (PCIE_SUBCTRL_BASE + 0x2800)
#define PCIE_SUBCTRL_SC_PCIE0_AXI_MSTR_OOO_WR_CFG_REG      (PCIE_SUBCTRL_BASE + 0x2880)
#define PCIE_SUBCTRL_SC_PCIE0_AXI_MSTR_OOO_RD_CFG_REG      (PCIE_SUBCTRL_BASE + 0x2890)
#define PCIE_SUBCTRL_SC_PCIE1_CLKREQ_REG                   (PCIE_SUBCTRL_BASE + 0x2900)
#define PCIE_SUBCTRL_SC_PCIE1_AXI_MSTR_OOO_WR_CFG_REG      (PCIE_SUBCTRL_BASE + 0x2980)
#define PCIE_SUBCTRL_SC_PCIE1_AXI_MSTR_OOO_RD_CFG_REG      (PCIE_SUBCTRL_BASE + 0x2990)
#define PCIE_SUBCTRL_SC_PCIE2_CLKREQ_REG                   (PCIE_SUBCTRL_BASE + 0x2A00)
#define PCIE_SUBCTRL_SC_PCIE2_AXI_MSTR_OOO_WR_CFG_REG      (PCIE_SUBCTRL_BASE + 0x2A80)
#define PCIE_SUBCTRL_SC_PCIE2_AXI_MSTR_OOO_RD_CFG_REG      (PCIE_SUBCTRL_BASE + 0x2A90)
#define PCIE_SUBCTRL_SC_PCIE3_CLKREQ_REG                   (PCIE_SUBCTRL_BASE + 0x2B00)
#define PCIE_SUBCTRL_SC_SMMU_MEM_CTRL0_REG                 (PCIE_SUBCTRL_BASE + 0x3000) /* smmu mem控制寄存器0 */
#define PCIE_SUBCTRL_SC_SMMU_MEM_CTRL1_REG                 (PCIE_SUBCTRL_BASE + 0x3004) /* smmu mem控制寄存器1 */
#define PCIE_SUBCTRL_SC_SMMU_MEM_CTRL2_REG                 (PCIE_SUBCTRL_BASE + 0x3008) /* smmu mem控制寄存器2 */
#define PCIE_SUBCTRL_SC_SLLC0_MEM_CTRL_REG                 (PCIE_SUBCTRL_BASE + 0x3010) /* sllc0 mem控制寄存器 */
#define PCIE_SUBCTRL_SC_SAS_MEM_CTRL_REG                   (PCIE_SUBCTRL_BASE + 0x3030) /* sas mem控制寄存器 */
#define PCIE_SUBCTRL_SC_PCIE_MEM_CTRL0_REG                 (PCIE_SUBCTRL_BASE + 0x3040) /* pcie mem控制寄存器0 */
#define PCIE_SUBCTRL_SC_PCIE_MEM_CTRL1_REG                 (PCIE_SUBCTRL_BASE + 0x3044) /* pcie mem控制寄存器1 */
#define PCIE_SUBCTRL_SC_PCIE_MEM_CTRL2_REG                 (PCIE_SUBCTRL_BASE + 0x3048) /* pcie mem控制寄存器2 */
#define PCIE_SUBCTRL_SC_SKEW_COMMON_0_REG                  (PCIE_SUBCTRL_BASE + 0x3400)
#define PCIE_SUBCTRL_SC_SKEW_COMMON_1_REG                  (PCIE_SUBCTRL_BASE + 0x3404)
#define PCIE_SUBCTRL_SC_SKEW_COMMON_2_REG                  (PCIE_SUBCTRL_BASE + 0x3408)
#define PCIE_SUBCTRL_SC_SKEW_A_0_REG                       (PCIE_SUBCTRL_BASE + 0x3500)
#define PCIE_SUBCTRL_SC_SKEW_A_1_REG                       (PCIE_SUBCTRL_BASE + 0x3504)
#define PCIE_SUBCTRL_SC_SKEW_A_2_REG                       (PCIE_SUBCTRL_BASE + 0x3508)
#define PCIE_SUBCTRL_SC_SKEW_A_3_REG                       (PCIE_SUBCTRL_BASE + 0x350C)
#define PCIE_SUBCTRL_SC_SKEW_A_4_REG                       (PCIE_SUBCTRL_BASE + 0x3510)
#define PCIE_SUBCTRL_SC_SKEW_A_5_REG                       (PCIE_SUBCTRL_BASE + 0x3514)
#define PCIE_SUBCTRL_SC_SKEW_A_6_REG                       (PCIE_SUBCTRL_BASE + 0x3518)
#define PCIE_SUBCTRL_SC_SKEW_A_7_REG                       (PCIE_SUBCTRL_BASE + 0x351C)
#define PCIE_SUBCTRL_SC_SKEW_A_8_REG                       (PCIE_SUBCTRL_BASE + 0x3520)
#define PCIE_SUBCTRL_SC_SKEW_B_0_REG                       (PCIE_SUBCTRL_BASE + 0x3600)
#define PCIE_SUBCTRL_SC_SKEW_B_1_REG                       (PCIE_SUBCTRL_BASE + 0x3604)
#define PCIE_SUBCTRL_SC_SKEW_B_2_REG                       (PCIE_SUBCTRL_BASE + 0x3608)
#define PCIE_SUBCTRL_SC_SKEW_B_3_REG                       (PCIE_SUBCTRL_BASE + 0x360C)
#define PCIE_SUBCTRL_SC_SKEW_B_4_REG                       (PCIE_SUBCTRL_BASE + 0x3610)
#define PCIE_SUBCTRL_SC_SKEW_B_5_REG                       (PCIE_SUBCTRL_BASE + 0x3614)
#define PCIE_SUBCTRL_SC_SKEW_B_6_REG                       (PCIE_SUBCTRL_BASE + 0x3618)
#define PCIE_SUBCTRL_SC_SKEW_B_7_REG                       (PCIE_SUBCTRL_BASE + 0x361C)
#define PCIE_SUBCTRL_SC_SKEW_B_8_REG                       (PCIE_SUBCTRL_BASE + 0x3620)
#define PCIE_SUBCTRL_SC_PCIE0_CLK_ST_REG                   (PCIE_SUBCTRL_BASE + 0x5300) /* PCIE0时钟状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE1_CLK_ST_REG                   (PCIE_SUBCTRL_BASE + 0x5304) /* PCIE1时钟状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE2_CLK_ST_REG                   (PCIE_SUBCTRL_BASE + 0x5308) /* PCIE2时钟状态寄存器 */
#define PCIE_SUBCTRL_SC_SAS_CLK_ST_REG                     (PCIE_SUBCTRL_BASE + 0x530C) /* SAS时钟状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE3_CLK_ST_REG                   (PCIE_SUBCTRL_BASE + 0x5310) /* PCIE3时钟状态寄存器 */
#define PCIE_SUBCTRL_SC_ITS_CLK_ST_REG                     (PCIE_SUBCTRL_BASE + 0x5314) /* ITS时钟状态寄存器 */
#define PCIE_SUBCTRL_SC_SLLC_CLK_ST_REG                    (PCIE_SUBCTRL_BASE + 0x5330) /* SLLC0时钟状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE0_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A00) /* PCIE0复位状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE1_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A04) /* PCIE1复位状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE2_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A08) /* PCIE2复位状态寄存器 */
#define PCIE_SUBCTRL_SC_SAS_RESET_ST_REG                   (PCIE_SUBCTRL_BASE + 0x5A0C) /* SAS复位状态寄存器 */
#define PCIE_SUBCTRL_SC_MCTP0_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A10) /* MCTP0复位状态寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_MCTP1_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A14) /* MCTP1复位状态寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_MCTP2_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A18) /* MCTP2复位状态寄存器（注意：本寄存器保留不用） */
#define PCIE_SUBCTRL_SC_SLLC_TSVRX_RESET_ST_REG            (PCIE_SUBCTRL_BASE + 0x5A2C) /* 为SLLC TSVRX通道软复位状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE_HILINK_PCS_RESET_ST_REG       (PCIE_SUBCTRL_BASE + 0x5A30) /* PCIE HILINK PCS复位状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE3_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A34) /* PCIE3复位状态寄存器 */
#define PCIE_SUBCTRL_SC_MCTP3_RESET_ST_REG                 (PCIE_SUBCTRL_BASE + 0x5A38) /* MCTP3复位状态寄存器 */
#define PCIE_SUBCTRL_SC_ITS_RESET_ST_REG                   (PCIE_SUBCTRL_BASE + 0x5A40) /* ITS复位状态寄存器 */
#define PCIE_SUBCTRL_SC_SLLC_RESET_ST_REG                  (PCIE_SUBCTRL_BASE + 0x5A50) /* SLLC0复位状态寄存器 */
#define PCIE_SUBCTRL_SC_PCS_LOCAL_RESET_ST_REG             (PCIE_SUBCTRL_BASE + 0x5A60) /* PCS LOCAL软复位请求状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_PLLOUTOFLOCK_REG     (PCIE_SUBCTRL_BASE + 0x6400) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_PRBS_ERR_REG         (PCIE_SUBCTRL_BASE + 0x6404) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK0_MACRO_LOS_REG              (PCIE_SUBCTRL_BASE + 0x6408) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_PLLOUTOFLOCK_REG     (PCIE_SUBCTRL_BASE + 0x6500) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_PRBS_ERR_REG         (PCIE_SUBCTRL_BASE + 0x6504) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK1_MACRO_LOS_REG              (PCIE_SUBCTRL_BASE + 0x6508) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_PLLOUTOFLOCK_REG     (PCIE_SUBCTRL_BASE + 0x6600) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_PRBS_ERR_REG         (PCIE_SUBCTRL_BASE + 0x6604) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK5_MACRO_LOS_REG              (PCIE_SUBCTRL_BASE + 0x6608) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_PLLOUTOFLOCK_REG     (PCIE_SUBCTRL_BASE + 0x6700) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_PRBS_ERR_REG         (PCIE_SUBCTRL_BASE + 0x6704) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_HILINK6_MACRO_LOS_REG              (PCIE_SUBCTRL_BASE + 0x6708) /* HILINK状态寄存器 */
#define PCIE_SUBCTRL_SC_PCIE0_RXEQINPRO_STAT_REG           (PCIE_SUBCTRL_BASE + 0x6800)
#define PCIE_SUBCTRL_SC_PCIE0_LINKINT_RCVRY_STAT_REG       (PCIE_SUBCTRL_BASE + 0x6804)
#define PCIE_SUBCTRL_SC_PCIE0_SYS_STATE0_REG               (PCIE_SUBCTRL_BASE + 0x6808) /* pcie0状态寄存器0 */
#define PCIE_SUBCTRL_SC_PCIE0_SYS_STATE1_REG               (PCIE_SUBCTRL_BASE + 0x680C) /* pcie0状态寄存器1 */
#define PCIE_SUBCTRL_SC_PCIE0_SYS_STATE2_REG               (PCIE_SUBCTRL_BASE + 0x6810) /* pcie0状态寄存器2 */
#define PCIE_SUBCTRL_SC_PCIE0_SYS_STATE3_REG               (PCIE_SUBCTRL_BASE + 0x6814) /* pcie0状态寄存器3 */
#define PCIE_SUBCTRL_SC_PCIE0_SYS_STATE4_REG               (PCIE_SUBCTRL_BASE + 0x6818) /* pcie0状态寄存器4 */
#define PCIE_SUBCTRL_SC_PCIE0_AXI_MSTR_OOO_WR_STS0_REG     (PCIE_SUBCTRL_BASE + 0x6880) /* 写方向各个outstanding transaction ID的空闲状态 */
#define PCIE_SUBCTRL_SC_PCIE0_AXI_MSTR_OOO_WR_STS1_REG     (PCIE_SUBCTRL_BASE + 0x6884) /* OOO写通道工作状态 */
#define PCIE_SUBCTRL_SC_PCIE0_AXI_MSTR_OOO_RD_STS0_REG     (PCIE_SUBCTRL_BASE + 0x6890) /* 读方向各个outstanding transaction ID的空闲状态 */
#define PCIE_SUBCTRL_SC_PCIE0_AXI_MSTR_OOO_RD_STS1_REG     (PCIE_SUBCTRL_BASE + 0x6894) /* OOO读通道工作状态 */
#define PCIE_SUBCTRL_SC_PCIE0_DSIZE_BRG_ECC_ERR_REG        (PCIE_SUBCTRL_BASE + 0x68A0) /* PCIE对应DSIZE BRG的ECC错误状态 */
#define PCIE_SUBCTRL_SC_PCIE0_PCIEPHY_CTRL_ERROR_REG       (PCIE_SUBCTRL_BASE + 0x68C0) /* PCIE对应PCS控制器的错误状态 */
#define PCIE_SUBCTRL_SC_PCIE1_RXEQINPRO_STAT_REG           (PCIE_SUBCTRL_BASE + 0x6900)
#define PCIE_SUBCTRL_SC_PCIE1_LINKINT_RCVRY_STAT_REG       (PCIE_SUBCTRL_BASE + 0x6904)
#define PCIE_SUBCTRL_SC_PCIE1_SYS_STATE0_REG               (PCIE_SUBCTRL_BASE + 0x6908) /* pcie1状态寄存器0 */
#define PCIE_SUBCTRL_SC_PCIE1_SYS_STATE1_REG               (PCIE_SUBCTRL_BASE + 0x690C) /* pcie1状态寄存器1 */
#define PCIE_SUBCTRL_SC_PCIE1_SYS_STATE2_REG               (PCIE_SUBCTRL_BASE + 0x6910) /* pcie1状态寄存器2 */
#define PCIE_SUBCTRL_SC_PCIE1_SYS_STATE3_REG               (PCIE_SUBCTRL_BASE + 0x6914) /* pcie1状态寄存器3 */
#define PCIE_SUBCTRL_SC_PCIE1_SYS_STATE4_REG               (PCIE_SUBCTRL_BASE + 0x6918) /* pcie1状态寄存器4 */
#define PCIE_SUBCTRL_SC_PCIE1_AXI_MSTR_OOO_WR_STS0_REG     (PCIE_SUBCTRL_BASE + 0x6980) /* 写方向各个outstanding transaction ID的空闲状态 */
#define PCIE_SUBCTRL_SC_PCIE1_AXI_MSTR_OOO_WR_STS1_REG     (PCIE_SUBCTRL_BASE + 0x6984) /* OOO写通道工作状态 */
#define PCIE_SUBCTRL_SC_PCIE1_AXI_MSTR_OOO_RD_STS0_REG     (PCIE_SUBCTRL_BASE + 0x6990) /* 读方向各个outstanding transaction ID的空闲状态 */
#define PCIE_SUBCTRL_SC_PCIE1_AXI_MSTR_OOO_RD_STS1_REG     (PCIE_SUBCTRL_BASE + 0x6994) /* OOO读通道工作状态 */
#define PCIE_SUBCTRL_SC_PCIE1_DSIZE_BRG_ECC_ERR_REG        (PCIE_SUBCTRL_BASE + 0x69A0) /* PCIE对应DSIZE BRG的ECC错误状态 */
#define PCIE_SUBCTRL_SC_PCIE1_PCIEPHY_CTRL_ERROR_REG       (PCIE_SUBCTRL_BASE + 0x69C0) /* PCIE对应PCS控制器的错误状态 */
#define PCIE_SUBCTRL_SC_PCIE2_RXEQINPRO_STAT_REG           (PCIE_SUBCTRL_BASE + 0x6A00)
#define PCIE_SUBCTRL_SC_PCIE2_LINKINT_RCVRY_STAT_REG       (PCIE_SUBCTRL_BASE + 0x6A04)
#define PCIE_SUBCTRL_SC_PCIE2_SYS_STATE0_REG               (PCIE_SUBCTRL_BASE + 0x6A08) /* pcie2状态寄存器0 */
#define PCIE_SUBCTRL_SC_PCIE2_SYS_STATE1_REG               (PCIE_SUBCTRL_BASE + 0x6A0C) /* pcie2状态寄存器1 */
#define PCIE_SUBCTRL_SC_PCIE2_SYS_STATE2_REG               (PCIE_SUBCTRL_BASE + 0x6A10) /* pcie2状态寄存器2 */
#define PCIE_SUBCTRL_SC_PCIE2_SYS_STATE3_REG               (PCIE_SUBCTRL_BASE + 0x6A14) /* pcie2状态寄存器3 */
#define PCIE_SUBCTRL_SC_PCIE2_SYS_STATE4_REG               (PCIE_SUBCTRL_BASE + 0x6A18) /* pcie2状态寄存器4 */
#define PCIE_SUBCTRL_SC_PCIE2_AXI_MSTR_OOO_WR_STS0_REG     (PCIE_SUBCTRL_BASE + 0x6A80) /* 写方向各个outstanding transaction ID的空闲状态 */
#define PCIE_SUBCTRL_SC_PCIE2_AXI_MSTR_OOO_WR_STS1_REG     (PCIE_SUBCTRL_BASE + 0x6A84) /* OOO写通道工作状态 */
#define PCIE_SUBCTRL_SC_PCIE2_AXI_MSTR_OOO_RD_STS0_REG     (PCIE_SUBCTRL_BASE + 0x6A90) /* 读方向各个outstanding transaction ID的空闲状态 */
#define PCIE_SUBCTRL_SC_PCIE2_AXI_MSTR_OOO_RD_STS1_REG     (PCIE_SUBCTRL_BASE + 0x6A94) /* OOO读通道工作状态 */
#define PCIE_SUBCTRL_SC_PCIE2_DSIZE_BRG_ECC_ERR_REG        (PCIE_SUBCTRL_BASE + 0x6AA0) /* PCIE对应DSIZE BRG的ECC错误状态 */
#define PCIE_SUBCTRL_SC_PCIE2_PCIEPHY_CTRL_ERROR_REG       (PCIE_SUBCTRL_BASE + 0x6AC0) /* PCIE对应PCS控制器的错误状态 */
#define PCIE_SUBCTRL_SC_PCIE3_SYS_STATE0_REG               (PCIE_SUBCTRL_BASE + 0x6B08) /* pcie3状态寄存器0 */
#define PCIE_SUBCTRL_SC_PCIE3_SYS_STATE1_REG               (PCIE_SUBCTRL_BASE + 0x6B0C) /* pcie3状态寄存器1 */
#define PCIE_SUBCTRL_SC_PCIE3_SYS_STATE2_REG               (PCIE_SUBCTRL_BASE + 0x6B10) /* pcie3状态寄存器2 */
#define PCIE_SUBCTRL_SC_PCIE3_SYS_STATE3_REG               (PCIE_SUBCTRL_BASE + 0x6B14) /* pcie3状态寄存器3 */
#define PCIE_SUBCTRL_SC_PCIE3_SYS_STATE4_REG               (PCIE_SUBCTRL_BASE + 0x6B18) /* pcie3状态寄存器4 */
#define PCIE_SUBCTRL_SC_PCIE3_PCIEPHY_CTRL_ERROR_REG       (PCIE_SUBCTRL_BASE + 0x6BC0) /* PCIE对应PCS控制器的错误状态 */
#define PCIE_SUBCTRL_SC_SKEW_ST_0_REG                      (PCIE_SUBCTRL_BASE + 0x7400)
#define PCIE_SUBCTRL_SC_SKEW_ST_A_0_REG                    (PCIE_SUBCTRL_BASE + 0x7500)
#define PCIE_SUBCTRL_SC_SKEW_ST_A_1_REG                    (PCIE_SUBCTRL_BASE + 0x7504)
#define PCIE_SUBCTRL_SC_SKEW_ST_A_2_REG                    (PCIE_SUBCTRL_BASE + 0x7508)
#define PCIE_SUBCTRL_SC_SKEW_ST_A_3_REG                    (PCIE_SUBCTRL_BASE + 0x750C)
#define PCIE_SUBCTRL_SC_SKEW_ST_B_0_REG                    (PCIE_SUBCTRL_BASE + 0x7600)
#define PCIE_SUBCTRL_SC_SKEW_ST_B_1_REG                    (PCIE_SUBCTRL_BASE + 0x7604)
#define PCIE_SUBCTRL_SC_SKEW_ST_B_2_REG                    (PCIE_SUBCTRL_BASE + 0x7608)
#define PCIE_SUBCTRL_SC_SKEW_ST_B_3_REG                    (PCIE_SUBCTRL_BASE + 0x760C)
#define PCIE_SUBCTRL_SC_ECO_RSV0_REG                       (PCIE_SUBCTRL_BASE + 0x8000) /* ECO 寄存器0 */
#define PCIE_SUBCTRL_SC_ECO_RSV1_REG                       (PCIE_SUBCTRL_BASE + 0x8004) /* ECO 寄存器1 */
#define PCIE_SUBCTRL_SC_ECO_RSV2_REG                       (PCIE_SUBCTRL_BASE + 0x8008) /* ECO 寄存器2 */

/* Define the union u_sc_pcie0_clk_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie0_enb         : 1   ; /* [0]  */
        unsigned int    clk_pcie0_pipe_enb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_clk_en;

/* Define the union u_sc_pcie0_clk_dis */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie0_dsb         : 1   ; /* [0]  */
        unsigned int    clk_pcie0_pipe_dsb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_clk_dis;

/* Define the union u_sc_pcie1_clk_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie1_enb         : 1   ; /* [0]  */
        unsigned int    clk_pcie1_pipe_enb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_clk_en;

/* Define the union u_sc_pcie1_clk_dis */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie1_dsb         : 1   ; /* [0]  */
        unsigned int    clk_pcie1_pipe_dsb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_clk_dis;

/* Define the union u_sc_pcie2_clk_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie2_enb         : 1   ; /* [0]  */
        unsigned int    clk_pcie2_pipe_enb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_clk_en;

/* Define the union u_sc_pcie2_clk_dis */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie2_dsb         : 1   ; /* [0]  */
        unsigned int    clk_pcie2_pipe_dsb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_clk_dis;

/* Define the union u_sc_sas_clk_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_sas_enb           : 1   ; /* [0]  */
        unsigned int    clk_sas_mem_enb       : 1   ; /* [1]  */
        unsigned int    clk_sas_ahb_enb       : 1   ; /* [2]  */
        unsigned int    clk_sas_oob_enb       : 1   ; /* [3]  */
        unsigned int    clk_sas_ch0_rx_enb    : 1   ; /* [4]  */
        unsigned int    clk_sas_ch1_rx_enb    : 1   ; /* [5]  */
        unsigned int    clk_sas_ch2_rx_enb    : 1   ; /* [6]  */
        unsigned int    clk_sas_ch3_rx_enb    : 1   ; /* [7]  */
        unsigned int    clk_sas_ch4_rx_enb    : 1   ; /* [8]  */
        unsigned int    clk_sas_ch5_rx_enb    : 1   ; /* [9]  */
        unsigned int    clk_sas_ch6_rx_enb    : 1   ; /* [10]  */
        unsigned int    clk_sas_ch7_rx_enb    : 1   ; /* [11]  */
        unsigned int    clk_sas_ch0_tx_enb    : 1   ; /* [12]  */
        unsigned int    clk_sas_ch1_tx_enb    : 1   ; /* [13]  */
        unsigned int    clk_sas_ch2_tx_enb    : 1   ; /* [14]  */
        unsigned int    clk_sas_ch3_tx_enb    : 1   ; /* [15]  */
        unsigned int    clk_sas_ch4_tx_enb    : 1   ; /* [16]  */
        unsigned int    clk_sas_ch5_tx_enb    : 1   ; /* [17]  */
        unsigned int    clk_sas_ch6_tx_enb    : 1   ; /* [18]  */
        unsigned int    clk_sas_ch7_tx_enb    : 1   ; /* [19]  */
        unsigned int    reserved_0            : 12  ; /* [31..20]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sas_clk_en;

/* Define the union u_sc_sas_clk_dis */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_sas_dsb           : 1   ; /* [0]  */
        unsigned int    clk_sas_mem_dsb       : 1   ; /* [1]  */
        unsigned int    clk_sas_ahb_dsb       : 1   ; /* [2]  */
        unsigned int    clk_sas_oob_dsb       : 1   ; /* [3]  */
        unsigned int    clk_sas_ch0_rx_dsb    : 1   ; /* [4]  */
        unsigned int    clk_sas_ch1_rx_dsb    : 1   ; /* [5]  */
        unsigned int    clk_sas_ch2_rx_dsb    : 1   ; /* [6]  */
        unsigned int    clk_sas_ch3_rx_dsb    : 1   ; /* [7]  */
        unsigned int    clk_sas_ch4_rx_dsb    : 1   ; /* [8]  */
        unsigned int    clk_sas_ch5_rx_dsb    : 1   ; /* [9]  */
        unsigned int    clk_sas_ch6_rx_dsb    : 1   ; /* [10]  */
        unsigned int    clk_sas_ch7_rx_dsb    : 1   ; /* [11]  */
        unsigned int    clk_sas_ch0_tx_dsb    : 1   ; /* [12]  */
        unsigned int    clk_sas_ch1_tx_dsb    : 1   ; /* [13]  */
        unsigned int    clk_sas_ch2_tx_dsb    : 1   ; /* [14]  */
        unsigned int    clk_sas_ch3_tx_dsb    : 1   ; /* [15]  */
        unsigned int    clk_sas_ch4_tx_dsb    : 1   ; /* [16]  */
        unsigned int    clk_sas_ch5_tx_dsb    : 1   ; /* [17]  */
        unsigned int    clk_sas_ch6_tx_dsb    : 1   ; /* [18]  */
        unsigned int    clk_sas_ch7_tx_dsb    : 1   ; /* [19]  */
        unsigned int    reserved_0            : 12  ; /* [31..20]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sas_clk_dis;

/* Define the union u_sc_pcie3_clk_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie3_enb         : 1   ; /* [0]  */
        unsigned int    clk_pcie3_pipe_enb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_clk_en;

/* Define the union u_sc_pcie3_clk_dis */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie3_dsb         : 1   ; /* [0]  */
        unsigned int    clk_pcie3_pipe_dsb    : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_clk_dis;

/* Define the union u_sc_its_clk_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_its_enb           : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_its_clk_en;

/* Define the union u_sc_its_clk_dis */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_its_dsb           : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_its_clk_dis;

/* Define the union u_sc_sllc_clk_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_sllc_enb          : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_clk_en;

/* Define the union u_sc_sllc_clk_dis */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_sllc_dsb          : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_clk_dis;

/* Define the union u_sc_pcie0_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_reset_req;

/* Define the union u_sc_pcie0_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_reset_dreq;

/* Define the union u_sc_pcie1_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_reset_req;

/* Define the union u_sc_pcie1_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_reset_dreq;

/* Define the union u_sc_pcie2_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_reset_req;

/* Define the union u_sc_pcie2_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_reset_dreq;

/* Define the union u_sc_sas_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sas_srst_req          : 1   ; /* [0]  */
        unsigned int    sas_oob_srst_req      : 1   ; /* [1]  */
        unsigned int    sas_ahb_srst_req      : 1   ; /* [2]  */
        unsigned int    sas_ch0_rx_srst_req   : 1   ; /* [3]  */
        unsigned int    sas_ch1_rx_srst_req   : 1   ; /* [4]  */
        unsigned int    sas_ch2_rx_srst_req   : 1   ; /* [5]  */
        unsigned int    sas_ch3_rx_srst_req   : 1   ; /* [6]  */
        unsigned int    sas_ch4_rx_srst_req   : 1   ; /* [7]  */
        unsigned int    sas_ch5_rx_srst_req   : 1   ; /* [8]  */
        unsigned int    sas_ch6_rx_srst_req   : 1   ; /* [9]  */
        unsigned int    sas_ch7_rx_srst_req   : 1   ; /* [10]  */
        unsigned int    sas_ch0_tx_srst_req   : 1   ; /* [11]  */
        unsigned int    sas_ch1_tx_srst_req   : 1   ; /* [12]  */
        unsigned int    sas_ch2_tx_srst_req   : 1   ; /* [13]  */
        unsigned int    sas_ch3_tx_srst_req   : 1   ; /* [14]  */
        unsigned int    sas_ch4_tx_srst_req   : 1   ; /* [15]  */
        unsigned int    sas_ch5_tx_srst_req   : 1   ; /* [16]  */
        unsigned int    sas_ch6_tx_srst_req   : 1   ; /* [17]  */
        unsigned int    sas_ch7_tx_srst_req   : 1   ; /* [18]  */
        unsigned int    reserved_0            : 13  ; /* [31..19]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sas_reset_req;

/* Define the union u_sc_sas_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sas_srst_dreq         : 1   ; /* [0]  */
        unsigned int    sas_oob_srst_dreq     : 1   ; /* [1]  */
        unsigned int    sas_ahb_srst_dreq     : 1   ; /* [2]  */
        unsigned int    sas_ch0_rx_srst_dreq  : 1   ; /* [3]  */
        unsigned int    sas_ch1_rx_srst_dreq  : 1   ; /* [4]  */
        unsigned int    sas_ch2_rx_srst_dreq  : 1   ; /* [5]  */
        unsigned int    sas_ch3_rx_srst_dreq  : 1   ; /* [6]  */
        unsigned int    sas_ch4_rx_srst_dreq  : 1   ; /* [7]  */
        unsigned int    sas_ch5_rx_srst_dreq  : 1   ; /* [8]  */
        unsigned int    sas_ch6_rx_srst_dreq  : 1   ; /* [9]  */
        unsigned int    sas_ch7_rx_srst_dreq  : 1   ; /* [10]  */
        unsigned int    sas_ch0_tx_srst_dreq  : 1   ; /* [11]  */
        unsigned int    sas_ch1_tx_srst_dreq  : 1   ; /* [12]  */
        unsigned int    sas_ch2_tx_srst_dreq  : 1   ; /* [13]  */
        unsigned int    sas_ch3_tx_srst_dreq  : 1   ; /* [14]  */
        unsigned int    sas_ch4_tx_srst_dreq  : 1   ; /* [15]  */
        unsigned int    sas_ch5_tx_srst_dreq  : 1   ; /* [16]  */
        unsigned int    sas_ch6_tx_srst_dreq  : 1   ; /* [17]  */
        unsigned int    sas_ch7_tx_srst_dreq  : 1   ; /* [18]  */
        unsigned int    reserved_0            : 13  ; /* [31..19]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sas_reset_dreq;

/* Define the union u_sc_mctp0_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp0_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp0_reset_req;

/* Define the union u_sc_mctp0_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp0_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp0_reset_dreq;

/* Define the union u_sc_mctp1_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp1_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp1_reset_req;

/* Define the union u_sc_mctp1_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp1_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp1_reset_dreq;

/* Define the union u_sc_mctp2_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp2_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp2_reset_req;

/* Define the union u_sc_mctp2_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp2_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp2_reset_dreq;

/* Define the union u_sc_sllc_tsvrx_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sllc_tsvrx0_srst_req  : 1   ; /* [0]  */
        unsigned int    sllc_tsvrx1_srst_req  : 1   ; /* [1]  */
        unsigned int    sllc_tsvrx2_srst_req  : 1   ; /* [2]  */
        unsigned int    sllc_tsvrx3_srst_req  : 1   ; /* [3]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_tsvrx_reset_req;

/* Define the union u_sc_sllc_tsvrx_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sllc_tsvrx0_srst_dreq : 1   ; /* [0]  */
        unsigned int    sllc_tsvrx1_srst_dreq : 1   ; /* [1]  */
        unsigned int    sllc_tsvrx2_srst_dreq : 1   ; /* [2]  */
        unsigned int    sllc_tsvrx3_srst_dreq : 1   ; /* [3]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_tsvrx_reset_dreq;

/* Define the union u_sc_pcie_hilink_pcs_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_hilink_pcs_lane0_srst_req : 1   ; /* [0]  */
        unsigned int    pcie0_hilink_pcs_lane1_srst_req : 1   ; /* [1]  */
        unsigned int    pcie0_hilink_pcs_lane2_srst_req : 1   ; /* [2]  */
        unsigned int    pcie0_hilink_pcs_lane3_srst_req : 1   ; /* [3]  */
        unsigned int    pcie0_hilink_pcs_lane4_srst_req : 1   ; /* [4]  */
        unsigned int    pcie0_hilink_pcs_lane5_srst_req : 1   ; /* [5]  */
        unsigned int    pcie0_hilink_pcs_lane6_srst_req : 1   ; /* [6]  */
        unsigned int    pcie0_hilink_pcs_lane7_srst_req : 1   ; /* [7]  */
        unsigned int    pcie1_hilink_pcs_lane0_srst_req : 1   ; /* [8]  */
        unsigned int    pcie1_hilink_pcs_lane1_srst_req : 1   ; /* [9]  */
        unsigned int    pcie1_hilink_pcs_lane2_srst_req : 1   ; /* [10]  */
        unsigned int    pcie1_hilink_pcs_lane3_srst_req : 1   ; /* [11]  */
        unsigned int    pcie1_hilink_pcs_lane4_srst_req : 1   ; /* [12]  */
        unsigned int    pcie1_hilink_pcs_lane5_srst_req : 1   ; /* [13]  */
        unsigned int    pcie1_hilink_pcs_lane6_srst_req : 1   ; /* [14]  */
        unsigned int    pcie1_hilink_pcs_lane7_srst_req : 1   ; /* [15]  */
        unsigned int    pcie2_hilink_pcs_lane0_srst_req : 1   ; /* [16]  */
        unsigned int    pcie2_hilink_pcs_lane1_srst_req : 1   ; /* [17]  */
        unsigned int    pcie2_hilink_pcs_lane2_srst_req : 1   ; /* [18]  */
        unsigned int    pcie2_hilink_pcs_lane3_srst_req : 1   ; /* [19]  */
        unsigned int    pcie2_hilink_pcs_lane4_srst_req : 1   ; /* [20]  */
        unsigned int    pcie2_hilink_pcs_lane5_srst_req : 1   ; /* [21]  */
        unsigned int    pcie2_hilink_pcs_lane6_srst_req : 1   ; /* [22]  */
        unsigned int    pcie2_hilink_pcs_lane7_srst_req : 1   ; /* [23]  */
        unsigned int    pcie3_hilink_pcs_lane0_srst_req : 1   ; /* [24]  */
        unsigned int    pcie3_hilink_pcs_lane1_srst_req : 1   ; /* [25]  */
        unsigned int    pcie3_hilink_pcs_lane2_srst_req : 1   ; /* [26]  */
        unsigned int    pcie3_hilink_pcs_lane3_srst_req : 1   ; /* [27]  */
        unsigned int    pcie3_hilink_pcs_lane4_srst_req : 1   ; /* [28]  */
        unsigned int    pcie3_hilink_pcs_lane5_srst_req : 1   ; /* [29]  */
        unsigned int    pcie3_hilink_pcs_lane6_srst_req : 1   ; /* [30]  */
        unsigned int    pcie3_hilink_pcs_lane7_srst_req : 1   ; /* [31]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie_hilink_pcs_reset_req;

/* Define the union u_sc_pcie_hilink_pcs_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_hilink_pcs_lane0_srst_dreq : 1   ; /* [0]  */
        unsigned int    pcie0_hilink_pcs_lane1_srst_dreq : 1   ; /* [1]  */
        unsigned int    pcie0_hilink_pcs_lane2_srst_dreq : 1   ; /* [2]  */
        unsigned int    pcie0_hilink_pcs_lane3_srst_dreq : 1   ; /* [3]  */
        unsigned int    pcie0_hilink_pcs_lane4_srst_dreq : 1   ; /* [4]  */
        unsigned int    pcie0_hilink_pcs_lane5_srst_dreq : 1   ; /* [5]  */
        unsigned int    pcie0_hilink_pcs_lane6_srst_dreq : 1   ; /* [6]  */
        unsigned int    pcie0_hilink_pcs_lane7_srst_dreq : 1   ; /* [7]  */
        unsigned int    pcie1_hilink_pcs_lane0_srst_dreq : 1   ; /* [8]  */
        unsigned int    pcie1_hilink_pcs_lane1_srst_dreq : 1   ; /* [9]  */
        unsigned int    pcie1_hilink_pcs_lane2_srst_dreq : 1   ; /* [10]  */
        unsigned int    pcie1_hilink_pcs_lane3_srst_dreq : 1   ; /* [11]  */
        unsigned int    pcie1_hilink_pcs_lane4_srst_dreq : 1   ; /* [12]  */
        unsigned int    pcie1_hilink_pcs_lane5_srst_dreq : 1   ; /* [13]  */
        unsigned int    pcie1_hilink_pcs_lane6_srst_dreq : 1   ; /* [14]  */
        unsigned int    pcie1_hilink_pcs_lane7_srst_dreq : 1   ; /* [15]  */
        unsigned int    pcie2_hilink_pcs_lane0_srst_dreq : 1   ; /* [16]  */
        unsigned int    pcie2_hilink_pcs_lane1_srst_dreq : 1   ; /* [17]  */
        unsigned int    pcie2_hilink_pcs_lane2_srst_dreq : 1   ; /* [18]  */
        unsigned int    pcie2_hilink_pcs_lane3_srst_dreq : 1   ; /* [19]  */
        unsigned int    pcie2_hilink_pcs_lane4_srst_dreq : 1   ; /* [20]  */
        unsigned int    pcie2_hilink_pcs_lane5_srst_dreq : 1   ; /* [21]  */
        unsigned int    pcie2_hilink_pcs_lane6_srst_dreq : 1   ; /* [22]  */
        unsigned int    pcie2_hilink_pcs_lane7_srst_dreq : 1   ; /* [23]  */
        unsigned int    pcie3_hilink_pcs_lane0_srst_dreq : 1   ; /* [24]  */
        unsigned int    pcie3_hilink_pcs_lane1_srst_dreq : 1   ; /* [25]  */
        unsigned int    pcie3_hilink_pcs_lane2_srst_dreq : 1   ; /* [26]  */
        unsigned int    pcie3_hilink_pcs_lane3_srst_dreq : 1   ; /* [27]  */
        unsigned int    pcie3_hilink_pcs_lane4_srst_dreq : 1   ; /* [28]  */
        unsigned int    pcie3_hilink_pcs_lane5_srst_dreq : 1   ; /* [29]  */
        unsigned int    pcie3_hilink_pcs_lane6_srst_dreq : 1   ; /* [30]  */
        unsigned int    pcie3_hilink_pcs_lane7_srst_dreq : 1   ; /* [31]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie_hilink_pcs_reset_dreq;

/* Define the union u_sc_pcie3_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_reset_req;

/* Define the union u_sc_pcie3_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_reset_dreq;

/* Define the union u_sc_mctp3_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp3_srst_req        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp3_reset_req;

/* Define the union u_sc_mctp3_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp3_srst_dreq       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp3_reset_dreq;

/* Define the union u_sc_its_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    its_srst_req          : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_its_reset_req;

/* Define the union u_sc_its_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    its_srst_dreq         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_its_reset_dreq;

/* Define the union u_sc_sllc_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sllc_srst_req         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_reset_req;

/* Define the union u_sc_sllc_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sllc_srst_dreq        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_reset_dreq;

/* Define the union u_sc_pcs_local_reset_req */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_pcs_local_srst_req : 1   ; /* [0]  */
        unsigned int    pcie1_pcs_local_srst_req : 1   ; /* [1]  */
        unsigned int    pcie2_pcs_local_srst_req : 1   ; /* [2]  */
        unsigned int    pcie3_pcs_local_srst_req : 1   ; /* [3]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcs_local_reset_req;

/* Define the union u_sc_pcs_local_reset_dreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_pcs_local_srst_dreq : 1   ; /* [0]  */
        unsigned int    pcie1_pcs_local_srst_dreq : 1   ; /* [1]  */
        unsigned int    pcie2_pcs_local_srst_dreq : 1   ; /* [2]  */
        unsigned int    pcie3_pcs_local_srst_dreq : 1   ; /* [3]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcs_local_reset_dreq;

/* Define the union u_sc_disp_daw_en */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    dispatch_daw_en       : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_disp_daw_en;

/* Define the union u_sc_dispatch_daw_array0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array0_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array0_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array0_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array0_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array0;

/* Define the union u_sc_dispatch_daw_array1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array1_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array1_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array1_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array1_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array1;

/* Define the union u_sc_dispatch_daw_array2 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array2_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array2_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array2_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array2_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array2;

/* Define the union u_sc_dispatch_daw_array3 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array3_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array3_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array3_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array3_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array3;

/* Define the union u_sc_dispatch_daw_array4 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array4_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array4_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array4_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array4_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array4;

/* Define the union u_sc_dispatch_daw_array5 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array5_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array5_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array5_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array5_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array5;

/* Define the union u_sc_dispatch_daw_array6 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array6_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array6_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array6_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array6_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array6;

/* Define the union u_sc_dispatch_daw_array7 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    daw_array7_did        : 3   ; /* [2..0]  */
        unsigned int    daw_array7_size       : 5   ; /* [7..3]  */
        unsigned int    daw_array7_sync       : 1   ; /* [8]  */
        unsigned int    reserved_0            : 4   ; /* [12..9]  */
        unsigned int    daw_array7_addr       : 19  ; /* [31..13]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_daw_array7;

/* Define the union u_sc_dispatch_retry_control */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    retry_num_limit       : 16  ; /* [15..0]  */
        unsigned int    retry_en              : 1   ; /* [16]  */
        unsigned int    reserved_0            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_retry_control;

/* Define the union u_sc_dispatch_intmask */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    intmask               : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_intmask;

/* Define the union u_sc_dispatch_rawint */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    rawint                : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_rawint;

/* Define the union u_sc_dispatch_intstat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    intsts                : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_intstat;

/* Define the union u_sc_dispatch_intclr */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    intclr                : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_intclr;

/* Define the union u_sc_dispatch_errstat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    err_opcode            : 5   ; /* [4..0]  */
        unsigned int    err_addr              : 17  ; /* [21..5]  */
        unsigned int    reserved_0            : 10  ; /* [31..22]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_dispatch_errstat;

/* Define the union u_sc_remap_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sys_remap_vld         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_remap_ctrl;

/* Define the union u_sc_fte_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mux_sel_fte           : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_fte_mux_ctrl;

/* Define the union u_sc_hilink0_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_mux_sel       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_mux_ctrl;

/* Define the union u_sc_hilink1_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_mux_sel       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_mux_ctrl;

/* Define the union u_sc_hilink2_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink2_mux_sel       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink2_mux_ctrl;

/* Define the union u_sc_hilink5_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_mux_sel       : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_mux_ctrl;

/* Define the union u_sc_hilink1_ahb_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_ahb_mux_sel   : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_ahb_mux_ctrl;

/* Define the union u_sc_hilink2_ahb_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink2_ahb_mux_sel   : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink2_ahb_mux_ctrl;

/* Define the union u_sc_hilink5_ahb_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_ahb_mux_sel   : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_ahb_mux_ctrl;

/* Define the union u_sc_hilink5_lrstb_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_lrstb_mux_sel : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_lrstb_mux_ctrl;

/* Define the union u_sc_hilink6_lrstb_mux_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_lrstb_mux_sel : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_lrstb_mux_ctrl;

/* Define the union u_sc_hilink0_macro_ss_refclk */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_ss_refclk0_x2s : 2   ; /* [1..0]  */
        unsigned int    hilink0_ss_refclk0_x2n : 2   ; /* [3..2]  */
        unsigned int    hilink0_ss_refclk0_x2e : 2   ; /* [5..4]  */
        unsigned int    hilink0_ss_refclk0_x2w : 2   ; /* [7..6]  */
        unsigned int    hilink0_ss_refclk1_x2s : 2   ; /* [9..8]  */
        unsigned int    hilink0_ss_refclk1_x2n : 2   ; /* [11..10]  */
        unsigned int    hilink0_ss_refclk1_x2e : 2   ; /* [13..12]  */
        unsigned int    hilink0_ss_refclk1_x2w : 2   ; /* [15..14]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_ss_refclk;

/* Define the union u_sc_hilink0_macro_cs_refclk_dirsel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_cs_refclk0_dirsel0 : 2   ; /* [1..0]  */
        unsigned int    hilink0_cs_refclk0_dirsel1 : 2   ; /* [3..2]  */
        unsigned int    hilink0_cs_refclk0_dirsel2 : 2   ; /* [5..4]  */
        unsigned int    hilink0_cs_refclk0_dirsel3 : 2   ; /* [7..6]  */
        unsigned int    hilink0_cs_refclk0_dirsel4 : 2   ; /* [9..8]  */
        unsigned int    hilink0_cs_refclk1_dirsel0 : 2   ; /* [11..10]  */
        unsigned int    hilink0_cs_refclk1_dirsel1 : 2   ; /* [13..12]  */
        unsigned int    hilink0_cs_refclk1_dirsel2 : 2   ; /* [15..14]  */
        unsigned int    hilink0_cs_refclk1_dirsel3 : 2   ; /* [17..16]  */
        unsigned int    hilink0_cs_refclk1_dirsel4 : 2   ; /* [19..18]  */
        unsigned int    reserved_0            : 12  ; /* [31..20]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_cs_refclk_dirsel;

/* Define the union u_sc_hilink0_macro_lifeclk2dig_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_lifeclk2dig_sel : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_lifeclk2dig_sel;

/* Define the union u_sc_hilink0_macro_core_clk_selext */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_core_clk_selext : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_core_clk_selext;

/* Define the union u_sc_hilink0_macro_core_clk_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_core_clk_sel  : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_core_clk_sel;

/* Define the union u_sc_hilink0_macro_ctrl_bus_mode */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_ctrl_bus_mode : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_ctrl_bus_mode;

/* Define the union u_sc_hilink0_macro_macropwrdb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_macropwrdb    : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_macropwrdb;

/* Define the union u_sc_hilink0_macro_grstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_grstb         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_grstb;

/* Define the union u_sc_hilink0_macro_bit_slip */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_bit_slip      : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_bit_slip;

/* Define the union u_sc_hilink0_macro_lrstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_lrstb         : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_lrstb;

/* Define the union u_sc_hilink1_macro_ss_refclk */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_ss_refclk0_x2s : 2   ; /* [1..0]  */
        unsigned int    hilink1_ss_refclk0_x2n : 2   ; /* [3..2]  */
        unsigned int    hilink1_ss_refclk0_x2e : 2   ; /* [5..4]  */
        unsigned int    hilink1_ss_refclk0_x2w : 2   ; /* [7..6]  */
        unsigned int    hilink1_ss_refclk1_x2s : 2   ; /* [9..8]  */
        unsigned int    hilink1_ss_refclk1_x2n : 2   ; /* [11..10]  */
        unsigned int    hilink1_ss_refclk1_x2e : 2   ; /* [13..12]  */
        unsigned int    hilink1_ss_refclk1_x2w : 2   ; /* [15..14]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_ss_refclk;

/* Define the union u_sc_hilink1_macro_cs_refclk_dirsel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_cs_refclk0_dirsel0 : 2   ; /* [1..0]  */
        unsigned int    hilink1_cs_refclk0_dirsel1 : 2   ; /* [3..2]  */
        unsigned int    hilink1_cs_refclk0_dirsel2 : 2   ; /* [5..4]  */
        unsigned int    hilink1_cs_refclk0_dirsel3 : 2   ; /* [7..6]  */
        unsigned int    hilink1_cs_refclk0_dirsel4 : 2   ; /* [9..8]  */
        unsigned int    hilink1_cs_refclk1_dirsel0 : 2   ; /* [11..10]  */
        unsigned int    hilink1_cs_refclk1_dirsel1 : 2   ; /* [13..12]  */
        unsigned int    hilink1_cs_refclk1_dirsel2 : 2   ; /* [15..14]  */
        unsigned int    hilink1_cs_refclk1_dirsel3 : 2   ; /* [17..16]  */
        unsigned int    hilink1_cs_refclk1_dirsel4 : 2   ; /* [19..18]  */
        unsigned int    reserved_0            : 12  ; /* [31..20]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_cs_refclk_dirsel;

/* Define the union u_sc_hilink1_macro_lifeclk2dig_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_lifeclk2dig_sel : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_lifeclk2dig_sel;

/* Define the union u_sc_hilink1_macro_core_clk_selext */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_core_clk_selext : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_core_clk_selext;

/* Define the union u_sc_hilink1_macro_core_clk_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_core_clk_sel  : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_core_clk_sel;

/* Define the union u_sc_hilink1_macro_ctrl_bus_mode */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_ctrl_bus_mode : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_ctrl_bus_mode;

/* Define the union u_sc_hilink1_macro_macropwrdb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_macropwrdb    : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_macropwrdb;

/* Define the union u_sc_hilink1_macro_grstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_grstb         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_grstb;

/* Define the union u_sc_hilink1_macro_bit_slip */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_bit_slip      : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_bit_slip;

/* Define the union u_sc_hilink1_macro_lrstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_lrstb         : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_lrstb;

/* Define the union u_sc_hilink5_macro_ss_refclk */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_ss_refclk0_x2s : 2   ; /* [1..0]  */
        unsigned int    hilink5_ss_refclk0_x2n : 2   ; /* [3..2]  */
        unsigned int    hilink5_ss_refclk0_x2e : 2   ; /* [5..4]  */
        unsigned int    hilink5_ss_refclk0_x2w : 2   ; /* [7..6]  */
        unsigned int    hilink5_ss_refclk1_x2s : 2   ; /* [9..8]  */
        unsigned int    hilink5_ss_refclk1_x2n : 2   ; /* [11..10]  */
        unsigned int    hilink5_ss_refclk1_x2e : 2   ; /* [13..12]  */
        unsigned int    hilink5_ss_refclk1_x2w : 2   ; /* [15..14]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_ss_refclk;

/* Define the union u_sc_hilink5_macro_cs_refclk_dirsel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_cs_refclk0_dirsel0 : 2   ; /* [1..0]  */
        unsigned int    hilink5_cs_refclk0_dirsel1 : 2   ; /* [3..2]  */
        unsigned int    hilink5_cs_refclk0_dirsel2 : 2   ; /* [5..4]  */
        unsigned int    hilink5_cs_refclk0_dirsel3 : 2   ; /* [7..6]  */
        unsigned int    hilink5_cs_refclk0_dirsel4 : 2   ; /* [9..8]  */
        unsigned int    hilink5_cs_refclk1_dirsel0 : 2   ; /* [11..10]  */
        unsigned int    hilink5_cs_refclk1_dirsel1 : 2   ; /* [13..12]  */
        unsigned int    hilink5_cs_refclk1_dirsel2 : 2   ; /* [15..14]  */
        unsigned int    hilink5_cs_refclk1_dirsel3 : 2   ; /* [17..16]  */
        unsigned int    hilink5_cs_refclk1_dirsel4 : 2   ; /* [19..18]  */
        unsigned int    reserved_0            : 12  ; /* [31..20]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_cs_refclk_dirsel;

/* Define the union u_sc_hilink5_macro_lifeclk2dig_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_lifeclk2dig_sel : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_lifeclk2dig_sel;

/* Define the union u_sc_hilink5_macro_core_clk_selext */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_core_clk_selext : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_core_clk_selext;

/* Define the union u_sc_hilink5_macro_core_clk_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_core_clk_sel  : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_core_clk_sel;

/* Define the union u_sc_hilink5_macro_ctrl_bus_mode */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_ctrl_bus_mode : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_ctrl_bus_mode;

/* Define the union u_sc_hilink5_macro_macropwrdb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_macropwrdb    : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_macropwrdb;

/* Define the union u_sc_hilink5_macro_grstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_grstb         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_grstb;

/* Define the union u_sc_hilink5_macro_bit_slip */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_bit_slip      : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_bit_slip;

/* Define the union u_sc_hilink5_macro_lrstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_lrstb         : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_lrstb;

/* Define the union u_sc_hilink6_macro_ss_refclk */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_ss_refclk0_x2s : 2   ; /* [1..0]  */
        unsigned int    hilink6_ss_refclk0_x2n : 2   ; /* [3..2]  */
        unsigned int    hilink6_ss_refclk0_x2e : 2   ; /* [5..4]  */
        unsigned int    hilink6_ss_refclk0_x2w : 2   ; /* [7..6]  */
        unsigned int    hilink6_ss_refclk1_x2s : 2   ; /* [9..8]  */
        unsigned int    hilink6_ss_refclk1_x2n : 2   ; /* [11..10]  */
        unsigned int    hilink6_ss_refclk1_x2e : 2   ; /* [13..12]  */
        unsigned int    hilink6_ss_refclk1_x2w : 2   ; /* [15..14]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_ss_refclk;

/* Define the union u_sc_hilink6_macro_cs_refclk_dirsel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_cs_refclk0_dirsel0 : 2   ; /* [1..0]  */
        unsigned int    hilink6_cs_refclk0_dirsel1 : 2   ; /* [3..2]  */
        unsigned int    hilink6_cs_refclk0_dirsel2 : 2   ; /* [5..4]  */
        unsigned int    hilink6_cs_refclk0_dirsel3 : 2   ; /* [7..6]  */
        unsigned int    hilink6_cs_refclk0_dirsel4 : 2   ; /* [9..8]  */
        unsigned int    hilink6_cs_refclk1_dirsel0 : 2   ; /* [11..10]  */
        unsigned int    hilink6_cs_refclk1_dirsel1 : 2   ; /* [13..12]  */
        unsigned int    hilink6_cs_refclk1_dirsel2 : 2   ; /* [15..14]  */
        unsigned int    hilink6_cs_refclk1_dirsel3 : 2   ; /* [17..16]  */
        unsigned int    hilink6_cs_refclk1_dirsel4 : 2   ; /* [19..18]  */
        unsigned int    reserved_0            : 12  ; /* [31..20]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_cs_refclk_dirsel;

/* Define the union u_sc_hilink6_macro_lifeclk2dig_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_lifeclk2dig_sel : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_lifeclk2dig_sel;

/* Define the union u_sc_hilink6_macro_core_clk_selext */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_core_clk_selext : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_core_clk_selext;

/* Define the union u_sc_hilink6_macro_core_clk_sel */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_core_clk_sel  : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_core_clk_sel;

/* Define the union u_sc_hilink6_macro_ctrl_bus_mode */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_ctrl_bus_mode : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_ctrl_bus_mode;

/* Define the union u_sc_hilink6_macro_macropwrdb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_macropwrdb    : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_macropwrdb;

/* Define the union u_sc_hilink6_macro_grstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_grstb         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_grstb;

/* Define the union u_sc_hilink6_macro_bit_slip */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_bit_slip      : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_bit_slip;

/* Define the union u_sc_hilink6_macro_lrstb */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_lrstb         : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_lrstb;

/* Define the union u_sc_pcie0_clkreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_phy_clk_req_n   : 1   ; /* [0]  */
        unsigned int    pcie0_apb_cfg_sel     : 2   ; /* [2..1]  */
        unsigned int    reserved_0            : 29  ; /* [31..3]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_clkreq;

/* Define the union u_sc_pcie0_axi_mstr_ooo_wr_cfg */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_cfg_max_wr_trans : 6   ; /* [5..0]  */
        unsigned int    reserved_0            : 2   ; /* [7..6]  */
        unsigned int    pcie0_wr_rate_limit   : 4   ; /* [11..8]  */
        unsigned int    pcie0_ctrl_lat_stat_wr_en : 1   ; /* [12]  */
        unsigned int    reserved_1            : 3   ; /* [15..13]  */
        unsigned int    pcie0_en_device_wr_ooo : 1   ; /* [16]  */
        unsigned int    reserved_2            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_axi_mstr_ooo_wr_cfg;

/* Define the union u_sc_pcie0_axi_mstr_ooo_rd_cfg */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_cfg_max_rd_trans : 6   ; /* [5..0]  */
        unsigned int    reserved_0            : 2   ; /* [7..6]  */
        unsigned int    pcie0_rd_rate_limit   : 4   ; /* [11..8]  */
        unsigned int    pcie0_ctrl_lat_stat_rd_en : 1   ; /* [12]  */
        unsigned int    reserved_1            : 3   ; /* [15..13]  */
        unsigned int    pcie0_en_device_rd_ooo : 1   ; /* [16]  */
        unsigned int    reserved_2            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_axi_mstr_ooo_rd_cfg;

/* Define the union u_sc_pcie1_clkreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1hilink_phy_clk_req_n : 1   ; /* [0]  */
        unsigned int    pcie1vsemi_phy_clk_req_n : 1   ; /* [1]  */
        unsigned int    pcie1_apb_cfg_sel     : 2   ; /* [3..2]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_clkreq;

/* Define the union u_sc_pcie1_axi_mstr_ooo_wr_cfg */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_cfg_max_wr_trans : 6   ; /* [5..0]  */
        unsigned int    reserved_0            : 2   ; /* [7..6]  */
        unsigned int    pcie1_wr_rate_limit   : 4   ; /* [11..8]  */
        unsigned int    pcie1_ctrl_lat_stat_wr_en : 1   ; /* [12]  */
        unsigned int    reserved_1            : 3   ; /* [15..13]  */
        unsigned int    pcie1_en_device_wr_ooo : 1   ; /* [16]  */
        unsigned int    reserved_2            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_axi_mstr_ooo_wr_cfg;

/* Define the union u_sc_pcie1_axi_mstr_ooo_rd_cfg */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_cfg_max_rd_trans : 6   ; /* [5..0]  */
        unsigned int    reserved_0            : 2   ; /* [7..6]  */
        unsigned int    pcie1_rd_rate_limit   : 4   ; /* [11..8]  */
        unsigned int    pcie1_ctrl_lat_stat_rd_en : 1   ; /* [12]  */
        unsigned int    reserved_1            : 3   ; /* [15..13]  */
        unsigned int    pcie1_en_device_rd_ooo : 1   ; /* [16]  */
        unsigned int    reserved_2            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_axi_mstr_ooo_rd_cfg;

/* Define the union u_sc_pcie2_clkreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2hilink_phy_clk_req_n : 1   ; /* [0]  */
        unsigned int    pcie2vsemi_phy_clk_req_n : 1   ; /* [1]  */
        unsigned int    pcie2_apb_cfg_sel     : 2   ; /* [3..2]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_clkreq;

/* Define the union u_sc_pcie2_axi_mstr_ooo_wr_cfg */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_cfg_max_wr_trans : 6   ; /* [5..0]  */
        unsigned int    reserved_0            : 2   ; /* [7..6]  */
        unsigned int    pcie2_wr_rate_limit   : 4   ; /* [11..8]  */
        unsigned int    pcie2_ctrl_lat_stat_wr_en : 1   ; /* [12]  */
        unsigned int    reserved_1            : 3   ; /* [15..13]  */
        unsigned int    pcie2_en_device_wr_ooo : 1   ; /* [16]  */
        unsigned int    reserved_2            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_axi_mstr_ooo_wr_cfg;

/* Define the union u_sc_pcie2_axi_mstr_ooo_rd_cfg */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_cfg_max_rd_trans : 6   ; /* [5..0]  */
        unsigned int    reserved_0            : 2   ; /* [7..6]  */
        unsigned int    pcie2_rd_rate_limit   : 4   ; /* [11..8]  */
        unsigned int    pcie2_ctrl_lat_stat_rd_en : 1   ; /* [12]  */
        unsigned int    reserved_1            : 3   ; /* [15..13]  */
        unsigned int    pcie2_en_device_rd_ooo : 1   ; /* [16]  */
        unsigned int    reserved_2            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_axi_mstr_ooo_rd_cfg;

/* Define the union u_sc_pcie3_clkreq */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_phy_clk_req_n   : 1   ; /* [0]  */
        unsigned int    pcie3_apb_cfg_sel     : 2   ; /* [2..1]  */
        unsigned int    reserved_0            : 29  ; /* [31..3]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_clkreq;

/* Define the union u_sc_smmu_mem_ctrl0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    ctrl_rfs_smmu         : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_smmu_mem_ctrl0;

/* Define the union u_sc_smmu_mem_ctrl1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    tsel_hc_smmu          : 3   ; /* [2..0]  */
        unsigned int    reserved_0            : 29  ; /* [31..3]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_smmu_mem_ctrl1;

/* Define the union u_sc_smmu_mem_ctrl2 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    test_hc_smmu          : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_smmu_mem_ctrl2;

/* Define the union u_sc_sllc0_mem_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    ctrl_rft_sllc0        : 10  ; /* [9..0]  */
        unsigned int    reserved_0            : 22  ; /* [31..10]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc0_mem_ctrl;

/* Define the union u_sc_sas_mem_ctrl */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    ctrl_rfs_sas          : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sas_mem_ctrl;

/* Define the union u_sc_pcie_mem_ctrl0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    ctrl_rft_pcie         : 10  ; /* [9..0]  */
        unsigned int    reserved_0            : 22  ; /* [31..10]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie_mem_ctrl0;

/* Define the union u_sc_pcie_mem_ctrl1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    ctrl_rashsd_pcie      : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie_mem_ctrl1;

/* Define the union u_sc_pcie_mem_ctrl2 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    ctrl_rfs_pcie         : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie_mem_ctrl2;

/* Define the union u_sc_skew_common_0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_en               : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_common_0;

/* Define the union u_sc_skew_common_1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_addr_offset      : 5   ; /* [4..0]  */
        unsigned int    reserved_0            : 27  ; /* [31..5]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_common_1;

/* Define the union u_sc_skew_common_2 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_config_in        : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_common_2;

/* Define the union u_sc_skew_a_0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_bypass_a         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_0;

/* Define the union u_sc_skew_a_1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_config_in_a      : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_1;

/* Define the union u_sc_skew_a_2 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_out_delay_sel_a  : 2   ; /* [1..0]  */
        unsigned int    skew_in_delay_sel_a   : 2   ; /* [3..2]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_2;

/* Define the union u_sc_skew_a_3 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_sel_a_1          : 1   ; /* [0]  */
        unsigned int    skew_sel_a_0          : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_3;

/* Define the union u_sc_skew_a_4 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_update_en_a      : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_4;

/* Define the union u_sc_skew_a_5 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_varible_set_a    : 16  ; /* [15..0]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_5;

/* Define the union u_sc_skew_a_7 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_dcell_set_a_h    : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_7;

/* Define the union u_sc_skew_a_8 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_sel_osc_a        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_a_8;

/* Define the union u_sc_skew_b_0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_bypass_b         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_0;

/* Define the union u_sc_skew_b_1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_config_in_b      : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_1;

/* Define the union u_sc_skew_b_2 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_out_delay_sel_b  : 2   ; /* [1..0]  */
        unsigned int    skew_in_delay_sel_b   : 2   ; /* [3..2]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_2;

/* Define the union u_sc_skew_b_3 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_sel_b_1          : 1   ; /* [0]  */
        unsigned int    skew_sel_b_0          : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_3;

/* Define the union u_sc_skew_b_4 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_update_en_b      : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_4;

/* Define the union u_sc_skew_b_5 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_varible_set_b    : 16  ; /* [15..0]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_5;

/* Define the union u_sc_skew_b_7 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_dcell_set_b_h    : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_7;

/* Define the union u_sc_skew_b_8 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_sel_osc_b        : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_b_8;

/* Define the union u_sc_pcie0_clk_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie0_st          : 1   ; /* [0]  */
        unsigned int    clk_pcie0_pipe_st     : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_clk_st;

/* Define the union u_sc_pcie1_clk_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie1_st          : 1   ; /* [0]  */
        unsigned int    clk_pcie1_pipe_st     : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_clk_st;

/* Define the union u_sc_pcie2_clk_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie2_st          : 1   ; /* [0]  */
        unsigned int    clk_pcie2_pipe_st     : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_clk_st;

/* Define the union u_sc_sas_clk_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_sas_st            : 1   ; /* [0]  */
        unsigned int    clk_sas_mem_st        : 1   ; /* [1]  */
        unsigned int    clk_sas_ahb_st        : 1   ; /* [2]  */
        unsigned int    clk_sas_oob_st        : 1   ; /* [3]  */
        unsigned int    clk_sas_ch0_rx_st     : 1   ; /* [4]  */
        unsigned int    clk_sas_ch1_rx_st     : 1   ; /* [5]  */
        unsigned int    clk_sas_ch2_rx_st     : 1   ; /* [6]  */
        unsigned int    clk_sas_ch3_rx_st     : 1   ; /* [7]  */
        unsigned int    clk_sas_ch4_rx_st     : 1   ; /* [8]  */
        unsigned int    clk_sas_ch5_rx_st     : 1   ; /* [9]  */
        unsigned int    clk_sas_ch6_rx_st     : 1   ; /* [10]  */
        unsigned int    clk_sas_ch7_rx_st     : 1   ; /* [11]  */
        unsigned int    clk_sas_ch0_tx_st     : 1   ; /* [12]  */
        unsigned int    clk_sas_ch1_tx_st     : 1   ; /* [13]  */
        unsigned int    clk_sas_ch2_tx_st     : 1   ; /* [14]  */
        unsigned int    clk_sas_ch3_tx_st     : 1   ; /* [15]  */
        unsigned int    clk_sas_ch4_tx_st     : 1   ; /* [16]  */
        unsigned int    clk_sas_ch5_tx_st     : 1   ; /* [17]  */
        unsigned int    clk_sas_ch6_tx_st     : 1   ; /* [18]  */
        unsigned int    clk_sas_ch7_tx_st     : 1   ; /* [19]  */
        unsigned int    reserved_0            : 12  ; /* [31..20]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sas_clk_st;

/* Define the union u_sc_pcie3_clk_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_pcie3_st          : 1   ; /* [0]  */
        unsigned int    clk_pcie3_pipe_st     : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_clk_st;

/* Define the union u_sc_its_clk_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_its_st            : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_its_clk_st;

/* Define the union u_sc_sllc_clk_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    clk_sllc_st           : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_clk_st;

/* Define the union u_sc_pcie0_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_reset_st;

/* Define the union u_sc_pcie1_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_reset_st;

/* Define the union u_sc_pcie2_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_reset_st;

/* Define the union u_sc_sas_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sas_srst_st           : 1   ; /* [0]  */
        unsigned int    sas_oob_srst_st       : 1   ; /* [1]  */
        unsigned int    sas_ahb_srst_st       : 1   ; /* [2]  */
        unsigned int    sas_ch0_rx_srst_st    : 1   ; /* [3]  */
        unsigned int    sas_ch1_rx_srst_st    : 1   ; /* [4]  */
        unsigned int    sas_ch2_rx_srst_st    : 1   ; /* [5]  */
        unsigned int    sas_ch3_rx_srst_st    : 1   ; /* [6]  */
        unsigned int    sas_ch4_rx_srst_st    : 1   ; /* [7]  */
        unsigned int    sas_ch5_rx_srst_st    : 1   ; /* [8]  */
        unsigned int    sas_ch6_rx_srst_st    : 1   ; /* [9]  */
        unsigned int    sas_ch7_rx_srst_st    : 1   ; /* [10]  */
        unsigned int    sas_ch0_tx_srst_st    : 1   ; /* [11]  */
        unsigned int    sas_ch1_tx_srst_st    : 1   ; /* [12]  */
        unsigned int    sas_ch2_tx_srst_st    : 1   ; /* [13]  */
        unsigned int    sas_ch3_tx_srst_st    : 1   ; /* [14]  */
        unsigned int    sas_ch4_tx_srst_st    : 1   ; /* [15]  */
        unsigned int    sas_ch5_tx_srst_st    : 1   ; /* [16]  */
        unsigned int    sas_ch6_tx_srst_st    : 1   ; /* [17]  */
        unsigned int    sas_ch7_tx_srst_st    : 1   ; /* [18]  */
        unsigned int    reserved_0            : 13  ; /* [31..19]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sas_reset_st;

/* Define the union u_sc_mctp0_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp0_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp0_reset_st;

/* Define the union u_sc_mctp1_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp1_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp1_reset_st;

/* Define the union u_sc_mctp2_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp2_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp2_reset_st;

/* Define the union u_sc_sllc_tsvrx_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sllc_tsvrx0_srst_st   : 1   ; /* [0]  */
        unsigned int    sllc_tsvrx1_srst_st   : 1   ; /* [1]  */
        unsigned int    sllc_tsvrx2_srst_st   : 1   ; /* [2]  */
        unsigned int    sllc_tsvrx3_srst_st   : 1   ; /* [3]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_tsvrx_reset_st;

/* Define the union u_sc_pcie_hilink_pcs_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_hilink_pcs_lane0_srst_st : 1   ; /* [0]  */
        unsigned int    pcie0_hilink_pcs_lane1_srst_st : 1   ; /* [1]  */
        unsigned int    pcie0_hilink_pcs_lane2_srst_st : 1   ; /* [2]  */
        unsigned int    pcie0_hilink_pcs_lane3_srst_st : 1   ; /* [3]  */
        unsigned int    pcie0_hilink_pcs_lane4_srst_st : 1   ; /* [4]  */
        unsigned int    pcie0_hilink_pcs_lane5_srst_st : 1   ; /* [5]  */
        unsigned int    pcie0_hilink_pcs_lane6_srst_st : 1   ; /* [6]  */
        unsigned int    pcie0_hilink_pcs_lane7_srst_st : 1   ; /* [7]  */
        unsigned int    pcie1_hilink_pcs_lane0_srst_st : 1   ; /* [8]  */
        unsigned int    pcie1_hilink_pcs_lane1_srst_st : 1   ; /* [9]  */
        unsigned int    pcie1_hilink_pcs_lane2_srst_st : 1   ; /* [10]  */
        unsigned int    pcie1_hilink_pcs_lane3_srst_st : 1   ; /* [11]  */
        unsigned int    pcie1_hilink_pcs_lane4_srst_st : 1   ; /* [12]  */
        unsigned int    pcie1_hilink_pcs_lane5_srst_st : 1   ; /* [13]  */
        unsigned int    pcie1_hilink_pcs_lane6_srst_st : 1   ; /* [14]  */
        unsigned int    pcie1_hilink_pcs_lane7_srst_st : 1   ; /* [15]  */
        unsigned int    pcie2_hilink_pcs_lane0_srst_st : 1   ; /* [16]  */
        unsigned int    pcie2_hilink_pcs_lane1_srst_st : 1   ; /* [17]  */
        unsigned int    pcie2_hilink_pcs_lane2_srst_st : 1   ; /* [18]  */
        unsigned int    pcie2_hilink_pcs_lane3_srst_st : 1   ; /* [19]  */
        unsigned int    pcie2_hilink_pcs_lane4_srst_st : 1   ; /* [20]  */
        unsigned int    pcie2_hilink_pcs_lane5_srst_st : 1   ; /* [21]  */
        unsigned int    pcie2_hilink_pcs_lane6_srst_st : 1   ; /* [22]  */
        unsigned int    pcie2_hilink_pcs_lane7_srst_st : 1   ; /* [23]  */
        unsigned int    pcie3_hilink_pcs_lane0_srst_st : 1   ; /* [24]  */
        unsigned int    pcie3_hilink_pcs_lane1_srst_st : 1   ; /* [25]  */
        unsigned int    pcie3_hilink_pcs_lane2_srst_st : 1   ; /* [26]  */
        unsigned int    pcie3_hilink_pcs_lane3_srst_st : 1   ; /* [27]  */
        unsigned int    pcie3_hilink_pcs_lane4_srst_st : 1   ; /* [28]  */
        unsigned int    pcie3_hilink_pcs_lane5_srst_st : 1   ; /* [29]  */
        unsigned int    pcie3_hilink_pcs_lane6_srst_st : 1   ; /* [30]  */
        unsigned int    pcie3_hilink_pcs_lane7_srst_st : 1   ; /* [31]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie_hilink_pcs_reset_st;

/* Define the union u_sc_pcie3_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_reset_st;

/* Define the union u_sc_mctp3_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    mctp3_srst_st         : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_mctp3_reset_st;

/* Define the union u_sc_its_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    its_srst_st           : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_its_reset_st;

/* Define the union u_sc_sllc_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    sllc_srst_st          : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_sllc_reset_st;

/* Define the union u_sc_pcs_local_reset_st */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_pcs_local_srst_st : 1   ; /* [0]  */
        unsigned int    pcie1_pcs_local_srst_st : 1   ; /* [1]  */
        unsigned int    pcie2_pcs_local_srst_st : 1   ; /* [2]  */
        unsigned int    pcie3_pcs_local_srst_st : 1   ; /* [3]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcs_local_reset_st;

/* Define the union u_sc_hilink0_macro_plloutoflock */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_plloutoflock  : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_plloutoflock;

/* Define the union u_sc_hilink0_macro_prbs_err */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_prbs_err      : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_prbs_err;

/* Define the union u_sc_hilink0_macro_los */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink0_los           : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink0_macro_los;

/* Define the union u_sc_hilink1_macro_plloutoflock */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_plloutoflock  : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_plloutoflock;

/* Define the union u_sc_hilink1_macro_prbs_err */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_prbs_err      : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_prbs_err;

/* Define the union u_sc_hilink1_macro_los */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink1_los           : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink1_macro_los;

/* Define the union u_sc_hilink5_macro_plloutoflock */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_plloutoflock  : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_plloutoflock;

/* Define the union u_sc_hilink5_macro_prbs_err */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_prbs_err      : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_prbs_err;

/* Define the union u_sc_hilink5_macro_los */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink5_los           : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink5_macro_los;

/* Define the union u_sc_hilink6_macro_plloutoflock */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_plloutoflock  : 2   ; /* [1..0]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_plloutoflock;

/* Define the union u_sc_hilink6_macro_prbs_err */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_prbs_err      : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_prbs_err;

/* Define the union u_sc_hilink6_macro_los */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    hilink6_los           : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_hilink6_macro_los;

/* Define the union u_sc_pcie0_rxeqinpro_stat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_mac_phy_rxeqinprogress : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_rxeqinpro_stat;

/* Define the union u_sc_pcie0_linkint_rcvry_stat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_cfg_link_eq_req_int : 1   ; /* [0]  */
        unsigned int    pcie0_xmlh_ltssm_state_rcvry_eq : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_linkint_rcvry_stat;

/* Define the union u_sc_pcie0_sys_state0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_gm_cmposer_lookup_err : 1   ; /* [0]  */
        unsigned int    pcie0_radmx_cmposer_lookup_err : 1   ; /* [1]  */
        unsigned int    pcie0_pm_xtlh_block_tlp : 1   ; /* [2]  */
        unsigned int    pcie0_cfg_mem_space_en : 1   ; /* [3]  */
        unsigned int    pcie0_cfg_rcb         : 1   ; /* [4]  */
        unsigned int    pcie0_rdlh_link_up    : 1   ; /* [5]  */
        unsigned int    pcie0_pm_curnt_state  : 3   ; /* [8..6]  */
        unsigned int    pcie0_cfg_aer_rc_err_int : 1   ; /* [9]  */
        unsigned int    pcie0_cfg_aer_int_msg_num : 5   ; /* [14..10]  */
        unsigned int    pcie0_xmlh_link_up    : 1   ; /* [15]  */
        unsigned int    pcie0_wake            : 1   ; /* [16]  */
        unsigned int    pcie0_cfg_eml_control : 1   ; /* [17]  */
        unsigned int    pcie0_hp_pme          : 1   ; /* [18]  */
        unsigned int    pcie0_hp_int          : 1   ; /* [19]  */
        unsigned int    pcie0_hp_msi          : 1   ; /* [20]  */
        unsigned int    pcie0_pm_status       : 1   ; /* [21]  */
        unsigned int    pcie0_ref_clk_req_n   : 1   ; /* [22]  */
        unsigned int    pcie0_p2_exit_reg     : 1   ; /* [23]  */
        unsigned int    pcie0_radm_msg_req_id_low : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_sys_state0;

/* Define the union u_sc_pcie0_sys_state1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_axi_parity_errs_reg : 4   ; /* [3..0]  */
        unsigned int    pcie0_app_parity_errs_reg : 3   ; /* [6..4]  */
        unsigned int    pcie0_pm_linkst_in_l1 : 1   ; /* [7]  */
        unsigned int    pcie0_pm_linkst_in_l2 : 1   ; /* [8]  */
        unsigned int    pcie0_pm_linkst_l2_exit : 1   ; /* [9]  */
        unsigned int    pcie0_mac_phy_power_down : 2   ; /* [11..10]  */
        unsigned int    pcie0_radm_correctabl_err_reg : 1   ; /* [12]  */
        unsigned int    pcie0_radm_nonfatal_err_reg : 1   ; /* [13]  */
        unsigned int    pcie0_radm_fatal_err_reg : 1   ; /* [14]  */
        unsigned int    pcie0_radm_pm_to_pme_reg : 1   ; /* [15]  */
        unsigned int    pcie0_radm_pm_to_ack_reg : 1   ; /* [16]  */
        unsigned int    pcie0_radm_cpl_timeout_reg : 1   ; /* [17]  */
        unsigned int    pcie0_radm_msg_unlock_reg : 1   ; /* [18]  */
        unsigned int    pcie0_cfg_pme_msi_reg : 1   ; /* [19]  */
        unsigned int    pcie0_bridge_flush_not_reg : 1   ; /* [20]  */
        unsigned int    pcie0_link_req_rst_not_reg : 1   ; /* [21]  */
        unsigned int    pcie0_cfg_aer_rc_err_msi : 1   ; /* [22]  */
        unsigned int    pcie0_cfg_sys_err_rc  : 1   ; /* [23]  */
        unsigned int    pcie0_radm_msg_req_id_high : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_sys_state1;

/* Define the union u_sc_pcie0_sys_state4 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_ltssm_state     : 6   ; /* [5..0]  */
        unsigned int    pcie0_mac_phy_rate    : 2   ; /* [7..6]  */
        unsigned int    pcie0_slv_err_int     : 1   ; /* [8]  */
        unsigned int    pcie0_retry_sram_addr : 10  ; /* [18..9]  */
        unsigned int    pcie0_mstr_rresp_int  : 1   ; /* [19]  */
        unsigned int    pcie0_mstr_bresp_int  : 1   ; /* [20]  */
        unsigned int    pcie0_radm_inta_reg   : 1   ; /* [21]  */
        unsigned int    pcie0_radm_intb_reg   : 1   ; /* [22]  */
        unsigned int    pcie0_radm_intc_reg   : 1   ; /* [23]  */
        unsigned int    pcie0_radm_intd_reg   : 1   ; /* [24]  */
        unsigned int    pcie0_cfg_pme_int_reg : 1   ; /* [25]  */
        unsigned int    pcie0_radm_vendor_msg_reg : 1   ; /* [26]  */
        unsigned int    pcie0_bridge_flush_not : 1   ; /* [27]  */
        unsigned int    pcie0_link_req_rst_not : 1   ; /* [28]  */
        unsigned int    reserved_0            : 3   ; /* [31..29]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_sys_state4;

/* Define the union u_sc_pcie0_axi_mstr_ooo_wr_sts1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_curr_wr_latency : 16  ; /* [15..0]  */
        unsigned int    pcie0_curr_wr_port_sts : 1   ; /* [16]  */
        unsigned int    reserved_0            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_axi_mstr_ooo_wr_sts1;

/* Define the union u_sc_pcie0_axi_mstr_ooo_rd_sts1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_curr_rd_latency : 16  ; /* [15..0]  */
        unsigned int    pcie0_curr_rd_port_sts : 1   ; /* [16]  */
        unsigned int    reserved_0            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_axi_mstr_ooo_rd_sts1;

/* Define the union u_sc_pcie0_dsize_brg_ecc_err */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_rob_ecc_err_detect : 1   ; /* [0]  */
        unsigned int    pcie0_rob_ecc_err_multpl : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_dsize_brg_ecc_err;

/* Define the union u_sc_pcie0_pciephy_ctrl_error */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie0_pciephy_ctrl_error : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie0_pciephy_ctrl_error;

/* Define the union u_sc_pcie1_rxeqinpro_stat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_mac_phy_rxeqinprogress : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_rxeqinpro_stat;

/* Define the union u_sc_pcie1_linkint_rcvry_stat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_cfg_link_eq_req_int : 1   ; /* [0]  */
        unsigned int    pcie1_xmlh_ltssm_state_rcvry_eq : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_linkint_rcvry_stat;

/* Define the union u_sc_pcie1_sys_state0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_gm_cmposer_lookup_err : 1   ; /* [0]  */
        unsigned int    pcie1_radmx_cmposer_lookup_err : 1   ; /* [1]  */
        unsigned int    pcie1_pm_xtlh_block_tlp : 1   ; /* [2]  */
        unsigned int    pcie1_cfg_mem_space_en : 1   ; /* [3]  */
        unsigned int    pcie1_cfg_rcb         : 1   ; /* [4]  */
        unsigned int    pcie1_rdlh_link_up    : 1   ; /* [5]  */
        unsigned int    pcie1_pm_curnt_state  : 3   ; /* [8..6]  */
        unsigned int    pcie1_cfg_aer_rc_err_int : 1   ; /* [9]  */
        unsigned int    pcie1_cfg_aer_int_msg_num : 5   ; /* [14..10]  */
        unsigned int    pcie1_xmlh_link_up    : 1   ; /* [15]  */
        unsigned int    pcie1_wake            : 1   ; /* [16]  */
        unsigned int    pcie1_cfg_eml_control : 1   ; /* [17]  */
        unsigned int    pcie1_hp_pme          : 1   ; /* [18]  */
        unsigned int    pcie1_hp_int          : 1   ; /* [19]  */
        unsigned int    pcie1_hp_msi          : 1   ; /* [20]  */
        unsigned int    pcie1_pm_status       : 1   ; /* [21]  */
        unsigned int    pcie1_ref_clk_req_n   : 1   ; /* [22]  */
        unsigned int    pcie1_p2_exit_reg     : 1   ; /* [23]  */
        unsigned int    pcie1_radm_msg_req_id_low : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_sys_state0;

/* Define the union u_sc_pcie1_sys_state1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_axi_parity_errs_reg : 4   ; /* [3..0]  */
        unsigned int    pcie1_app_parity_errs_reg : 3   ; /* [6..4]  */
        unsigned int    pcie1_pm_linkst_in_l1 : 1   ; /* [7]  */
        unsigned int    pcie1_pm_linkst_in_l2 : 1   ; /* [8]  */
        unsigned int    pcie1_pm_linkst_l2_exit : 1   ; /* [9]  */
        unsigned int    pcie1_mac_phy_power_down : 2   ; /* [11..10]  */
        unsigned int    pcie1_radm_correctabl_err_reg : 1   ; /* [12]  */
        unsigned int    pcie1_radm_nonfatal_err_reg : 1   ; /* [13]  */
        unsigned int    pcie1_radm_fatal_err_reg : 1   ; /* [14]  */
        unsigned int    pcie1_radm_pm_to_pme_reg : 1   ; /* [15]  */
        unsigned int    pcie1_radm_pm_to_ack_reg : 1   ; /* [16]  */
        unsigned int    pcie1_radm_cpl_timeout_reg : 1   ; /* [17]  */
        unsigned int    pcie1_radm_msg_unlock_reg : 1   ; /* [18]  */
        unsigned int    pcie1_cfg_pme_msi_reg : 1   ; /* [19]  */
        unsigned int    pcie1_bridge_flush_not_reg : 1   ; /* [20]  */
        unsigned int    pcie1_link_req_rst_not_reg : 1   ; /* [21]  */
        unsigned int    pcie1_cfg_aer_rc_err_msi : 1   ; /* [22]  */
        unsigned int    pcie1_cfg_sys_err_rc  : 1   ; /* [23]  */
        unsigned int    pcie1_radm_msg_req_id_high : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_sys_state1;

/* Define the union u_sc_pcie1_sys_state4 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_ltssm_state     : 6   ; /* [5..0]  */
        unsigned int    pcie1_mac_phy_rate    : 2   ; /* [7..6]  */
        unsigned int    pcie1_slv_err_int     : 1   ; /* [8]  */
        unsigned int    pcie1_retry_sram_addr : 10  ; /* [18..9]  */
        unsigned int    pcie1_mstr_rresp_int  : 1   ; /* [19]  */
        unsigned int    pcie1_mstr_bresp_int  : 1   ; /* [20]  */
        unsigned int    pcie1_radm_inta_reg   : 1   ; /* [21]  */
        unsigned int    pcie1_radm_intb_reg   : 1   ; /* [22]  */
        unsigned int    pcie1_radm_intc_reg   : 1   ; /* [23]  */
        unsigned int    pcie1_radm_intd_reg   : 1   ; /* [24]  */
        unsigned int    pcie1_cfg_pme_int_reg : 1   ; /* [25]  */
        unsigned int    pcie1_radm_vendor_msg_reg : 1   ; /* [26]  */
        unsigned int    pcie1_bridge_flush_not : 1   ; /* [27]  */
        unsigned int    pcie1_link_req_rst_not : 1   ; /* [28]  */
        unsigned int    reserved_0            : 3   ; /* [31..29]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_sys_state4;

/* Define the union u_sc_pcie1_axi_mstr_ooo_wr_sts1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_curr_wr_latency : 16  ; /* [15..0]  */
        unsigned int    pcie1_curr_wr_port_sts : 1   ; /* [16]  */
        unsigned int    reserved_0            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_axi_mstr_ooo_wr_sts1;

/* Define the union u_sc_pcie1_axi_mstr_ooo_rd_sts1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_curr_rd_latency : 16  ; /* [15..0]  */
        unsigned int    pcie1_curr_rd_port_sts : 1   ; /* [16]  */
        unsigned int    reserved_0            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_axi_mstr_ooo_rd_sts1;

/* Define the union u_sc_pcie1_dsize_brg_ecc_err */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_rob_ecc_err_detect : 1   ; /* [0]  */
        unsigned int    pcie1_rob_ecc_err_multpl : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_dsize_brg_ecc_err;

/* Define the union u_sc_pcie1_pciephy_ctrl_error */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie1_pciephy_ctrl_error : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie1_pciephy_ctrl_error;

/* Define the union u_sc_pcie2_rxeqinpro_stat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_mac_phy_rxeqinprogress : 8   ; /* [7..0]  */
        unsigned int    reserved_0            : 24  ; /* [31..8]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_rxeqinpro_stat;

/* Define the union u_sc_pcie2_linkint_rcvry_stat */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_cfg_link_eq_req_int : 1   ; /* [0]  */
        unsigned int    pcie2_xmlh_ltssm_state_rcvry_eq : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_linkint_rcvry_stat;

/* Define the union u_sc_pcie2_sys_state0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_gm_cmposer_lookup_err : 1   ; /* [0]  */
        unsigned int    pcie2_radmx_cmposer_lookup_err : 1   ; /* [1]  */
        unsigned int    pcie2_pm_xtlh_block_tlp : 1   ; /* [2]  */
        unsigned int    pcie2_cfg_mem_space_en : 1   ; /* [3]  */
        unsigned int    pcie2_cfg_rcb         : 1   ; /* [4]  */
        unsigned int    pcie2_rdlh_link_up    : 1   ; /* [5]  */
        unsigned int    pcie2_pm_curnt_state  : 3   ; /* [8..6]  */
        unsigned int    pcie2_cfg_aer_rc_err_int : 1   ; /* [9]  */
        unsigned int    pcie2_cfg_aer_int_msg_num : 5   ; /* [14..10]  */
        unsigned int    pcie2_xmlh_link_up    : 1   ; /* [15]  */
        unsigned int    pcie2_wake            : 1   ; /* [16]  */
        unsigned int    pcie2_cfg_eml_control : 1   ; /* [17]  */
        unsigned int    pcie2_hp_pme          : 1   ; /* [18]  */
        unsigned int    pcie2_hp_int          : 1   ; /* [19]  */
        unsigned int    pcie2_hp_msi          : 1   ; /* [20]  */
        unsigned int    pcie2_pm_status       : 1   ; /* [21]  */
        unsigned int    pcie2_ref_clk_req_n   : 1   ; /* [22]  */
        unsigned int    pcie2_p2_exit_reg     : 1   ; /* [23]  */
        unsigned int    pcie2_radm_msg_req_id_low : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_sys_state0;

/* Define the union u_sc_pcie2_sys_state1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_axi_parity_errs_reg : 4   ; /* [3..0]  */
        unsigned int    pcie2_app_parity_errs_reg : 3   ; /* [6..4]  */
        unsigned int    pcie2_pm_linkst_in_l1 : 1   ; /* [7]  */
        unsigned int    pcie2_pm_linkst_in_l2 : 1   ; /* [8]  */
        unsigned int    pcie2_pm_linkst_l2_exit : 1   ; /* [9]  */
        unsigned int    pcie2_mac_phy_power_down : 2   ; /* [11..10]  */
        unsigned int    pcie2_radm_correctabl_err_reg : 1   ; /* [12]  */
        unsigned int    pcie2_radm_nonfatal_err_reg : 1   ; /* [13]  */
        unsigned int    pcie2_radm_fatal_err_reg : 1   ; /* [14]  */
        unsigned int    pcie2_radm_pm_to_pme_reg : 1   ; /* [15]  */
        unsigned int    pcie2_radm_pm_to_ack_reg : 1   ; /* [16]  */
        unsigned int    pcie2_radm_cpl_timeout_reg : 1   ; /* [17]  */
        unsigned int    pcie2_radm_msg_unlock_reg : 1   ; /* [18]  */
        unsigned int    pcie2_cfg_pme_msi_reg : 1   ; /* [19]  */
        unsigned int    pcie2_bridge_flush_not_reg : 1   ; /* [20]  */
        unsigned int    pcie2_link_req_rst_not_reg : 1   ; /* [21]  */
        unsigned int    pcie2_cfg_aer_rc_err_msi : 1   ; /* [22]  */
        unsigned int    pcie2_cfg_sys_err_rc  : 1   ; /* [23]  */
        unsigned int    pcie2_radm_msg_req_id_high : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_sys_state1;

/* Define the union u_sc_pcie2_sys_state4 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_ltssm_state     : 6   ; /* [5..0]  */
        unsigned int    pcie2_mac_phy_rate    : 2   ; /* [7..6]  */
        unsigned int    pcie2_slv_err_int     : 1   ; /* [8]  */
        unsigned int    pcie2_retry_sram_addr : 10  ; /* [18..9]  */
        unsigned int    pcie2_mstr_rresp_int  : 1   ; /* [19]  */
        unsigned int    pcie2_mstr_bresp_int  : 1   ; /* [20]  */
        unsigned int    pcie2_radm_inta_reg   : 1   ; /* [21]  */
        unsigned int    pcie2_radm_intb_reg   : 1   ; /* [22]  */
        unsigned int    pcie2_radm_intc_reg   : 1   ; /* [23]  */
        unsigned int    pcie2_radm_intd_reg   : 1   ; /* [24]  */
        unsigned int    pcie2_cfg_pme_int_reg : 1   ; /* [25]  */
        unsigned int    pcie2_radm_vendor_msg_reg : 1   ; /* [26]  */
        unsigned int    pcie2_bridge_flush_not : 1   ; /* [27]  */
        unsigned int    pcie2_link_req_rst_not : 1   ; /* [28]  */
        unsigned int    reserved_0            : 3   ; /* [31..29]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_sys_state4;

/* Define the union u_sc_pcie2_axi_mstr_ooo_wr_sts1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_curr_wr_latency : 16  ; /* [15..0]  */
        unsigned int    pcie2_curr_wr_port_sts : 1   ; /* [16]  */
        unsigned int    reserved_0            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_axi_mstr_ooo_wr_sts1;

/* Define the union u_sc_pcie2_axi_mstr_ooo_rd_sts1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_curr_rd_latency : 16  ; /* [15..0]  */
        unsigned int    pcie2_curr_rd_port_sts : 1   ; /* [16]  */
        unsigned int    reserved_0            : 15  ; /* [31..17]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_axi_mstr_ooo_rd_sts1;

/* Define the union u_sc_pcie2_dsize_brg_ecc_err */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_rob_ecc_err_detect : 1   ; /* [0]  */
        unsigned int    pcie2_rob_ecc_err_multpl : 1   ; /* [1]  */
        unsigned int    reserved_0            : 30  ; /* [31..2]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_dsize_brg_ecc_err;

/* Define the union u_sc_pcie2_pciephy_ctrl_error */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie2_pciephy_ctrl_error : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie2_pciephy_ctrl_error;

/* Define the union u_sc_pcie3_sys_state0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_gm_cmposer_lookup_err : 1   ; /* [0]  */
        unsigned int    pcie3_radmx_cmposer_lookup_err : 1   ; /* [1]  */
        unsigned int    pcie3_pm_xtlh_block_tlp : 1   ; /* [2]  */
        unsigned int    pcie3_cfg_mem_space_en : 1   ; /* [3]  */
        unsigned int    pcie3_cfg_rcb         : 1   ; /* [4]  */
        unsigned int    pcie3_rdlh_link_up    : 1   ; /* [5]  */
        unsigned int    pcie3_pm_curnt_state  : 3   ; /* [8..6]  */
        unsigned int    pcie3_cfg_aer_rc_err_int : 1   ; /* [9]  */
        unsigned int    pcie3_cfg_aer_int_msg_num : 5   ; /* [14..10]  */
        unsigned int    pcie3_xmlh_link_up    : 1   ; /* [15]  */
        unsigned int    pcie3_wake            : 1   ; /* [16]  */
        unsigned int    pcie3_cfg_eml_control : 1   ; /* [17]  */
        unsigned int    pcie3_hp_pme          : 1   ; /* [18]  */
        unsigned int    pcie3_hp_int          : 1   ; /* [19]  */
        unsigned int    pcie3_hp_msi          : 1   ; /* [20]  */
        unsigned int    pcie3_pm_status       : 1   ; /* [21]  */
        unsigned int    pcie3_ref_clk_req_n   : 1   ; /* [22]  */
        unsigned int    pcie3_p2_exit_reg     : 1   ; /* [23]  */
        unsigned int    pcie3_radm_msg_req_id_low : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_sys_state0;

/* Define the union u_sc_pcie3_sys_state1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_axi_parity_errs_reg : 4   ; /* [3..0]  */
        unsigned int    pcie3_app_parity_errs_reg : 3   ; /* [6..4]  */
        unsigned int    pcie3_pm_linkst_in_l1 : 1   ; /* [7]  */
        unsigned int    pcie3_pm_linkst_in_l2 : 1   ; /* [8]  */
        unsigned int    pcie3_pm_linkst_l2_exit : 1   ; /* [9]  */
        unsigned int    pcie3_mac_phy_power_down : 2   ; /* [11..10]  */
        unsigned int    pcie3_radm_correctabl_err_reg : 1   ; /* [12]  */
        unsigned int    pcie3_radm_nonfatal_err_reg : 1   ; /* [13]  */
        unsigned int    pcie3_radm_fatal_err_reg : 1   ; /* [14]  */
        unsigned int    pcie3_radm_pm_to_pme_reg : 1   ; /* [15]  */
        unsigned int    pcie3_radm_pm_to_ack_reg : 1   ; /* [16]  */
        unsigned int    pcie3_radm_cpl_timeout_reg : 1   ; /* [17]  */
        unsigned int    pcie3_radm_msg_unlock_reg : 1   ; /* [18]  */
        unsigned int    pcie3_cfg_pme_msi_reg : 1   ; /* [19]  */
        unsigned int    pcie3_bridge_flush_not_reg : 1   ; /* [20]  */
        unsigned int    pcie3_link_req_rst_not_reg : 1   ; /* [21]  */
        unsigned int    pcie3_cfg_aer_rc_err_msi : 1   ; /* [22]  */
        unsigned int    pcie3_cfg_sys_err_rc  : 1   ; /* [23]  */
        unsigned int    pcie3_radm_msg_req_id_high : 8   ; /* [31..24]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_sys_state1;

/* Define the union u_sc_pcie3_sys_state4 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_ltssm_state     : 6   ; /* [5..0]  */
        unsigned int    pcie3_mac_phy_rate    : 2   ; /* [7..6]  */
        unsigned int    pcie3_slv_err_int     : 1   ; /* [8]  */
        unsigned int    pcie3_retry_sram_addr : 10  ; /* [18..9]  */
        unsigned int    pcie3_mstr_rresp_int  : 1   ; /* [19]  */
        unsigned int    pcie3_mstr_bresp_int  : 1   ; /* [20]  */
        unsigned int    pcie3_radm_inta_reg   : 1   ; /* [21]  */
        unsigned int    pcie3_radm_intb_reg   : 1   ; /* [22]  */
        unsigned int    pcie3_radm_intc_reg   : 1   ; /* [23]  */
        unsigned int    pcie3_radm_intd_reg   : 1   ; /* [24]  */
        unsigned int    pcie3_cfg_pme_int_reg : 1   ; /* [25]  */
        unsigned int    pcie3_radm_vendor_msg_reg : 1   ; /* [26]  */
        unsigned int    pcie3_bridge_flush_not : 1   ; /* [27]  */
        unsigned int    pcie3_link_req_rst_not : 1   ; /* [28]  */
        unsigned int    reserved_0            : 3   ; /* [31..29]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_sys_state4;

/* Define the union u_sc_pcie3_pciephy_ctrl_error */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    pcie3_pciephy_ctrl_error : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_pcie3_pciephy_ctrl_error;

/* Define the union u_sc_skew_st_a_0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_lock_a           : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_st_a_0;

/* Define the union u_sc_skew_st_a_1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_varible_out_a    : 16  ; /* [15..0]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_st_a_1;

/* Define the union u_sc_skew_st_a_3 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_dcell_out_a_h    : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_st_a_3;

/* Define the union u_sc_skew_st_b_0 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_lock_b           : 1   ; /* [0]  */
        unsigned int    reserved_0            : 31  ; /* [31..1]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_st_b_0;

/* Define the union u_sc_skew_st_b_1 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_varible_out_b    : 16  ; /* [15..0]  */
        unsigned int    reserved_0            : 16  ; /* [31..16]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_st_b_1;

/* Define the union u_sc_skew_st_b_3 */
typedef union
{
    /* Define the struct bits */
    struct
    {
        unsigned int    skew_dcell_out_b_h    : 4   ; /* [3..0]  */
        unsigned int    reserved_0            : 28  ; /* [31..4]  */
    } bits;

    /* Define an unsigned member */
    unsigned int    u32;

} u_sc_skew_st_b_3;

#endif /* __C_UNION_DEFINE_H__ */
